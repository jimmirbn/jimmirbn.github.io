/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/static/dist/js/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./static/src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/dom7/dist/dom7.modular.js":
/*!************************************************!*\
  !*** ./node_modules/dom7/dist/dom7.modular.js ***!
  \************************************************/
/*! exports provided: $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$\", function() { return $; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addClass\", function() { return addClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeClass\", function() { return removeClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasClass\", function() { return hasClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleClass\", function() { return toggleClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"attr\", function() { return attr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeAttr\", function() { return removeAttr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prop\", function() { return prop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return data; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeData\", function() { return removeData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataset\", function() { return dataset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"val\", function() { return val; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transform\", function() { return transform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transition\", function() { return transition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return on; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"off\", function() { return off; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trigger\", function() { return trigger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionEnd\", function() { return transitionEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animationEnd\", function() { return animationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"width\", function() { return width; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"outerWidth\", function() { return outerWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"height\", function() { return height; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"outerHeight\", function() { return outerHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"offset\", function() { return offset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hide\", function() { return hide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"show\", function() { return show; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styles\", function() { return styles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return toArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"each\", function() { return each; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"text\", function() { return text; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"is\", function() { return is; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return indexOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"index\", function() { return index; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eq\", function() { return eq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"append\", function() { return append; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appendTo\", function() { return appendTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepend\", function() { return prepend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prependTo\", function() { return prependTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertBefore\", function() { return insertBefore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertAfter\", function() { return insertAfter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"next\", function() { return next; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nextAll\", function() { return nextAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prev\", function() { return prev; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prevAll\", function() { return prevAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"siblings\", function() { return siblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parent\", function() { return parent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parents\", function() { return parents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closest\", function() { return closest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"children\", function() { return children; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detach\", function() { return detach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollTo\", function() { return scrollTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollTop\", function() { return scrollTop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollLeft\", function() { return scrollLeft; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animate\", function() { return animate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stop\", function() { return stop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"click\", function() { return click; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"blur\", function() { return blur; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"focus\", function() { return focus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"focusin\", function() { return focusin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"focusout\", function() { return focusout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyup\", function() { return keyup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keydown\", function() { return keydown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keypress\", function() { return keypress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"submit\", function() { return submit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"change\", function() { return change; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mousedown\", function() { return mousedown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mousemove\", function() { return mousemove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseup\", function() { return mouseup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseenter\", function() { return mouseenter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseleave\", function() { return mouseleave; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseout\", function() { return mouseout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseover\", function() { return mouseover; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"touchstart\", function() { return touchstart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"touchend\", function() { return touchend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"touchmove\", function() { return touchmove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resize\", function() { return resize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scroll\", function() { return scroll; });\n/* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ssr-window */ \"./node_modules/ssr-window/dist/ssr-window.esm.js\");\n/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\n\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"]).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"] || selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"]) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].requestAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].requestAnimationFrame(callback);\n  else if (ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].webkitRequestAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].webkitRequestAnimationFrame(callback);\n  return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].cancelAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].cancelAnimationFrame(id);\n  else if (ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].webkitCancelAnimationFrame) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].webkitCancelAnimationFrame(id);\n  return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"]) {\n    return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"]) {\n    return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"] ? ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].scrollY : el.scrollTop;\n    const scrollLeft = el === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"] ? ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"]) return el === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"];\n  else if (selector === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"]) return el === ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"];\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"document\"].createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = ssr_window__WEBPACK_IMPORTED_MODULE_0__[\"window\"].getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dom7/dist/dom7.modular.js\n");

/***/ }),

/***/ "./node_modules/file-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./static/src/scss/components/js/modal.scss":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/file-loader/dist/cjs.js??ref--6-1!./node_modules/postcss-loader/src??postcss!./node_modules/sass-loader/lib/loader.js??ref--6-3!./static/src/scss/components/js/modal.scss ***!
  \*************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"../css/components/modal.eb19dd.css\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlsZS1sb2FkZXIvZGlzdC9janMuanM/IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8hLi9zdGF0aWMvc3JjL3Njc3MvY29tcG9uZW50cy9qcy9tb2RhbC5zY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9zY3NzL2NvbXBvbmVudHMvanMvbW9kYWwuc2Nzcz83MmYxIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIi4uL2Nzcy9jb21wb25lbnRzL21vZGFsLmViMTlkZC5jc3NcIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/file-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./static/src/scss/components/js/modal.scss\n");

/***/ }),

/***/ "./node_modules/lodash-es/_Symbol.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash-es/_Symbol.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ \"./node_modules/lodash-es/_root.js\");\n\n\n/** Built-in value references. */\nvar Symbol = _root_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Symbol;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Symbol);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TeW1ib2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TeW1ib2wuanM/Y2E1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcm9vdCBmcm9tICcuL19yb290LmpzJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cbmV4cG9ydCBkZWZhdWx0IFN5bWJvbDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_Symbol.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_baseGetTag.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_baseGetTag.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ \"./node_modules/lodash-es/_Symbol.js\");\n/* harmony import */ var _getRawTag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_getRawTag.js */ \"./node_modules/lodash-es/_getRawTag.js\");\n/* harmony import */ var _objectToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_objectToString.js */ \"./node_modules/lodash-es/_objectToString.js\");\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? Object(_getRawTag_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value)\n    : Object(_objectToString_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (baseGetTag);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlR2V0VGFnLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUdldFRhZy5qcz9mMGNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTeW1ib2wgZnJvbSAnLi9fU3ltYm9sLmpzJztcbmltcG9ydCBnZXRSYXdUYWcgZnJvbSAnLi9fZ2V0UmF3VGFnLmpzJztcbmltcG9ydCBvYmplY3RUb1N0cmluZyBmcm9tICcuL19vYmplY3RUb1N0cmluZy5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBudWxsVGFnID0gJ1tvYmplY3QgTnVsbF0nLFxuICAgIHVuZGVmaW5lZFRhZyA9ICdbb2JqZWN0IFVuZGVmaW5lZF0nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0VGFnYCB3aXRob3V0IGZhbGxiYWNrcyBmb3IgYnVnZ3kgZW52aXJvbm1lbnRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZFRhZyA6IG51bGxUYWc7XG4gIH1cbiAgcmV0dXJuIChzeW1Ub1N0cmluZ1RhZyAmJiBzeW1Ub1N0cmluZ1RhZyBpbiBPYmplY3QodmFsdWUpKVxuICAgID8gZ2V0UmF3VGFnKHZhbHVlKVxuICAgIDogb2JqZWN0VG9TdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlR2V0VGFnO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_baseGetTag.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_freeGlobal.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash-es/_freeGlobal.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (freeGlobal);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19mcmVlR2xvYmFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fZnJlZUdsb2JhbC5qcz81ZWEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbmV4cG9ydCBkZWZhdWx0IGZyZWVHbG9iYWw7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_freeGlobal.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_getRawTag.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash-es/_getRawTag.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Symbol.js */ \"./node_modules/lodash-es/_Symbol.js\");\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? _Symbol_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getRawTag);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanM/Y2I1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ltYm9sIGZyb20gJy4vX1N5bWJvbC5qcyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0UmF3VGFnO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_getRawTag.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_objectToString.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash-es/_objectToString.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (objectToString);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vYmplY3RUb1N0cmluZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX29iamVjdFRvU3RyaW5nLmpzPzViZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyB1c2luZyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG9iamVjdFRvU3RyaW5nO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_objectToString.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/_root.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash-es/_root.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_freeGlobal.js */ \"./node_modules/lodash-es/_freeGlobal.js\");\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] || freeSelf || Function('return this')();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (root);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19yb290LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fcm9vdC5qcz8yNmVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcmVlR2xvYmFsIGZyb20gJy4vX2ZyZWVHbG9iYWwuanMnO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHNlbGZgLiAqL1xudmFyIGZyZWVTZWxmID0gdHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG5cbi8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL1xudmFyIHJvb3QgPSBmcmVlR2xvYmFsIHx8IGZyZWVTZWxmIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvb3Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/_root.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/debounce.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/debounce.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ \"./node_modules/lodash-es/isObject.js\");\n/* harmony import */ var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./now.js */ \"./node_modules/lodash-es/now.js\");\n/* harmony import */ var _toNumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toNumber.js */ \"./node_modules/lodash-es/toNumber.js\");\n\n\n\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(wait) || 0;\n  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(Object(_toNumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Object(_now_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])());\n  }\n\n  function debounced() {\n    var time = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (debounce);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2RlYm91bmNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9kZWJvdW5jZS5qcz84NWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcbmltcG9ydCBub3cgZnJvbSAnLi9ub3cuanMnO1xuaW1wb3J0IHRvTnVtYmVyIGZyb20gJy4vdG9OdW1iZXIuanMnO1xuXG4vKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXgsXG4gICAgbmF0aXZlTWluID0gTWF0aC5taW47XG5cbi8qKlxuICogQ3JlYXRlcyBhIGRlYm91bmNlZCBmdW5jdGlvbiB0aGF0IGRlbGF5cyBpbnZva2luZyBgZnVuY2AgdW50aWwgYWZ0ZXIgYHdhaXRgXG4gKiBtaWxsaXNlY29uZHMgaGF2ZSBlbGFwc2VkIHNpbmNlIHRoZSBsYXN0IHRpbWUgdGhlIGRlYm91bmNlZCBmdW5jdGlvbiB3YXNcbiAqIGludm9rZWQuIFRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gY29tZXMgd2l0aCBhIGBjYW5jZWxgIG1ldGhvZCB0byBjYW5jZWxcbiAqIGRlbGF5ZWQgYGZ1bmNgIGludm9jYXRpb25zIGFuZCBhIGBmbHVzaGAgbWV0aG9kIHRvIGltbWVkaWF0ZWx5IGludm9rZSB0aGVtLlxuICogUHJvdmlkZSBgb3B0aW9uc2AgdG8gaW5kaWNhdGUgd2hldGhlciBgZnVuY2Agc2hvdWxkIGJlIGludm9rZWQgb24gdGhlXG4gKiBsZWFkaW5nIGFuZC9vciB0cmFpbGluZyBlZGdlIG9mIHRoZSBgd2FpdGAgdGltZW91dC4gVGhlIGBmdW5jYCBpcyBpbnZva2VkXG4gKiB3aXRoIHRoZSBsYXN0IGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uLiBTdWJzZXF1ZW50XG4gKiBjYWxscyB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHJldHVybiB0aGUgcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYFxuICogaW52b2NhdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogSWYgYGxlYWRpbmdgIGFuZCBgdHJhaWxpbmdgIG9wdGlvbnMgYXJlIGB0cnVlYCwgYGZ1bmNgIGlzXG4gKiBpbnZva2VkIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0IG9ubHkgaWYgdGhlIGRlYm91bmNlZCBmdW5jdGlvblxuICogaXMgaW52b2tlZCBtb3JlIHRoYW4gb25jZSBkdXJpbmcgdGhlIGB3YWl0YCB0aW1lb3V0LlxuICpcbiAqIElmIGB3YWl0YCBpcyBgMGAgYW5kIGBsZWFkaW5nYCBpcyBgZmFsc2VgLCBgZnVuY2AgaW52b2NhdGlvbiBpcyBkZWZlcnJlZFxuICogdW50aWwgdG8gdGhlIG5leHQgdGljaywgc2ltaWxhciB0byBgc2V0VGltZW91dGAgd2l0aCBhIHRpbWVvdXQgb2YgYDBgLlxuICpcbiAqIFNlZSBbRGF2aWQgQ29yYmFjaG8ncyBhcnRpY2xlXShodHRwczovL2Nzcy10cmlja3MuY29tL2RlYm91bmNpbmctdGhyb3R0bGluZy1leHBsYWluZWQtZXhhbXBsZXMvKVxuICogZm9yIGRldGFpbHMgb3ZlciB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBgXy5kZWJvdW5jZWAgYW5kIGBfLnRocm90dGxlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRlYm91bmNlLlxuICogQHBhcmFtIHtudW1iZXJ9IFt3YWl0PTBdIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmxlYWRpbmc9ZmFsc2VdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1heFdhaXRdXG4gKiAgVGhlIG1heGltdW0gdGltZSBgZnVuY2AgaXMgYWxsb3dlZCB0byBiZSBkZWxheWVkIGJlZm9yZSBpdCdzIGludm9rZWQuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGRlYm91bmNlZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gQXZvaWQgY29zdGx5IGNhbGN1bGF0aW9ucyB3aGlsZSB0aGUgd2luZG93IHNpemUgaXMgaW4gZmx1eC5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKGNhbGN1bGF0ZUxheW91dCwgMTUwKSk7XG4gKlxuICogLy8gSW52b2tlIGBzZW5kTWFpbGAgd2hlbiBjbGlja2VkLCBkZWJvdW5jaW5nIHN1YnNlcXVlbnQgY2FsbHMuXG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgXy5kZWJvdW5jZShzZW5kTWFpbCwgMzAwLCB7XG4gKiAgICdsZWFkaW5nJzogdHJ1ZSxcbiAqICAgJ3RyYWlsaW5nJzogZmFsc2VcbiAqIH0pKTtcbiAqXG4gKiAvLyBFbnN1cmUgYGJhdGNoTG9nYCBpcyBpbnZva2VkIG9uY2UgYWZ0ZXIgMSBzZWNvbmQgb2YgZGVib3VuY2VkIGNhbGxzLlxuICogdmFyIGRlYm91bmNlZCA9IF8uZGVib3VuY2UoYmF0Y2hMb2csIDI1MCwgeyAnbWF4V2FpdCc6IDEwMDAgfSk7XG4gKiB2YXIgc291cmNlID0gbmV3IEV2ZW50U291cmNlKCcvc3RyZWFtJyk7XG4gKiBqUXVlcnkoc291cmNlKS5vbignbWVzc2FnZScsIGRlYm91bmNlZCk7XG4gKlxuICogLy8gQ2FuY2VsIHRoZSB0cmFpbGluZyBkZWJvdW5jZWQgaW52b2NhdGlvbi5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGRlYm91bmNlZC5jYW5jZWwpO1xuICovXG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gIHZhciBsYXN0QXJncyxcbiAgICAgIGxhc3RUaGlzLFxuICAgICAgbWF4V2FpdCxcbiAgICAgIHJlc3VsdCxcbiAgICAgIHRpbWVySWQsXG4gICAgICBsYXN0Q2FsbFRpbWUsXG4gICAgICBsYXN0SW52b2tlVGltZSA9IDAsXG4gICAgICBsZWFkaW5nID0gZmFsc2UsXG4gICAgICBtYXhpbmcgPSBmYWxzZSxcbiAgICAgIHRyYWlsaW5nID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgfVxuICB3YWl0ID0gdG9OdW1iZXIod2FpdCkgfHwgMDtcbiAgaWYgKGlzT2JqZWN0KG9wdGlvbnMpKSB7XG4gICAgbGVhZGluZyA9ICEhb3B0aW9ucy5sZWFkaW5nO1xuICAgIG1heGluZyA9ICdtYXhXYWl0JyBpbiBvcHRpb25zO1xuICAgIG1heFdhaXQgPSBtYXhpbmcgPyBuYXRpdmVNYXgodG9OdW1iZXIob3B0aW9ucy5tYXhXYWl0KSB8fCAwLCB3YWl0KSA6IG1heFdhaXQ7XG4gICAgdHJhaWxpbmcgPSAndHJhaWxpbmcnIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgfVxuXG4gIGZ1bmN0aW9uIGludm9rZUZ1bmModGltZSkge1xuICAgIHZhciBhcmdzID0gbGFzdEFyZ3MsXG4gICAgICAgIHRoaXNBcmcgPSBsYXN0VGhpcztcblxuICAgIGxhc3RBcmdzID0gbGFzdFRoaXMgPSB1bmRlZmluZWQ7XG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxlYWRpbmdFZGdlKHRpbWUpIHtcbiAgICAvLyBSZXNldCBhbnkgYG1heFdhaXRgIHRpbWVyLlxuICAgIGxhc3RJbnZva2VUaW1lID0gdGltZTtcbiAgICAvLyBTdGFydCB0aGUgdGltZXIgZm9yIHRoZSB0cmFpbGluZyBlZGdlLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgLy8gSW52b2tlIHRoZSBsZWFkaW5nIGVkZ2UuXG4gICAgcmV0dXJuIGxlYWRpbmcgPyBpbnZva2VGdW5jKHRpbWUpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtYWluaW5nV2FpdCh0aW1lKSB7XG4gICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSxcbiAgICAgICAgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZSxcbiAgICAgICAgdGltZVdhaXRpbmcgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG5cbiAgICByZXR1cm4gbWF4aW5nXG4gICAgICA/IG5hdGl2ZU1pbih0aW1lV2FpdGluZywgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpXG4gICAgICA6IHRpbWVXYWl0aW5nO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lO1xuXG4gICAgLy8gRWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwsIGFjdGl2aXR5IGhhcyBzdG9wcGVkIGFuZCB3ZSdyZSBhdCB0aGVcbiAgICAvLyB0cmFpbGluZyBlZGdlLCB0aGUgc3lzdGVtIHRpbWUgaGFzIGdvbmUgYmFja3dhcmRzIGFuZCB3ZSdyZSB0cmVhdGluZ1xuICAgIC8vIGl0IGFzIHRoZSB0cmFpbGluZyBlZGdlLCBvciB3ZSd2ZSBoaXQgdGhlIGBtYXhXYWl0YCBsaW1pdC5cbiAgICByZXR1cm4gKGxhc3RDYWxsVGltZSA9PT0gdW5kZWZpbmVkIHx8ICh0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0KSB8fFxuICAgICAgKHRpbWVTaW5jZUxhc3RDYWxsIDwgMCkgfHwgKG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgIHJldHVybiB0cmFpbGluZ0VkZ2UodGltZSk7XG4gICAgfVxuICAgIC8vIFJlc3RhcnQgdGhlIHRpbWVyLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgIHRpbWVySWQgPSB1bmRlZmluZWQ7XG5cbiAgICAvLyBPbmx5IGludm9rZSBpZiB3ZSBoYXZlIGBsYXN0QXJnc2Agd2hpY2ggbWVhbnMgYGZ1bmNgIGhhcyBiZWVuXG4gICAgLy8gZGVib3VuY2VkIGF0IGxlYXN0IG9uY2UuXG4gICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICB9XG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGlmICh0aW1lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICB9XG4gICAgbGFzdEludm9rZVRpbWUgPSAwO1xuICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgcmV0dXJuIHRpbWVySWQgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKSxcbiAgICAgICAgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcblxuICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuXG4gICAgaWYgKGlzSW52b2tpbmcpIHtcbiAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgIC8vIEhhbmRsZSBpbnZvY2F0aW9ucyBpbiBhIHRpZ2h0IGxvb3AuXG4gICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgIHJldHVybiBpbnZva2VGdW5jKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbDtcbiAgZGVib3VuY2VkLmZsdXNoID0gZmx1c2g7XG4gIHJldHVybiBkZWJvdW5jZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGRlYm91bmNlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/debounce.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isObject.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isObject);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzT2JqZWN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc09iamVjdC5qcz8yMzMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc09iamVjdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isObject.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isObjectLike.js":
/*!************************************************!*\
  !*** ./node_modules/lodash-es/isObjectLike.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isObjectLike);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzT2JqZWN0TGlrZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNPYmplY3RMaWtlLmpzPzExNDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzT2JqZWN0TGlrZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isObjectLike.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/isSymbol.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/isSymbol.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_baseGetTag.js */ \"./node_modules/lodash-es/_baseGetTag.js\");\n/* harmony import */ var _isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObjectLike.js */ \"./node_modules/lodash-es/isObjectLike.js\");\n\n\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (Object(_isObjectLike_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value) && Object(_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value) == symbolTag);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isSymbol);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzU3ltYm9sLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc1N5bWJvbC5qcz8xYmM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlR2V0VGFnIGZyb20gJy4vX2Jhc2VHZXRUYWcuanMnO1xuaW1wb3J0IGlzT2JqZWN0TGlrZSBmcm9tICcuL2lzT2JqZWN0TGlrZS5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNTeW1ib2w7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/isSymbol.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/now.js":
/*!***************************************!*\
  !*** ./node_modules/lodash-es/now.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_root.js */ \"./node_modules/lodash-es/_root.js\");\n\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return _root_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Date.now();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (now);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL25vdy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvbm93LmpzPzZiMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJvb3QgZnJvbSAnLi9fcm9vdC5qcyc7XG5cbi8qKlxuICogR2V0cyB0aGUgdGltZXN0YW1wIG9mIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRoYXQgaGF2ZSBlbGFwc2VkIHNpbmNlXG4gKiB0aGUgVW5peCBlcG9jaCAoMSBKYW51YXJ5IDE5NzAgMDA6MDA6MDAgVVRDKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuNC4wXG4gKiBAY2F0ZWdvcnkgRGF0ZVxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgdGltZXN0YW1wLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmRlZmVyKGZ1bmN0aW9uKHN0YW1wKSB7XG4gKiAgIGNvbnNvbGUubG9nKF8ubm93KCkgLSBzdGFtcCk7XG4gKiB9LCBfLm5vdygpKTtcbiAqIC8vID0+IExvZ3MgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdG9vayBmb3IgdGhlIGRlZmVycmVkIGludm9jYXRpb24uXG4gKi9cbnZhciBub3cgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHJvb3QuRGF0ZS5ub3coKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG5vdztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/now.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/throttle.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/throttle.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/lodash-es/debounce.js\");\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject.js */ \"./node_modules/lodash-es/isObject.js\");\n\n\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return Object(_debounce_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (throttle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3Rocm90dGxlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy90aHJvdHRsZS5qcz81MTdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJvdW5jZSBmcm9tICcuL2RlYm91bmNlLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcblxuLyoqIEVycm9yIG1lc3NhZ2UgY29uc3RhbnRzLiAqL1xudmFyIEZVTkNfRVJST1JfVEVYVCA9ICdFeHBlY3RlZCBhIGZ1bmN0aW9uJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgdGhyb3R0bGVkIGZ1bmN0aW9uIHRoYXQgb25seSBpbnZva2VzIGBmdW5jYCBhdCBtb3N0IG9uY2UgcGVyXG4gKiBldmVyeSBgd2FpdGAgbWlsbGlzZWNvbmRzLiBUaGUgdGhyb3R0bGVkIGZ1bmN0aW9uIGNvbWVzIHdpdGggYSBgY2FuY2VsYFxuICogbWV0aG9kIHRvIGNhbmNlbCBkZWxheWVkIGBmdW5jYCBpbnZvY2F0aW9ucyBhbmQgYSBgZmx1c2hgIG1ldGhvZCB0b1xuICogaW1tZWRpYXRlbHkgaW52b2tlIHRoZW0uIFByb3ZpZGUgYG9wdGlvbnNgIHRvIGluZGljYXRlIHdoZXRoZXIgYGZ1bmNgXG4gKiBzaG91bGQgYmUgaW52b2tlZCBvbiB0aGUgbGVhZGluZyBhbmQvb3IgdHJhaWxpbmcgZWRnZSBvZiB0aGUgYHdhaXRgXG4gKiB0aW1lb3V0LiBUaGUgYGZ1bmNgIGlzIGludm9rZWQgd2l0aCB0aGUgbGFzdCBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlXG4gKiB0aHJvdHRsZWQgZnVuY3Rpb24uIFN1YnNlcXVlbnQgY2FsbHMgdG8gdGhlIHRocm90dGxlZCBmdW5jdGlvbiByZXR1cm4gdGhlXG4gKiByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgIGludm9jYXRpb24uXG4gKlxuICogKipOb3RlOioqIElmIGBsZWFkaW5nYCBhbmQgYHRyYWlsaW5nYCBvcHRpb25zIGFyZSBgdHJ1ZWAsIGBmdW5jYCBpc1xuICogaW52b2tlZCBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dCBvbmx5IGlmIHRoZSB0aHJvdHRsZWQgZnVuY3Rpb25cbiAqIGlzIGludm9rZWQgbW9yZSB0aGFuIG9uY2UgZHVyaW5nIHRoZSBgd2FpdGAgdGltZW91dC5cbiAqXG4gKiBJZiBgd2FpdGAgaXMgYDBgIGFuZCBgbGVhZGluZ2AgaXMgYGZhbHNlYCwgYGZ1bmNgIGludm9jYXRpb24gaXMgZGVmZXJyZWRcbiAqIHVudGlsIHRvIHRoZSBuZXh0IHRpY2ssIHNpbWlsYXIgdG8gYHNldFRpbWVvdXRgIHdpdGggYSB0aW1lb3V0IG9mIGAwYC5cbiAqXG4gKiBTZWUgW0RhdmlkIENvcmJhY2hvJ3MgYXJ0aWNsZV0oaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9kZWJvdW5jaW5nLXRocm90dGxpbmctZXhwbGFpbmVkLWV4YW1wbGVzLylcbiAqIGZvciBkZXRhaWxzIG92ZXIgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gYF8udGhyb3R0bGVgIGFuZCBgXy5kZWJvdW5jZWAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB0aHJvdHRsZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbd2FpdD0wXSBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB0aHJvdHRsZSBpbnZvY2F0aW9ucyB0by5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gVGhlIG9wdGlvbnMgb2JqZWN0LlxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5sZWFkaW5nPXRydWVdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy50cmFpbGluZz10cnVlXVxuICogIFNwZWNpZnkgaW52b2tpbmcgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyB0aHJvdHRsZWQgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIEF2b2lkIGV4Y2Vzc2l2ZWx5IHVwZGF0aW5nIHRoZSBwb3NpdGlvbiB3aGlsZSBzY3JvbGxpbmcuXG4gKiBqUXVlcnkod2luZG93KS5vbignc2Nyb2xsJywgXy50aHJvdHRsZSh1cGRhdGVQb3NpdGlvbiwgMTAwKSk7XG4gKlxuICogLy8gSW52b2tlIGByZW5ld1Rva2VuYCB3aGVuIHRoZSBjbGljayBldmVudCBpcyBmaXJlZCwgYnV0IG5vdCBtb3JlIHRoYW4gb25jZSBldmVyeSA1IG1pbnV0ZXMuXG4gKiB2YXIgdGhyb3R0bGVkID0gXy50aHJvdHRsZShyZW5ld1Rva2VuLCAzMDAwMDAsIHsgJ3RyYWlsaW5nJzogZmFsc2UgfSk7XG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgdGhyb3R0bGVkKTtcbiAqXG4gKiAvLyBDYW5jZWwgdGhlIHRyYWlsaW5nIHRocm90dGxlZCBpbnZvY2F0aW9uLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgdGhyb3R0bGVkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxlYWRpbmcgPSB0cnVlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgIGxlYWRpbmcgPSAnbGVhZGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy5sZWFkaW5nIDogbGVhZGluZztcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG4gIHJldHVybiBkZWJvdW5jZShmdW5jLCB3YWl0LCB7XG4gICAgJ2xlYWRpbmcnOiBsZWFkaW5nLFxuICAgICdtYXhXYWl0Jzogd2FpdCxcbiAgICAndHJhaWxpbmcnOiB0cmFpbGluZ1xuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdGhyb3R0bGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/throttle.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/toNumber.js":
/*!********************************************!*\
  !*** ./node_modules/lodash-es/toNumber.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.js */ \"./node_modules/lodash-es/isObject.js\");\n/* harmony import */ var _isSymbol_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isSymbol.js */ \"./node_modules/lodash-es/isSymbol.js\");\n\n\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (Object(_isSymbol_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value)) {\n    return NAN;\n  }\n  if (Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = Object(_isObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (toNumber);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3RvTnVtYmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy90b051bWJlci5qcz80YTI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcbmltcG9ydCBpc1N5bWJvbCBmcm9tICcuL2lzU3ltYm9sLmpzJztcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgTkFOID0gMCAvIDA7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuICovXG52YXIgcmVUcmltID0gL15cXHMrfFxccyskL2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBiYWQgc2lnbmVkIGhleGFkZWNpbWFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JhZEhleCA9IC9eWy0rXTB4WzAtOWEtZl0rJC9pO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmluYXJ5IHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JpbmFyeSA9IC9eMGJbMDFdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG9jdGFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc09jdGFsID0gL14wb1swLTddKyQvaTtcblxuLyoqIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHdpdGhvdXQgYSBkZXBlbmRlbmN5IG9uIGByb290YC4gKi9cbnZhciBmcmVlUGFyc2VJbnQgPSBwYXJzZUludDtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMuMik7XG4gKiAvLyA9PiAzLjJcbiAqXG4gKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gNWUtMzI0XG4gKlxuICogXy50b051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiBJbmZpbml0eVxuICpcbiAqIF8udG9OdW1iZXIoJzMuMicpO1xuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiBOQU47XG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IChvdGhlciArICcnKSA6IG90aGVyO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6ICt2YWx1ZTtcbiAgfVxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCAnJyk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB0b051bWJlcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/toNumber.js\n");

/***/ }),

/***/ "./node_modules/ssr-window/dist/ssr-window.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/ssr-window/dist/ssr-window.esm.js ***!
  \********************************************************/
/*! exports provided: window, document */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"window\", function() { return win; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"document\", function() { return doc; });\n/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3NyLXdpbmRvdy9kaXN0L3Nzci13aW5kb3cuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Nzci13aW5kb3cvZGlzdC9zc3Itd2luZG93LmVzbS5qcz9kN2QyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU1NSIFdpbmRvdyAxLjAuMVxuICogQmV0dGVyIGhhbmRsaW5nIGZvciB3aW5kb3cgb2JqZWN0IGluIFNTUiBlbnZpcm9ubWVudFxuICogaHR0cHM6Ly9naXRodWIuY29tL25vbGltaXRzNHdlYi9zc3Itd2luZG93XG4gKlxuICogQ29weXJpZ2h0IDIwMTgsIFZsYWRpbWlyIEtoYXJsYW1waWRpXG4gKlxuICogTGljZW5zZWQgdW5kZXIgTUlUXG4gKlxuICogUmVsZWFzZWQgb246IEp1bHkgMTgsIDIwMThcbiAqL1xudmFyIGRvYyA9ICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSA/IHtcbiAgYm9keToge30sXG4gIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoKSB7fSxcbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcigpIHt9LFxuICBhY3RpdmVFbGVtZW50OiB7XG4gICAgYmx1cjogZnVuY3Rpb24gYmx1cigpIHt9LFxuICAgIG5vZGVOYW1lOiAnJyxcbiAgfSxcbiAgcXVlcnlTZWxlY3RvcjogZnVuY3Rpb24gcXVlcnlTZWxlY3RvcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbiAgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24gcXVlcnlTZWxlY3RvckFsbCgpIHtcbiAgICByZXR1cm4gW107XG4gIH0sXG4gIGdldEVsZW1lbnRCeUlkOiBmdW5jdGlvbiBnZXRFbGVtZW50QnlJZCgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbiAgY3JlYXRlRXZlbnQ6IGZ1bmN0aW9uIGNyZWF0ZUV2ZW50KCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbml0RXZlbnQ6IGZ1bmN0aW9uIGluaXRFdmVudCgpIHt9LFxuICAgIH07XG4gIH0sXG4gIGNyZWF0ZUVsZW1lbnQ6IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgIGNoaWxkTm9kZXM6IFtdLFxuICAgICAgc3R5bGU6IHt9LFxuICAgICAgc2V0QXR0cmlidXRlOiBmdW5jdGlvbiBzZXRBdHRyaWJ1dGUoKSB7fSxcbiAgICAgIGdldEVsZW1lbnRzQnlUYWdOYW1lOiBmdW5jdGlvbiBnZXRFbGVtZW50c0J5VGFnTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfSxcbiAgICB9O1xuICB9LFxuICBsb2NhdGlvbjogeyBoYXNoOiAnJyB9LFxufSA6IGRvY3VtZW50OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbnZhciB3aW4gPSAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpID8ge1xuICBkb2N1bWVudDogZG9jLFxuICBuYXZpZ2F0b3I6IHtcbiAgICB1c2VyQWdlbnQ6ICcnLFxuICB9LFxuICBsb2NhdGlvbjoge30sXG4gIGhpc3Rvcnk6IHt9LFxuICBDdXN0b21FdmVudDogZnVuY3Rpb24gQ3VzdG9tRXZlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoKSB7fSxcbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcigpIHt9LFxuICBnZXRDb21wdXRlZFN0eWxlOiBmdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlKCkge1xuICAgIHJldHVybiB7XG4gICAgICBnZXRQcm9wZXJ0eVZhbHVlOiBmdW5jdGlvbiBnZXRQcm9wZXJ0eVZhbHVlKCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9LFxuICAgIH07XG4gIH0sXG4gIEltYWdlOiBmdW5jdGlvbiBJbWFnZSgpIHt9LFxuICBEYXRlOiBmdW5jdGlvbiBEYXRlKCkge30sXG4gIHNjcmVlbjoge30sXG4gIHNldFRpbWVvdXQ6IGZ1bmN0aW9uIHNldFRpbWVvdXQoKSB7fSxcbiAgY2xlYXJUaW1lb3V0OiBmdW5jdGlvbiBjbGVhclRpbWVvdXQoKSB7fSxcbn0gOiB3aW5kb3c7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuZXhwb3J0IHsgd2luIGFzIHdpbmRvdywgZG9jIGFzIGRvY3VtZW50IH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ssr-window/dist/ssr-window.esm.js\n");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyleUrl.js":
/*!******************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyleUrl.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nfunction addAttrs (element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nmodule.exports = function addStyleUrl (url, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\toptions.hmr = typeof options.hmr === 'undefined' ? true : options.hmr;\n\n\tvar link = document.createElement(\"link\");\n\n\tlink.rel = \"stylesheet\";\n\tlink.type = \"text/css\";\n\tlink.href = url;\n\n\taddAttrs(link, options.attrs);\n\n\tvar head = document.getElementsByTagName(\"head\")[0];\n\n\thead.appendChild(link);\n\n\tif (options.hmr && module.hot) {\n\t\treturn function(url) {\n\t\t\tif(typeof url === \"string\") {\n\t\t\t\tlink.href = url;\n\t\t\t} else {\n\t\t\t\thead.removeChild(link);\n\t\t\t}\n\t\t};\n\t}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZVVybC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlVXJsLmpzP2Y2OGMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsZW1lbnQsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhZGRTdHlsZVVybCAodXJsLCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0b3B0aW9ucy5obXIgPSB0eXBlb2Ygb3B0aW9ucy5obXIgPT09ICd1bmRlZmluZWQnID8gdHJ1ZSA6IG9wdGlvbnMuaG1yO1xuXG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0bGluay5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblx0bGluay50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHRsaW5rLmhyZWYgPSB1cmw7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cblx0dmFyIGhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XG5cblx0aGVhZC5hcHBlbmRDaGlsZChsaW5rKTtcblxuXHRpZiAob3B0aW9ucy5obXIgJiYgbW9kdWxlLmhvdCkge1xuXHRcdHJldHVybiBmdW5jdGlvbih1cmwpIHtcblx0XHRcdGlmKHR5cGVvZiB1cmwgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0bGluay5ocmVmID0gdXJsO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGVhZC5yZW1vdmVDaGlsZChsaW5rKTtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/lib/addStyleUrl.js\n");

/***/ }),

/***/ "./node_modules/swiper/dist/js/swiper.esm.js":
/*!***************************************************!*\
  !*** ./node_modules/swiper/dist/js/swiper.esm.js ***!
  \***************************************************/
/*! exports provided: Swiper, Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Swiper\", function() { return Swiper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Virtual\", function() { return virtual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keyboard\", function() { return keyboard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Mousewheel\", function() { return mousewheel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Navigation\", function() { return navigation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pagination\", function() { return pagination; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scrollbar\", function() { return scrollbar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parallax\", function() { return parallax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Zoom\", function() { return zoom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Lazy\", function() { return lazy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Controller\", function() { return controller; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A11y\", function() { return a11y$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"History\", function() { return history; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HashNavigation\", function() { return hashNavigation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Autoplay\", function() { return autoplay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EffectFade\", function() { return effectFade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EffectCube\", function() { return effectCube; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EffectFlip\", function() { return effectFlip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EffectCoverflow\", function() { return effectCoverflow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Thumbs\", function() { return thumbs; });\n/* harmony import */ var dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dom7/dist/dom7.modular */ \"./node_modules/dom7/dist/dom7.modular.js\");\n/* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ssr-window */ \"./node_modules/ssr-window/dist/ssr-window.esm.js\");\n/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\n\n\n\nconst Methods = {\n  addClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"addClass\"],\n  removeClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"removeClass\"],\n  hasClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"hasClass\"],\n  toggleClass: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"toggleClass\"],\n  attr: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"attr\"],\n  removeAttr: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"removeAttr\"],\n  data: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"data\"],\n  transform: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"transform\"],\n  transition: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"transition\"],\n  on: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"on\"],\n  off: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"off\"],\n  trigger: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"trigger\"],\n  transitionEnd: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"transitionEnd\"],\n  outerWidth: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"outerWidth\"],\n  outerHeight: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"outerHeight\"],\n  offset: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"offset\"],\n  css: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"css\"],\n  each: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"each\"],\n  html: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"html\"],\n  text: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"text\"],\n  is: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"is\"],\n  index: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"index\"],\n  eq: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"eq\"],\n  append: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"append\"],\n  prepend: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"prepend\"],\n  next: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"next\"],\n  nextAll: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"nextAll\"],\n  prev: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"prev\"],\n  prevAll: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"prevAll\"],\n  parent: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"parent\"],\n  parents: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"parents\"],\n  closest: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"closest\"],\n  find: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"find\"],\n  children: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"children\"],\n  remove: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"remove\"],\n  add: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"add\"],\n  styles: dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"styles\"],\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"].fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].getComputedStyle(el, null);\n\n    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].createElement('div');\n  return {\n    touch: (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Modernizr && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Modernizr.touch === true) || (function checkTouch() {\n      return !!((ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.maxTouchPoints > 0) || ('ontouchstart' in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"]) || (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].DocumentTouch && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"] instanceof ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].DocumentTouch));\n    }()),\n\n    pointerEvents: !!(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.pointerEnabled || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].PointerEvent || ('maxTouchPoints' in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Modernizr && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"] || 'WebkitMutationObserver' in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"]);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"];\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent.match(/Trident/g) || !!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent.match(/MSIE/g),\n    isEdge: !!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].cordova || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].phonegap,\n    phonegap: ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].cordova || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if (Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement\n      && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement).is(data.formElements)\n      && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement !== e.target\n    ) {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement) {\n    if (e.target === ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener('mousemove', swiper.onTouchMove, capture);\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener('mousemove', swiper.onTouchMove, capture);\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"];\n\n    // Find el\n    const $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"];\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].removeEventListener('resize', swiper.resize.resizeHandler);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].MutationObserver || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].requestAnimationFrame) {\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].requestAnimationFrame(observerUpdate);\n      } else {\n        ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(params.renderSlide.call(swiper, slide, index))\n      : Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement.nodeName && (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement.nodeName.toLowerCase() === 'input' || ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].innerWidth;\n      const windowHeight = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"]).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"]).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"];\n\n  if (!isSupported) {\n    const element = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].implementation\n    && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).is($prevEl)\n        && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slideEl).attr('data-swiper-slide-index');\n      }\n      return Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slideEl).attr('data-swiper-slide-index') : Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history || !ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.replaceState({ value }, null, value);\n    } else {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history && ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.replaceState) {\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"].history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"document\"].location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"]).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(ssr_window__WEBPACK_IMPORTED_MODULE_1__[\"window\"]).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(Object(dom7_dist_dom7_modular__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/swiper/dist/js/swiper.esm.js\n");

/***/ }),

/***/ "./node_modules/universal-tilt.js/lib/universal-tilt.min.js":
/*!******************************************************************!*\
  !*** ./node_modules/universal-tilt.js/lib/universal-tilt.min.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {!function(e,t){ true?module.exports=t():undefined}(\"object\"!=typeof window?global.window=global:window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i,s=(i=n(1))&&i.__esModule?i:{default:i};var o=s.default;t.default=o,t.default=s.default,e.exports=t.default},function(e,t,n){\"use strict\";function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var o=function(){function e(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),s(this,\"onMouseEnter\",function(){n.updateElementPosition(),n.transitions(),\"function\"==typeof n.callbacks.onMouseEnter&&n.callbacks.onMouseEnter(n.element)}),s(this,\"onMouseMove\",function(e){null!==n.updateCall&&cancelAnimationFrame(n.updateCall),n.event=e,n.updateElementPosition(),n.updateCall=requestAnimationFrame(function(){return n.update()}),\"function\"==typeof n.callbacks.onMouseMove&&n.callbacks.onMouseMove(n.element)}),s(this,\"onMouseLeave\",function(){n.transitions(),requestAnimationFrame(function(){return n.reset()}),\"function\"==typeof n.callbacks.onMouseLeave&&n.callbacks.onMouseLeave(n.element)}),s(this,\"onDeviceMove\",function(e){n.event=e,n.update(),n.updateElementPosition(),n.transitions(),\"function\"==typeof n.callbacks.onDeviceMove&&n.callbacks.onDeviceMove(n.element)}),this.element=t,this.callbacks=o,this.settings=this.extendSettings(i),\"function\"==typeof this.callbacks.onInit&&this.callbacks.onInit(this.element),this.reverse=this.settings.reverse?-1:1,this.settings.shine&&this.shine(),this.element.style.transform=\"perspective(\".concat(this.settings.perspective,\"px)\"),this.addEventListeners()}var t,n,o;return t=e,o=[{key:\"init\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.elements,i=t.settings,s=t.callbacks;n instanceof Node&&(n=[n]),n instanceof NodeList&&(n=[].slice.call(n));var o=!0,a=!1,l=void 0;try{for(var r,c=n[Symbol.iterator]();!(o=(r=c.next()).done);o=!0){var u=r.value;\"universalTilt\"in u||(u.universalTilt=new e(u,i,s))}}catch(e){a=!0,l=e}finally{try{o||null==c.return||c.return()}finally{if(a)throw l}}}}],(n=[{key:\"isMobile\",value:function(){return window.DeviceMotionEvent&&\"ontouchstart\"in document.documentElement}},{key:\"addEventListeners\",value:function(){navigator.userAgent.match(this.settings.exclude)||(this.isMobile()?window.addEventListener(\"devicemotion\",this.onDeviceMove):(\"element\"===this.settings.base?this.base=this.element:\"window\"===this.settings.base&&(this.base=window),this.base.addEventListener(\"mouseenter\",this.onMouseEnter),this.base.addEventListener(\"mousemove\",this.onMouseMove),this.base.addEventListener(\"mouseleave\",this.onMouseLeave)))}},{key:\"removeEventListeners\",value:function(){window.removeEventListener(\"devicemotion\",this.onDeviceMove),this.base.removeEventListener(\"mouseenter\",this.onMouseEnter),this.base.removeEventListener(\"mousemove\",this.onMouseMove),this.base.removeEventListener(\"mouseleave\",this.onMouseLeave)}},{key:\"destroy\",value:function(){clearTimeout(this.timeout),null!==this.updateCall&&cancelAnimationFrame(this.updateCall),\"function\"==typeof this.callbacks.onDestroy&&this.callbacks.onDestroy(this.element),this.reset(),this.removeEventListeners(),this.element.universalTilt=null,delete this.element.universalTilt,this.element=null}},{key:\"reset\",value:function(){this.event={pageX:this.left+this.width/2,pageY:this.top+this.height/2},this.settings.reset&&(this.element.style.transform=\"perspective(\".concat(this.settings.perspective,\"px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)\")),this.settings.shine&&!this.settings[\"shine-save\"]&&Object.assign(this.shineElement.style,{transform:\"rotate(180deg) translate3d(-50%, -50%, 0)\",opacity:\"0\"})}},{key:\"getValues\",value:function(){var e,t,n;this.isMobile()?(e=this.event.accelerationIncludingGravity.x/4,t=this.event.accelerationIncludingGravity.y/4,90===window.orientation?(n=(1-t)/2,t=(1+e)/2,e=n):-90===window.orientation?(n=(1+t)/2,t=(1-e)/2,e=n):0===window.orientation?(t=n=(1+t)/2,e=(1+e)/2):180===window.orientation&&(t=n=(1-t)/2,e=(1-e)/2)):\"element\"===this.settings.base?(e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height):\"window\"===this.settings.base&&(e=this.event.clientX/window.innerWidth,t=this.event.clientY/window.innerHeight);e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1);var i=(this.settings.max/2-e*this.settings.max).toFixed(2),s=(t*this.settings.max-this.settings.max/2).toFixed(2),o=Math.atan2(e-.5,.5-t)*(180/Math.PI);return{tiltX:this.reverse*i,tiltY:this.reverse*s,angle:o}}},{key:\"updateElementPosition\",value:function(){var e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top}},{key:\"update\",value:function(){var e=this.getValues();this.element.style.transform=\"perspective(\".concat(this.settings.perspective,\"px)\\n      rotateX(\").concat(this.settings.disabled&&\"X\"===this.settings.disabled.toUpperCase()?0:e.tiltY,\"deg)\\n      rotateY(\").concat(this.settings.disabled&&\"Y\"===this.settings.disabled.toUpperCase()?0:e.tiltX,\"deg)\\n      scale3d(\").concat(this.settings.scale,\", \").concat(this.settings.scale,\", \").concat(this.settings.scale,\")\"),this.settings.shine&&Object.assign(this.shineElement.style,{transform:\"rotate(\".concat(e.angle,\"deg) translate3d(-50%, -50%, 0)\"),opacity:\"\".concat(this.settings[\"shine-opacity\"])}),this.element.dispatchEvent(new CustomEvent(\"tiltChange\",{detail:e})),this.updateCall=null}},{key:\"shine\",value:function(){var e=document.createElement(\"div\"),t=document.createElement(\"div\");e.classList.add(\"shine\"),t.classList.add(\"shine-inner\"),e.appendChild(t),this.element.appendChild(e),this.shineWrapper=this.element.querySelector(\".shine\"),this.shineElement=this.element.querySelector(\".shine-inner\"),Object.assign(this.shineWrapper.style,{position:\"absolute\",top:\"0\",left:\"0\",height:\"100%\",width:\"100%\",overflow:\"hidden\"}),Object.assign(this.shineElement.style,{position:\"absolute\",top:\"50%\",left:\"50%\",\"pointer-events\":\"none\",\"background-image\":\"linear-gradient(0deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%)\",width:\"\".concat(2*this.element.offsetWidth,\"px\"),height:\"\".concat(2*this.element.offsetWidth,\"px\"),transform:\"rotate(180deg) translate3d(-50%, -50%, 0)\",\"transform-origin\":\"0% 0%\",opacity:\"0\"})}},{key:\"transitions\",value:function(){var e=this;clearTimeout(this.timeout),this.element.style.transition=\"all \".concat(this.settings.speed,\"ms \").concat(this.settings.easing),this.settings.shine&&(this.shineElement.style.transition=\"opacity \".concat(this.settings.speed,\"ms \").concat(this.settings.easing)),this.timeout=setTimeout(function(){e.element.style.transition=\"\",e.settings.shine&&(e.shineElement.style.transition=\"\")},this.settings.speed)}},{key:\"extendSettings\",value:function(e){var t={base:\"element\",disabled:null,easing:\"cubic-bezier(.03, .98, .52, .99)\",exclude:null,max:35,perspective:1e3,reset:!0,reverse:!1,scale:1,shine:!1,\"shine-opacity\":0,\"shine-save\":!1,speed:300},n={};for(var i in t)if(i in e)n[i]=e[i];else if(this.element.getAttribute(\"data-\".concat(i))){var s=this.element.getAttribute(\"data-\".concat(i));try{n[i]=JSON.parse(s)}catch(e){n[i]=s}}else n[i]=t[i];return n}}])&&i(t.prototype,n),o&&i(t,o),e}();if(t.default=o,\"undefined\"!=typeof document){window.UniversalTilt=o;var a=document.querySelectorAll(\"[data-tilt]\");a.length&&o.init({elements:a})}window.jQuery&&(window.jQuery.fn.universalTilt=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};o.init({elements:this,settings:e.settings||{},callbacks:e.callbacks||{}})})}])});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pdmVyc2FsLXRpbHQuanMvbGliL3VuaXZlcnNhbC10aWx0Lm1pbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bml2ZXJzYWwtdGlsdC5qcy9saWIvdW5pdmVyc2FsLXRpbHQubWluLmpzPzdlYTUiXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJVbml2ZXJzYWxUaWx0XCIsW10sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5Vbml2ZXJzYWxUaWx0PXQoKTplLlVuaXZlcnNhbFRpbHQ9dCgpfShcIm9iamVjdFwiIT10eXBlb2Ygd2luZG93P2dsb2JhbC53aW5kb3c9Z2xvYmFsOndpbmRvdyxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiBuKGkpe2lmKHRbaV0pcmV0dXJuIHRbaV0uZXhwb3J0czt2YXIgcz10W2ldPXtpOmksbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtpXS5jYWxsKHMuZXhwb3J0cyxzLHMuZXhwb3J0cyxuKSxzLmw9ITAscy5leHBvcnRzfXJldHVybiBuLm09ZSxuLmM9dCxuLmQ9ZnVuY3Rpb24oZSx0LGkpe24ubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDppfSl9LG4ucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxuLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPW4oZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihuLnIoaSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGksXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBzIGluIGUpbi5kKGkscyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLHMpKTtyZXR1cm4gaX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCxcImFcIix0KSx0fSxuLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LG4ucD1cIlwiLG4obi5zPTApfShbZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDA7dmFyIGkscz0oaT1uKDEpKSYmaS5fX2VzTW9kdWxlP2k6e2RlZmF1bHQ6aX07dmFyIG89cy5kZWZhdWx0O3QuZGVmYXVsdD1vLHQuZGVmYXVsdD1zLmRlZmF1bHQsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHwhMSxpLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBpJiYoaS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsaS5rZXksaSl9fWZ1bmN0aW9uIHMoZSx0LG4pe3JldHVybiB0IGluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbdF09bixlfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZGVmYXVsdD12b2lkIDA7dmFyIG89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe3ZhciBuPXRoaXMsaT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sbz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e307IWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxlKSxzKHRoaXMsXCJvbk1vdXNlRW50ZXJcIixmdW5jdGlvbigpe24udXBkYXRlRWxlbWVudFBvc2l0aW9uKCksbi50cmFuc2l0aW9ucygpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4uY2FsbGJhY2tzLm9uTW91c2VFbnRlciYmbi5jYWxsYmFja3Mub25Nb3VzZUVudGVyKG4uZWxlbWVudCl9KSxzKHRoaXMsXCJvbk1vdXNlTW92ZVwiLGZ1bmN0aW9uKGUpe251bGwhPT1uLnVwZGF0ZUNhbGwmJmNhbmNlbEFuaW1hdGlvbkZyYW1lKG4udXBkYXRlQ2FsbCksbi5ldmVudD1lLG4udXBkYXRlRWxlbWVudFBvc2l0aW9uKCksbi51cGRhdGVDYWxsPXJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe3JldHVybiBuLnVwZGF0ZSgpfSksXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5jYWxsYmFja3Mub25Nb3VzZU1vdmUmJm4uY2FsbGJhY2tzLm9uTW91c2VNb3ZlKG4uZWxlbWVudCl9KSxzKHRoaXMsXCJvbk1vdXNlTGVhdmVcIixmdW5jdGlvbigpe24udHJhbnNpdGlvbnMoKSxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtyZXR1cm4gbi5yZXNldCgpfSksXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5jYWxsYmFja3Mub25Nb3VzZUxlYXZlJiZuLmNhbGxiYWNrcy5vbk1vdXNlTGVhdmUobi5lbGVtZW50KX0pLHModGhpcyxcIm9uRGV2aWNlTW92ZVwiLGZ1bmN0aW9uKGUpe24uZXZlbnQ9ZSxuLnVwZGF0ZSgpLG4udXBkYXRlRWxlbWVudFBvc2l0aW9uKCksbi50cmFuc2l0aW9ucygpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4uY2FsbGJhY2tzLm9uRGV2aWNlTW92ZSYmbi5jYWxsYmFja3Mub25EZXZpY2VNb3ZlKG4uZWxlbWVudCl9KSx0aGlzLmVsZW1lbnQ9dCx0aGlzLmNhbGxiYWNrcz1vLHRoaXMuc2V0dGluZ3M9dGhpcy5leHRlbmRTZXR0aW5ncyhpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLmNhbGxiYWNrcy5vbkluaXQmJnRoaXMuY2FsbGJhY2tzLm9uSW5pdCh0aGlzLmVsZW1lbnQpLHRoaXMucmV2ZXJzZT10aGlzLnNldHRpbmdzLnJldmVyc2U/LTE6MSx0aGlzLnNldHRpbmdzLnNoaW5lJiZ0aGlzLnNoaW5lKCksdGhpcy5lbGVtZW50LnN0eWxlLnRyYW5zZm9ybT1cInBlcnNwZWN0aXZlKFwiLmNvbmNhdCh0aGlzLnNldHRpbmdzLnBlcnNwZWN0aXZlLFwicHgpXCIpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKX12YXIgdCxuLG87cmV0dXJuIHQ9ZSxvPVt7a2V5OlwiaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LG49dC5lbGVtZW50cyxpPXQuc2V0dGluZ3Mscz10LmNhbGxiYWNrcztuIGluc3RhbmNlb2YgTm9kZSYmKG49W25dKSxuIGluc3RhbmNlb2YgTm9kZUxpc3QmJihuPVtdLnNsaWNlLmNhbGwobikpO3ZhciBvPSEwLGE9ITEsbD12b2lkIDA7dHJ5e2Zvcih2YXIgcixjPW5bU3ltYm9sLml0ZXJhdG9yXSgpOyEobz0ocj1jLm5leHQoKSkuZG9uZSk7bz0hMCl7dmFyIHU9ci52YWx1ZTtcInVuaXZlcnNhbFRpbHRcImluIHV8fCh1LnVuaXZlcnNhbFRpbHQ9bmV3IGUodSxpLHMpKX19Y2F0Y2goZSl7YT0hMCxsPWV9ZmluYWxseXt0cnl7b3x8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IGx9fX19XSwobj1be2tleTpcImlzTW9iaWxlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LkRldmljZU1vdGlvbkV2ZW50JiZcIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50fX0se2tleTpcImFkZEV2ZW50TGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXtuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKHRoaXMuc2V0dGluZ3MuZXhjbHVkZSl8fCh0aGlzLmlzTW9iaWxlKCk/d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJkZXZpY2Vtb3Rpb25cIix0aGlzLm9uRGV2aWNlTW92ZSk6KFwiZWxlbWVudFwiPT09dGhpcy5zZXR0aW5ncy5iYXNlP3RoaXMuYmFzZT10aGlzLmVsZW1lbnQ6XCJ3aW5kb3dcIj09PXRoaXMuc2V0dGluZ3MuYmFzZSYmKHRoaXMuYmFzZT13aW5kb3cpLHRoaXMuYmFzZS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLHRoaXMub25Nb3VzZUVudGVyKSx0aGlzLmJhc2UuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHRoaXMub25Nb3VzZU1vdmUpLHRoaXMuYmFzZS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLHRoaXMub25Nb3VzZUxlYXZlKSkpfX0se2tleTpcInJlbW92ZUV2ZW50TGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImRldmljZW1vdGlvblwiLHRoaXMub25EZXZpY2VNb3ZlKSx0aGlzLmJhc2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIix0aGlzLm9uTW91c2VFbnRlciksdGhpcy5iYXNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0aGlzLm9uTW91c2VNb3ZlKSx0aGlzLmJhc2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIix0aGlzLm9uTW91c2VMZWF2ZSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHRoaXMudGltZW91dCksbnVsbCE9PXRoaXMudXBkYXRlQ2FsbCYmY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGVDYWxsKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLmNhbGxiYWNrcy5vbkRlc3Ryb3kmJnRoaXMuY2FsbGJhY2tzLm9uRGVzdHJveSh0aGlzLmVsZW1lbnQpLHRoaXMucmVzZXQoKSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCksdGhpcy5lbGVtZW50LnVuaXZlcnNhbFRpbHQ9bnVsbCxkZWxldGUgdGhpcy5lbGVtZW50LnVuaXZlcnNhbFRpbHQsdGhpcy5lbGVtZW50PW51bGx9fSx7a2V5OlwicmVzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuZXZlbnQ9e3BhZ2VYOnRoaXMubGVmdCt0aGlzLndpZHRoLzIscGFnZVk6dGhpcy50b3ArdGhpcy5oZWlnaHQvMn0sdGhpcy5zZXR0aW5ncy5yZXNldCYmKHRoaXMuZWxlbWVudC5zdHlsZS50cmFuc2Zvcm09XCJwZXJzcGVjdGl2ZShcIi5jb25jYXQodGhpcy5zZXR0aW5ncy5wZXJzcGVjdGl2ZSxcInB4KSByb3RhdGVYKDBkZWcpIHJvdGF0ZVkoMGRlZykgc2NhbGUzZCgxLCAxLCAxKVwiKSksdGhpcy5zZXR0aW5ncy5zaGluZSYmIXRoaXMuc2V0dGluZ3NbXCJzaGluZS1zYXZlXCJdJiZPYmplY3QuYXNzaWduKHRoaXMuc2hpbmVFbGVtZW50LnN0eWxlLHt0cmFuc2Zvcm06XCJyb3RhdGUoMTgwZGVnKSB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKVwiLG9wYWNpdHk6XCIwXCJ9KX19LHtrZXk6XCJnZXRWYWx1ZXNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlLHQsbjt0aGlzLmlzTW9iaWxlKCk/KGU9dGhpcy5ldmVudC5hY2NlbGVyYXRpb25JbmNsdWRpbmdHcmF2aXR5LngvNCx0PXRoaXMuZXZlbnQuYWNjZWxlcmF0aW9uSW5jbHVkaW5nR3Jhdml0eS55LzQsOTA9PT13aW5kb3cub3JpZW50YXRpb24/KG49KDEtdCkvMix0PSgxK2UpLzIsZT1uKTotOTA9PT13aW5kb3cub3JpZW50YXRpb24/KG49KDErdCkvMix0PSgxLWUpLzIsZT1uKTowPT09d2luZG93Lm9yaWVudGF0aW9uPyh0PW49KDErdCkvMixlPSgxK2UpLzIpOjE4MD09PXdpbmRvdy5vcmllbnRhdGlvbiYmKHQ9bj0oMS10KS8yLGU9KDEtZSkvMikpOlwiZWxlbWVudFwiPT09dGhpcy5zZXR0aW5ncy5iYXNlPyhlPSh0aGlzLmV2ZW50LmNsaWVudFgtdGhpcy5sZWZ0KS90aGlzLndpZHRoLHQ9KHRoaXMuZXZlbnQuY2xpZW50WS10aGlzLnRvcCkvdGhpcy5oZWlnaHQpOlwid2luZG93XCI9PT10aGlzLnNldHRpbmdzLmJhc2UmJihlPXRoaXMuZXZlbnQuY2xpZW50WC93aW5kb3cuaW5uZXJXaWR0aCx0PXRoaXMuZXZlbnQuY2xpZW50WS93aW5kb3cuaW5uZXJIZWlnaHQpO2U9TWF0aC5taW4oTWF0aC5tYXgoZSwwKSwxKSx0PU1hdGgubWluKE1hdGgubWF4KHQsMCksMSk7dmFyIGk9KHRoaXMuc2V0dGluZ3MubWF4LzItZSp0aGlzLnNldHRpbmdzLm1heCkudG9GaXhlZCgyKSxzPSh0KnRoaXMuc2V0dGluZ3MubWF4LXRoaXMuc2V0dGluZ3MubWF4LzIpLnRvRml4ZWQoMiksbz1NYXRoLmF0YW4yKGUtLjUsLjUtdCkqKDE4MC9NYXRoLlBJKTtyZXR1cm57dGlsdFg6dGhpcy5yZXZlcnNlKmksdGlsdFk6dGhpcy5yZXZlcnNlKnMsYW5nbGU6b319fSx7a2V5OlwidXBkYXRlRWxlbWVudFBvc2l0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dGhpcy53aWR0aD10aGlzLmVsZW1lbnQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbGVtZW50Lm9mZnNldEhlaWdodCx0aGlzLmxlZnQ9ZS5sZWZ0LHRoaXMudG9wPWUudG9wfX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5nZXRWYWx1ZXMoKTt0aGlzLmVsZW1lbnQuc3R5bGUudHJhbnNmb3JtPVwicGVyc3BlY3RpdmUoXCIuY29uY2F0KHRoaXMuc2V0dGluZ3MucGVyc3BlY3RpdmUsXCJweClcXG4gICAgICByb3RhdGVYKFwiKS5jb25jYXQodGhpcy5zZXR0aW5ncy5kaXNhYmxlZCYmXCJYXCI9PT10aGlzLnNldHRpbmdzLmRpc2FibGVkLnRvVXBwZXJDYXNlKCk/MDplLnRpbHRZLFwiZGVnKVxcbiAgICAgIHJvdGF0ZVkoXCIpLmNvbmNhdCh0aGlzLnNldHRpbmdzLmRpc2FibGVkJiZcIllcIj09PXRoaXMuc2V0dGluZ3MuZGlzYWJsZWQudG9VcHBlckNhc2UoKT8wOmUudGlsdFgsXCJkZWcpXFxuICAgICAgc2NhbGUzZChcIikuY29uY2F0KHRoaXMuc2V0dGluZ3Muc2NhbGUsXCIsIFwiKS5jb25jYXQodGhpcy5zZXR0aW5ncy5zY2FsZSxcIiwgXCIpLmNvbmNhdCh0aGlzLnNldHRpbmdzLnNjYWxlLFwiKVwiKSx0aGlzLnNldHRpbmdzLnNoaW5lJiZPYmplY3QuYXNzaWduKHRoaXMuc2hpbmVFbGVtZW50LnN0eWxlLHt0cmFuc2Zvcm06XCJyb3RhdGUoXCIuY29uY2F0KGUuYW5nbGUsXCJkZWcpIHRyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApXCIpLG9wYWNpdHk6XCJcIi5jb25jYXQodGhpcy5zZXR0aW5nc1tcInNoaW5lLW9wYWNpdHlcIl0pfSksdGhpcy5lbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwidGlsdENoYW5nZVwiLHtkZXRhaWw6ZX0pKSx0aGlzLnVwZGF0ZUNhbGw9bnVsbH19LHtrZXk6XCJzaGluZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSx0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ZS5jbGFzc0xpc3QuYWRkKFwic2hpbmVcIiksdC5jbGFzc0xpc3QuYWRkKFwic2hpbmUtaW5uZXJcIiksZS5hcHBlbmRDaGlsZCh0KSx0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZSksdGhpcy5zaGluZVdyYXBwZXI9dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2hpbmVcIiksdGhpcy5zaGluZUVsZW1lbnQ9dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2hpbmUtaW5uZXJcIiksT2JqZWN0LmFzc2lnbih0aGlzLnNoaW5lV3JhcHBlci5zdHlsZSx7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpcIjBcIixsZWZ0OlwiMFwiLGhlaWdodDpcIjEwMCVcIix3aWR0aDpcIjEwMCVcIixvdmVyZmxvdzpcImhpZGRlblwifSksT2JqZWN0LmFzc2lnbih0aGlzLnNoaW5lRWxlbWVudC5zdHlsZSx7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpcIjUwJVwiLGxlZnQ6XCI1MCVcIixcInBvaW50ZXItZXZlbnRzXCI6XCJub25lXCIsXCJiYWNrZ3JvdW5kLWltYWdlXCI6XCJsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAxKSAxMDAlKVwiLHdpZHRoOlwiXCIuY29uY2F0KDIqdGhpcy5lbGVtZW50Lm9mZnNldFdpZHRoLFwicHhcIiksaGVpZ2h0OlwiXCIuY29uY2F0KDIqdGhpcy5lbGVtZW50Lm9mZnNldFdpZHRoLFwicHhcIiksdHJhbnNmb3JtOlwicm90YXRlKDE4MGRlZykgdHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMClcIixcInRyYW5zZm9ybS1vcmlnaW5cIjpcIjAlIDAlXCIsb3BhY2l0eTpcIjBcIn0pfX0se2tleTpcInRyYW5zaXRpb25zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2NsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpLHRoaXMuZWxlbWVudC5zdHlsZS50cmFuc2l0aW9uPVwiYWxsIFwiLmNvbmNhdCh0aGlzLnNldHRpbmdzLnNwZWVkLFwibXMgXCIpLmNvbmNhdCh0aGlzLnNldHRpbmdzLmVhc2luZyksdGhpcy5zZXR0aW5ncy5zaGluZSYmKHRoaXMuc2hpbmVFbGVtZW50LnN0eWxlLnRyYW5zaXRpb249XCJvcGFjaXR5IFwiLmNvbmNhdCh0aGlzLnNldHRpbmdzLnNwZWVkLFwibXMgXCIpLmNvbmNhdCh0aGlzLnNldHRpbmdzLmVhc2luZykpLHRoaXMudGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5lbGVtZW50LnN0eWxlLnRyYW5zaXRpb249XCJcIixlLnNldHRpbmdzLnNoaW5lJiYoZS5zaGluZUVsZW1lbnQuc3R5bGUudHJhbnNpdGlvbj1cIlwiKX0sdGhpcy5zZXR0aW5ncy5zcGVlZCl9fSx7a2V5OlwiZXh0ZW5kU2V0dGluZ3NcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17YmFzZTpcImVsZW1lbnRcIixkaXNhYmxlZDpudWxsLGVhc2luZzpcImN1YmljLWJlemllciguMDMsIC45OCwgLjUyLCAuOTkpXCIsZXhjbHVkZTpudWxsLG1heDozNSxwZXJzcGVjdGl2ZToxZTMscmVzZXQ6ITAscmV2ZXJzZTohMSxzY2FsZToxLHNoaW5lOiExLFwic2hpbmUtb3BhY2l0eVwiOjAsXCJzaGluZS1zYXZlXCI6ITEsc3BlZWQ6MzAwfSxuPXt9O2Zvcih2YXIgaSBpbiB0KWlmKGkgaW4gZSluW2ldPWVbaV07ZWxzZSBpZih0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1cIi5jb25jYXQoaSkpKXt2YXIgcz10aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1cIi5jb25jYXQoaSkpO3RyeXtuW2ldPUpTT04ucGFyc2Uocyl9Y2F0Y2goZSl7bltpXT1zfX1lbHNlIG5baV09dFtpXTtyZXR1cm4gbn19XSkmJmkodC5wcm90b3R5cGUsbiksbyYmaSh0LG8pLGV9KCk7aWYodC5kZWZhdWx0PW8sXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50KXt3aW5kb3cuVW5pdmVyc2FsVGlsdD1vO3ZhciBhPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS10aWx0XVwiKTthLmxlbmd0aCYmby5pbml0KHtlbGVtZW50czphfSl9d2luZG93LmpRdWVyeSYmKHdpbmRvdy5qUXVlcnkuZm4udW5pdmVyc2FsVGlsdD1mdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtvLmluaXQoe2VsZW1lbnRzOnRoaXMsc2V0dGluZ3M6ZS5zZXR0aW5nc3x8e30sY2FsbGJhY2tzOmUuY2FsbGJhY2tzfHx7fX0pfSl9XSl9KTsiXSwibWFwcGluZ3MiOiJBQUFBO0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/universal-tilt.js/lib/universal-tilt.min.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./setup/site-settings.json":
/*!**********************************!*\
  !*** ./setup/site-settings.json ***!
  \**********************************/
/*! exports provided: screensizes, default */
/***/ (function(module) {

eval("module.exports = {\"screensizes\":{\"xxs\":\"1px\",\"xs\":\"480px\",\"sm\":\"768px\",\"md\":\"992px\",\"lg\":\"1220px\",\"xl\":\"1540px\",\"xxl\":\"1840px\"}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXR1cC9zaXRlLXNldHRpbmdzLmpzb24uanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./setup/site-settings.json\n");

/***/ }),

/***/ "./static/src/js/main.js":
/*!*******************************!*\
  !*** ./static/src/js/main.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_dom_imageHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/dom/imageHandler */ \"./static/src/js/utils/dom/imageHandler.js\");\n/* harmony import */ var _utils_events_onReady__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/events/onReady */ \"./static/src/js/utils/events/onReady.js\");\n/* harmony import */ var swiper_dist_js_swiper_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! swiper/dist/js/swiper.esm.js */ \"./node_modules/swiper/dist/js/swiper.esm.js\");\n/* harmony import */ var _utils_events_events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/events/events */ \"./static/src/js/utils/events/events.js\");\n/* harmony import */ var _utils_queryString__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/queryString */ \"./static/src/js/utils/queryString.js\");\n/* harmony import */ var _utils_interaction_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/interaction/modal */ \"./static/src/js/utils/interaction/modal.js\");\n/* harmony import */ var _utils_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/dom/elementManipulation */ \"./static/src/js/utils/dom/elementManipulation.js\");\n/* harmony import */ var universal_tilt_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! universal-tilt.js */ \"./node_modules/universal-tilt.js/lib/universal-tilt.min.js\");\n/* harmony import */ var universal_tilt_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(universal_tilt_js__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\nObject(_utils_events_onReady__WEBPACK_IMPORTED_MODULE_1__[\"onReady\"])(function () {\n  var gyro = document.querySelector(\".gyro\");\n  var eyeLeft = document.querySelector(\".eye--left\");\n  var eyeRight = document.querySelector(\".eye--right\");\n\n  if (gyro) {\n    /* eslint-disable no-unused-vars */\n    var universalTilt = universal_tilt_js__WEBPACK_IMPORTED_MODULE_7___default.a.init({\n      elements: gyro,\n      settings: {\n        speed: 50,\n        max: 10,\n        perspective: 400,\n        // disabled: 'X',\n        reverse: true\n      },\n      callbacks: {\n        onDeviceMove: function onDeviceMove() {\n          var values = gyro.universalTilt.getValues();\n          eyeRight.style.transform = \"translateX(\".concat(Math.floor(values.tiltX), \"px)\");\n          eyeLeft.style.transform = \"translateX(\".concat(Math.floor(values.tiltX), \"px)\");\n        }\n      }\n    });\n    /* eslint-enable no-unused-vars */\n  }\n\n  var routeNumber = Object(_utils_queryString__WEBPACK_IMPORTED_MODULE_4__[\"getParameter\"])(\"stop\") || 1;\n  var allSwiperElements = document.querySelectorAll(\".swiper-container:not(.swiper-container--\".concat(routeNumber, \")\"));\n  Object(_utils_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_6__[\"deleteElement\"])(allSwiperElements);\n  var swiperElement = document.querySelector(\".swiper-container.swiper-container--\".concat(routeNumber));\n  var latlng = swiperElement.getAttribute('data-latlng').split(',');\n  var lat = latlng[0];\n  var lng = latlng[1];\n  var SwiperButtons = swiperElement.querySelectorAll(\"button\");\n  var SwiperForms = swiperElement.querySelectorAll(\"form\"); // const firstInput = swiperElement.querySelector(\".swiper-slide input\");\n  // firstInput.focus();\n\n  Object(_utils_events_events__WEBPACK_IMPORTED_MODULE_3__[\"addEvent\"])(SwiperButtons, \"click\", readInput);\n  Object(_utils_events_events__WEBPACK_IMPORTED_MODULE_3__[\"addEvent\"])(SwiperForms, \"submit\", readInput);\n  var swiper = new swiper_dist_js_swiper_esm_js__WEBPACK_IMPORTED_MODULE_2__[\"Swiper\"](swiperElement, {\n    preventInteractionOnTransition: true,\n    speed: 500,\n    allowSlidePrev: false,\n    allowSlideNext: false\n  });\n  swiper.on('slideNextTransitionEnd', function () {\n    swiper.allowSlideNext = false;\n    var inputField = swiperElement.querySelector(\".swiper-slide-active input\");\n    inputField.focus();\n  });\n\n  function readInput(event) {\n    event.preventDefault();\n    var id = event.target.getAttribute(\"data-id\");\n    var answer = event.target.getAttribute(\"data-answer\").toLowerCase();\n    var answer2 = undefined;\n\n    if (event.target.getAttribute(\"data-answer-2\")) {\n      answer2 = event.target.getAttribute(\"data-answer-2\").toLowerCase();\n    }\n\n    var targetInput = swiperElement.querySelector(\".input-\".concat(id));\n    var targetValue = targetInput.value.toLowerCase();\n\n    if (targetValue && targetValue !== \"\" && (targetValue.indexOf(answer) !== -1 || answer2 && targetValue.indexOf(answer2) !== -1)) {\n      if (swiper.isEnd) {\n        var newModal = new _utils_interaction_modal__WEBPACK_IMPORTED_MODULE_5__[\"Modal\"]();\n        newModal.setContent(Object(_utils_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_6__[\"parseHTML\"])(\"<a href=\\\"https://maps.google.com/?q=\".concat(lat, \",\").concat(lng, \"\\\" target=\\\"new\\\">N\\xE6ste position</a>\")));\n      } else {\n        swiper.allowSlideNext = true;\n        swiper.slideNext();\n      }\n    }\n  }\n}, 150);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL21haW4uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL21haW4uanM/ZTdiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuL3V0aWxzL2RvbS9pbWFnZUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgb25SZWFkeSB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy9vblJlYWR5XCI7XHJcbmltcG9ydCB7IFN3aXBlciB9IGZyb20gJ3N3aXBlci9kaXN0L2pzL3N3aXBlci5lc20uanMnO1xyXG5pbXBvcnQgeyBhZGRFdmVudCB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy9ldmVudHNcIjtcclxuaW1wb3J0IHsgZ2V0UGFyYW1ldGVyIH0gZnJvbSBcIi4vdXRpbHMvcXVlcnlTdHJpbmdcIjtcclxuaW1wb3J0IHsgTW9kYWwgfSBmcm9tIFwiLi91dGlscy9pbnRlcmFjdGlvbi9tb2RhbFwiO1xyXG5pbXBvcnQgeyBwYXJzZUhUTUwsIGRlbGV0ZUVsZW1lbnQgfSBmcm9tIFwiLi91dGlscy9kb20vZWxlbWVudE1hbmlwdWxhdGlvblwiO1xyXG5pbXBvcnQgVW5pdmVyc2FsVGlsdCBmcm9tICd1bml2ZXJzYWwtdGlsdC5qcyc7XHJcblxyXG5vblJlYWR5KCgpID0+IHtcclxuICAgIGNvbnN0IGd5cm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmd5cm9cIik7XHJcbiAgICBjb25zdCBleWVMZWZ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5leWUtLWxlZnRcIik7XHJcbiAgICBjb25zdCBleWVSaWdodCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZXllLS1yaWdodFwiKTtcclxuXHJcbiAgICBpZiAoZ3lybykge1xyXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXHJcbiAgICAgICAgY29uc3QgdW5pdmVyc2FsVGlsdCA9IFVuaXZlcnNhbFRpbHQuaW5pdCh7XHJcbiAgICAgICAgICAgIGVsZW1lbnRzOiBneXJvLFxyXG4gICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgc3BlZWQ6IDUwLFxyXG4gICAgICAgICAgICAgICAgbWF4OiAxMCxcclxuICAgICAgICAgICAgICAgIHBlcnNwZWN0aXZlOiA0MDAsXHJcbiAgICAgICAgICAgICAgICAvLyBkaXNhYmxlZDogJ1gnLFxyXG4gICAgICAgICAgICAgICAgcmV2ZXJzZTogdHJ1ZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjYWxsYmFja3M6IHtcclxuICAgICAgICAgICAgICAgIG9uRGV2aWNlTW92ZTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IGd5cm8udW5pdmVyc2FsVGlsdC5nZXRWYWx1ZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICBleWVSaWdodC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgke01hdGguZmxvb3IodmFsdWVzLnRpbHRYKX1weClgO1xyXG4gICAgICAgICAgICAgICAgICAgIGV5ZUxlZnQuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoJHtNYXRoLmZsb29yKHZhbHVlcy50aWx0WCl9cHgpYDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cclxuXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgcm91dGVOdW1iZXIgPSBnZXRQYXJhbWV0ZXIoXCJzdG9wXCIpIHx8IDE7XHJcblxyXG4gICAgY29uc3QgYWxsU3dpcGVyRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuc3dpcGVyLWNvbnRhaW5lcjpub3QoLnN3aXBlci1jb250YWluZXItLSR7cm91dGVOdW1iZXJ9KWApO1xyXG4gICAgZGVsZXRlRWxlbWVudChhbGxTd2lwZXJFbGVtZW50cyk7XHJcblxyXG4gICAgY29uc3Qgc3dpcGVyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5zd2lwZXItY29udGFpbmVyLnN3aXBlci1jb250YWluZXItLSR7cm91dGVOdW1iZXJ9YCk7XHJcbiAgICBjb25zdCBsYXRsbmcgPSBzd2lwZXJFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1sYXRsbmcnKS5zcGxpdCgnLCcpO1xyXG4gICAgY29uc3QgbGF0ID0gbGF0bG5nWzBdO1xyXG4gICAgY29uc3QgbG5nID0gbGF0bG5nWzFdO1xyXG4gICAgY29uc3QgU3dpcGVyQnV0dG9ucyA9IHN3aXBlckVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcImJ1dHRvblwiKTtcclxuICAgIGNvbnN0IFN3aXBlckZvcm1zID0gc3dpcGVyRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiZm9ybVwiKTtcclxuICAgIC8vIGNvbnN0IGZpcnN0SW5wdXQgPSBzd2lwZXJFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3dpcGVyLXNsaWRlIGlucHV0XCIpO1xyXG4gICAgLy8gZmlyc3RJbnB1dC5mb2N1cygpO1xyXG5cclxuICAgIGFkZEV2ZW50KFN3aXBlckJ1dHRvbnMsIFwiY2xpY2tcIiwgcmVhZElucHV0KTtcclxuICAgIGFkZEV2ZW50KFN3aXBlckZvcm1zLCBcInN1Ym1pdFwiLCByZWFkSW5wdXQpO1xyXG5cclxuICAgIGNvbnN0IHN3aXBlciA9IG5ldyBTd2lwZXIoc3dpcGVyRWxlbWVudCwge1xyXG4gICAgICAgIHByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbjogdHJ1ZSxcclxuICAgICAgICBzcGVlZDogNTAwLFxyXG4gICAgICAgIGFsbG93U2xpZGVQcmV2OiBmYWxzZSxcclxuICAgICAgICBhbGxvd1NsaWRlTmV4dDogZmFsc2UsXHJcbiAgICB9KTtcclxuXHJcbiAgICBzd2lwZXIub24oJ3NsaWRlTmV4dFRyYW5zaXRpb25FbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gZmFsc2U7XHJcbiAgICAgICAgY29uc3QgaW5wdXRGaWVsZCA9IHN3aXBlckVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5zd2lwZXItc2xpZGUtYWN0aXZlIGlucHV0XCIpO1xyXG4gICAgICAgIGlucHV0RmllbGQuZm9jdXMoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJlYWRJbnB1dChldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgY29uc3QgaWQgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiKTtcclxuICAgICAgICBjb25zdCBhbnN3ZXIgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1hbnN3ZXJcIikudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBsZXQgYW5zd2VyMiA9IHVuZGVmaW5lZDtcclxuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtYW5zd2VyLTJcIikpIHtcclxuICAgICAgICAgICAgYW5zd2VyMiA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWFuc3dlci0yXCIpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRhcmdldElucHV0ID0gc3dpcGVyRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuaW5wdXQtJHtpZH1gKTtcclxuICAgICAgICBjb25zdCB0YXJnZXRWYWx1ZSA9IHRhcmdldElucHV0LnZhbHVlLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgICAgIGlmICh0YXJnZXRWYWx1ZSAmJiB0YXJnZXRWYWx1ZSAhPT0gXCJcIiAmJiAodGFyZ2V0VmFsdWUuaW5kZXhPZihhbnN3ZXIpICE9PSAtMSB8fCAoYW5zd2VyMiAmJiB0YXJnZXRWYWx1ZS5pbmRleE9mKGFuc3dlcjIpICE9PSAtMSkpKSB7XHJcbiAgICAgICAgICAgIGlmIChzd2lwZXIuaXNFbmQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld01vZGFsID0gbmV3IE1vZGFsKCk7XHJcbiAgICAgICAgICAgICAgICBuZXdNb2RhbFxyXG4gICAgICAgICAgICAgICAgICAgIC5zZXRDb250ZW50KHBhcnNlSFRNTChgPGEgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tLz9xPSR7bGF0fSwke2xuZ31cIiB0YXJnZXQ9XCJuZXdcIj5Ow6ZzdGUgcG9zaXRpb248L2E+YCkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHN3aXBlci5zbGlkZU5leHQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0sIDE1MCk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQVRBO0FBaUJBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/main.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/accessibility.js":
/*!**************************************************!*\
  !*** ./static/src/js/utils/dom/accessibility.js ***!
  \**************************************************/
/*! exports provided: tabbingEnable, tabbingDisable, setAria, ariaEnable, ariaDisable, getFirstInteractiveElementInContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tabbingEnable\", function() { return tabbingEnable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tabbingDisable\", function() { return tabbingDisable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAria\", function() { return setAria; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ariaEnable\", function() { return ariaEnable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ariaDisable\", function() { return ariaDisable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFirstInteractiveElementInContainer\", function() { return getFirstInteractiveElementInContainer; });\n/* harmony import */ var _tabDomElements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabDomElements */ \"./static/src/js/utils/dom/tabDomElements.js\");\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/**\n * Accessibility helper functions\n * @module utils/dom/accessibility\n * @author Casper Andersen <casper.andersen@akqa.com>\n *\n * @example <caption>Set tag tabindex on all tab'able (a, button, form element, etc.) elements in the container</caption>\n * import { tabbingEnable } from \"./utils/dom/accessibility\";\n * tabbingEnable(container);\n *\n *\n * @example <caption>Remove tag tabindex on all tab'able elements in the container</caption>\n * import { tabbingDisable } from \"./utils/dom/accessibility\";\n * tabbingDisable(container);\n *\n *\n * @example <caption>Set aria-value on element</caption>\n * import { setAria } from \"./utils/accessibility\";\n * setAria(element, ariatag, value);\n *\n *\n * @example <caption>Set ariatag value to true on element</caption>\n * import { ariaEnable } from \"./utils/accessibility\";\n * ariaEnable(element, ariatag);\n *\n *\n * @example <caption>Set ariatag value to false on element</caption>\n * import { ariaDisable } from \"./utils/accessibility\";\n * ariaDisable(element, ariatag);\n *\n * */\n\n\n/**\n * Ordered list of interactive elements we could encounter within a container.\n *\n * @ignore\n * @since 3.6.6\n * @type {string[]}\n */\n\nvar interactiveElementsToLookFor = [\"input\", \"select\", \"textarea\", \"a\", \"button\", \"video\", \"audio\"];\n/**\n * Enable tabbing on tabbable dom elements\n * @param {HTMLElement} container\n */\n\nfunction tabbingEnable(container) {\n  var tabElements = Object(_tabDomElements__WEBPACK_IMPORTED_MODULE_0__[\"selectTabDomElements\"])(container);\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(tabElements, function (item) {\n    return item.removeAttribute(\"tabindex\");\n  });\n}\n/**\n * Disable tabbing on tabbable dom elements\n * @param {HTMLElement} container\n */\n\nfunction tabbingDisable(container) {\n  var tabElements = Object(_tabDomElements__WEBPACK_IMPORTED_MODULE_0__[\"selectTabDomElements\"])(container);\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(tabElements, function (item) {\n    return item.setAttribute(\"tabindex\", \"-1\");\n  });\n}\n/**\n * Set aria tag\n * @param {HTMLElement} element\n * @param {String} aria\n * @param {String|boolean} value\n */\n\nfunction setAria(element, aria, value) {\n  element.setAttribute(\"aria-\".concat(aria), value);\n}\n/**\n * Enable aria tag - Value true\n * @param {HTMLElement} element\n * @param {String} aria\n */\n\nfunction ariaEnable(element, aria) {\n  setAria(element, aria, true);\n}\n/**\n * Disable aria tag - Value false\n * @param {HTMLElement} element\n * @param {String} aria\n */\n\nfunction ariaDisable(element, aria) {\n  setAria(element, aria, false);\n}\n/**\n * Given any kind of container, find and return the first interactive (and thus focus'able) element inside it.\n *\n * @since 3.6.6\n * @author Anders Gissel <anders.gissel@akqa.com>\n * @param {Element} container - The container to search inside. Must support `.querySelector()`, at the very least.\n * @returns {Element|undefined} The first interactive `Element` found, or `undefined` if no matching elements were found.\n *\n * @example <caption>Basic usage – find the first interactive element on the page, scroll to it and then focus on it:</caption>\n * import { getFirstInteractiveElementInContainer } from \"./utils/dom/accessibility\";\n * import { scrollTo } from \"./utils/dom/scrollTo\";\n *\n * const firstFoundElement = getFirstInteractiveElementInContainer(document.body);\n *\n * if (firstFoundElement && firstFoundElement.focus) {\n *     scrollTo(firstFoundElement).then(() => firstFoundElement.focus());\n * }\n */\n\nfunction getFirstInteractiveElementInContainer(container) {\n  var foundElement;\n  interactiveElementsToLookFor.forEach(function (elementName) {\n    foundElement = foundElement || container.querySelector(elementName);\n  });\n  return foundElement;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9hY2Nlc3NpYmlsaXR5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9kb20vYWNjZXNzaWJpbGl0eS5qcz83ODZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWNjZXNzaWJpbGl0eSBoZWxwZXIgZnVuY3Rpb25zXG4gKiBAbW9kdWxlIHV0aWxzL2RvbS9hY2Nlc3NpYmlsaXR5XG4gKiBAYXV0aG9yIENhc3BlciBBbmRlcnNlbiA8Y2FzcGVyLmFuZGVyc2VuQGFrcWEuY29tPlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlNldCB0YWcgdGFiaW5kZXggb24gYWxsIHRhYidhYmxlIChhLCBidXR0b24sIGZvcm0gZWxlbWVudCwgZXRjLikgZWxlbWVudHMgaW4gdGhlIGNvbnRhaW5lcjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IHRhYmJpbmdFbmFibGUgfSBmcm9tIFwiLi91dGlscy9kb20vYWNjZXNzaWJpbGl0eVwiO1xuICogdGFiYmluZ0VuYWJsZShjb250YWluZXIpO1xuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5SZW1vdmUgdGFnIHRhYmluZGV4IG9uIGFsbCB0YWInYWJsZSBlbGVtZW50cyBpbiB0aGUgY29udGFpbmVyPC9jYXB0aW9uPlxuICogaW1wb3J0IHsgdGFiYmluZ0Rpc2FibGUgfSBmcm9tIFwiLi91dGlscy9kb20vYWNjZXNzaWJpbGl0eVwiO1xuICogdGFiYmluZ0Rpc2FibGUoY29udGFpbmVyKTtcbiAqXG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+U2V0IGFyaWEtdmFsdWUgb24gZWxlbWVudDwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IHNldEFyaWEgfSBmcm9tIFwiLi91dGlscy9hY2Nlc3NpYmlsaXR5XCI7XG4gKiBzZXRBcmlhKGVsZW1lbnQsIGFyaWF0YWcsIHZhbHVlKTtcbiAqXG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+U2V0IGFyaWF0YWcgdmFsdWUgdG8gdHJ1ZSBvbiBlbGVtZW50PC9jYXB0aW9uPlxuICogaW1wb3J0IHsgYXJpYUVuYWJsZSB9IGZyb20gXCIuL3V0aWxzL2FjY2Vzc2liaWxpdHlcIjtcbiAqIGFyaWFFbmFibGUoZWxlbWVudCwgYXJpYXRhZyk7XG4gKlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlNldCBhcmlhdGFnIHZhbHVlIHRvIGZhbHNlIG9uIGVsZW1lbnQ8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBhcmlhRGlzYWJsZSB9IGZyb20gXCIuL3V0aWxzL2FjY2Vzc2liaWxpdHlcIjtcbiAqIGFyaWFEaXNhYmxlKGVsZW1lbnQsIGFyaWF0YWcpO1xuICpcbiAqICovXG5cbmltcG9ydCB7IHNlbGVjdFRhYkRvbUVsZW1lbnRzIH0gZnJvbSBcIi4vdGFiRG9tRWxlbWVudHNcIjtcbmltcG9ydCB7IGZvckVhY2ggfSBmcm9tIFwiLi4vZm9yRWFjaFwiO1xuXG5cblxuLyoqXG4gKiBPcmRlcmVkIGxpc3Qgb2YgaW50ZXJhY3RpdmUgZWxlbWVudHMgd2UgY291bGQgZW5jb3VudGVyIHdpdGhpbiBhIGNvbnRhaW5lci5cbiAqXG4gKiBAaWdub3JlXG4gKiBAc2luY2UgMy42LjZcbiAqIEB0eXBlIHtzdHJpbmdbXX1cbiAqL1xuY29uc3QgaW50ZXJhY3RpdmVFbGVtZW50c1RvTG9va0ZvciA9IFtcbiAgICBcImlucHV0XCIsXG4gICAgXCJzZWxlY3RcIixcbiAgICBcInRleHRhcmVhXCIsXG4gICAgXCJhXCIsXG4gICAgXCJidXR0b25cIixcbiAgICBcInZpZGVvXCIsXG4gICAgXCJhdWRpb1wiLFxuXTtcblxuXG5cbi8qKlxuICogRW5hYmxlIHRhYmJpbmcgb24gdGFiYmFibGUgZG9tIGVsZW1lbnRzXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250YWluZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRhYmJpbmdFbmFibGUoY29udGFpbmVyKSB7XG5cbiAgICBjb25zdCB0YWJFbGVtZW50cyA9IHNlbGVjdFRhYkRvbUVsZW1lbnRzKGNvbnRhaW5lcik7XG5cbiAgICBmb3JFYWNoKHRhYkVsZW1lbnRzLCBpdGVtID0+IGl0ZW0ucmVtb3ZlQXR0cmlidXRlKFwidGFiaW5kZXhcIikpO1xufVxuXG5cblxuLyoqXG4gKiBEaXNhYmxlIHRhYmJpbmcgb24gdGFiYmFibGUgZG9tIGVsZW1lbnRzXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250YWluZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRhYmJpbmdEaXNhYmxlKGNvbnRhaW5lcikge1xuXG4gICAgY29uc3QgdGFiRWxlbWVudHMgPSBzZWxlY3RUYWJEb21FbGVtZW50cyhjb250YWluZXIpO1xuXG4gICAgZm9yRWFjaCh0YWJFbGVtZW50cywgaXRlbSA9PiBpdGVtLnNldEF0dHJpYnV0ZShcInRhYmluZGV4XCIsIFwiLTFcIikpO1xufVxuXG5cblxuLyoqXG4gKiBTZXQgYXJpYSB0YWdcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBhcmlhXG4gKiBAcGFyYW0ge1N0cmluZ3xib29sZWFufSB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0QXJpYShlbGVtZW50LCBhcmlhLCB2YWx1ZSkge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGBhcmlhLSR7YXJpYX1gLCB2YWx1ZSk7XG59XG5cblxuXG4vKipcbiAqIEVuYWJsZSBhcmlhIHRhZyAtIFZhbHVlIHRydWVcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBhcmlhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcmlhRW5hYmxlKGVsZW1lbnQsIGFyaWEpIHtcbiAgICBzZXRBcmlhKGVsZW1lbnQsIGFyaWEsIHRydWUpO1xufVxuXG5cblxuLyoqXG4gKiBEaXNhYmxlIGFyaWEgdGFnIC0gVmFsdWUgZmFsc2VcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBhcmlhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcmlhRGlzYWJsZShlbGVtZW50LCBhcmlhKSB7XG4gICAgc2V0QXJpYShlbGVtZW50LCBhcmlhLCBmYWxzZSk7XG59XG5cblxuXG4vKipcbiAqIEdpdmVuIGFueSBraW5kIG9mIGNvbnRhaW5lciwgZmluZCBhbmQgcmV0dXJuIHRoZSBmaXJzdCBpbnRlcmFjdGl2ZSAoYW5kIHRodXMgZm9jdXMnYWJsZSkgZWxlbWVudCBpbnNpZGUgaXQuXG4gKlxuICogQHNpbmNlIDMuNi42XG4gKiBAYXV0aG9yIEFuZGVycyBHaXNzZWwgPGFuZGVycy5naXNzZWxAYWtxYS5jb20+XG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhaW5lciAtIFRoZSBjb250YWluZXIgdG8gc2VhcmNoIGluc2lkZS4gTXVzdCBzdXBwb3J0IGAucXVlcnlTZWxlY3RvcigpYCwgYXQgdGhlIHZlcnkgbGVhc3QuXG4gKiBAcmV0dXJucyB7RWxlbWVudHx1bmRlZmluZWR9IFRoZSBmaXJzdCBpbnRlcmFjdGl2ZSBgRWxlbWVudGAgZm91bmQsIG9yIGB1bmRlZmluZWRgIGlmIG5vIG1hdGNoaW5nIGVsZW1lbnRzIHdlcmUgZm91bmQuXG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+QmFzaWMgdXNhZ2Ug4oCTIGZpbmQgdGhlIGZpcnN0IGludGVyYWN0aXZlIGVsZW1lbnQgb24gdGhlIHBhZ2UsIHNjcm9sbCB0byBpdCBhbmQgdGhlbiBmb2N1cyBvbiBpdDo8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBnZXRGaXJzdEludGVyYWN0aXZlRWxlbWVudEluQ29udGFpbmVyIH0gZnJvbSBcIi4vdXRpbHMvZG9tL2FjY2Vzc2liaWxpdHlcIjtcbiAqIGltcG9ydCB7IHNjcm9sbFRvIH0gZnJvbSBcIi4vdXRpbHMvZG9tL3Njcm9sbFRvXCI7XG4gKlxuICogY29uc3QgZmlyc3RGb3VuZEVsZW1lbnQgPSBnZXRGaXJzdEludGVyYWN0aXZlRWxlbWVudEluQ29udGFpbmVyKGRvY3VtZW50LmJvZHkpO1xuICpcbiAqIGlmIChmaXJzdEZvdW5kRWxlbWVudCAmJiBmaXJzdEZvdW5kRWxlbWVudC5mb2N1cykge1xuICogICAgIHNjcm9sbFRvKGZpcnN0Rm91bmRFbGVtZW50KS50aGVuKCgpID0+IGZpcnN0Rm91bmRFbGVtZW50LmZvY3VzKCkpO1xuICogfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Rmlyc3RJbnRlcmFjdGl2ZUVsZW1lbnRJbkNvbnRhaW5lcihjb250YWluZXIpIHtcblxuICAgIGxldCBmb3VuZEVsZW1lbnQ7XG4gICAgaW50ZXJhY3RpdmVFbGVtZW50c1RvTG9va0Zvci5mb3JFYWNoKGVsZW1lbnROYW1lID0+IHtcbiAgICAgICAgZm91bmRFbGVtZW50ID0gZm91bmRFbGVtZW50IHx8IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKGVsZW1lbnROYW1lKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBmb3VuZEVsZW1lbnQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkE7QUFDQTtBQUlBOzs7Ozs7OztBQU9BO0FBWUE7Ozs7O0FBSUE7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBSUE7Ozs7O0FBSUE7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBSUE7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/accessibility.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/classList.js":
/*!**********************************************!*\
  !*** ./static/src/js/utils/dom/classList.js ***!
  \**********************************************/
/*! exports provided: addClass, add, hasClass, contains, removeClass, remove, toggleClass, toggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addClass\", function() { return addClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasClass\", function() { return hasClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contains\", function() { return contains; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeClass\", function() { return removeClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleClass\", function() { return toggleClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggle\", function() { return toggle; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _splitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../splitter */ \"./static/src/js/utils/splitter.js\");\n/**\n * A classlist \"polyfill\" and utility tool.\n *\n * Native classlist cannot be polyfilled properly on IE10 and IE11, since they support the basic functions but\n * do not have support for `toggle`, for example. This file provides working classList implementation, with\n * hacks to make everything work in IE9 and below as well. However, the usual perks of Frontline are available\n * as well, which allows you to add several classes at once, to several elements at once.\n *\n * When importing, please use the `addClass`, `removeClass`, `toggleClass` and `hasClass` names,\n * because they're much easier to understand without having to alias them.\n *\n * @module utils/dom/classList\n * @author Nicolaj Lund Hummel\n * @author Anders Gissel <anders.gissel@akqa.com>\n * @example <caption>Basic usage:</caption>\n * import { addClass, removeClass } from \"./utils/dom/classList\";\n *\n * const element = document.querySelector(\".anElement\");\n * addClass(element, \"someClass someOtherClass\");\n * removeClass(element, \"anotherClass\");\n */\n\n\n/**\n * This function adds a class to the given element.\n * Checking for classList since this isn't supported in IE9 / IE8\n *\n * @param {Element|Element[]|NodeList} input\n * @param {string|string[]} classNames\n */\n\nfunction addClass(input, classNames) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(input, function (element) {\n    Object(_splitter__WEBPACK_IMPORTED_MODULE_1__[\"splitter\"])(classNames, function (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else {\n        element.className += \" \".concat(className);\n      }\n    });\n  });\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar add = addClass;\n/**\n * This function checks if given element has the class specified.\n * Checking for classList since this isn't supported in IE9 / IE8.\n * This function does NOT support nodelists or arrays.\n *\n * @param {Element} element\n * @param {string} className\n * @returns {boolean}\n */\n\nfunction hasClass(element, className) {\n  if (element && (element.classList || element.className)) {\n    if (element.classList) {\n      return element.classList.contains(className);\n    } else {\n      return new RegExp(\"(^| ) \".concat(className, \"( |$)\"), \"gi\").test(element.className);\n    }\n  }\n\n  return false;\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar contains = hasClass;\n/**\n * This function removes a class from the given element.\n * Checking for classList since this isn't supported in IE9 / IE8\n *\n * @param {Element|Element[]|NodeList} input\n * @param {string|string[]} classNames\n */\n\nfunction removeClass(input, classNames) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(input, function (element) {\n    Object(_splitter__WEBPACK_IMPORTED_MODULE_1__[\"splitter\"])(classNames, function (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else {\n        element.className = element.className.replace(new RegExp(\"(^|\\\\b)\".concat(className.split(\" \").join(\"|\"), \"(\\\\b|$)\"), \"gi\"), \" \");\n      }\n    });\n  });\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar remove = removeClass;\n/**\n * Toggle a class.\n *\n * @param {Element|Element[]|NodeList} input - The HTML element to work with\n * @param {string|string[]} classNames - The class name(s) we'll be toggling\n * @param {boolean} [condition] - Optional condition. If set to true or false, the toggle will use the given value to add or remove the class. If undefined, a regular toggle will be performed.\n */\n\nfunction toggleClass(input, classNames, condition) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(input, function (element) {\n    Object(_splitter__WEBPACK_IMPORTED_MODULE_1__[\"splitter\"])(classNames, function (className) {\n      var classShouldBeIncluded;\n      var classIsIncludedAlready = hasClass(element, className); // If a condition is given, we'll use that to figure out if the class should be added or not.\n\n      if (condition !== undefined) {\n        // We'll only continue if the condition doesn't match the current state. So we'll only remove the\n        // class if it added already and the condition is \"false\", and vice versa.\n        if (condition !== classIsIncludedAlready) {\n          classShouldBeIncluded = condition;\n        }\n      } else {\n        // No condition was given, so we'll just toggle the class.\n        classShouldBeIncluded = !classIsIncludedAlready;\n      } // Only continue if a new mode is defined. Otherwise there's no point.\n\n\n      if (classShouldBeIncluded !== undefined) {\n        if (classShouldBeIncluded) {\n          addClass(element, className);\n        } else {\n          removeClass(element, className);\n        }\n      }\n    });\n  });\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar toggle = toggleClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9jbGFzc0xpc3QuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9jbGFzc0xpc3QuanM/NWI3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgY2xhc3NsaXN0IFwicG9seWZpbGxcIiBhbmQgdXRpbGl0eSB0b29sLlxuICpcbiAqIE5hdGl2ZSBjbGFzc2xpc3QgY2Fubm90IGJlIHBvbHlmaWxsZWQgcHJvcGVybHkgb24gSUUxMCBhbmQgSUUxMSwgc2luY2UgdGhleSBzdXBwb3J0IHRoZSBiYXNpYyBmdW5jdGlvbnMgYnV0XG4gKiBkbyBub3QgaGF2ZSBzdXBwb3J0IGZvciBgdG9nZ2xlYCwgZm9yIGV4YW1wbGUuIFRoaXMgZmlsZSBwcm92aWRlcyB3b3JraW5nIGNsYXNzTGlzdCBpbXBsZW1lbnRhdGlvbiwgd2l0aFxuICogaGFja3MgdG8gbWFrZSBldmVyeXRoaW5nIHdvcmsgaW4gSUU5IGFuZCBiZWxvdyBhcyB3ZWxsLiBIb3dldmVyLCB0aGUgdXN1YWwgcGVya3Mgb2YgRnJvbnRsaW5lIGFyZSBhdmFpbGFibGVcbiAqIGFzIHdlbGwsIHdoaWNoIGFsbG93cyB5b3UgdG8gYWRkIHNldmVyYWwgY2xhc3NlcyBhdCBvbmNlLCB0byBzZXZlcmFsIGVsZW1lbnRzIGF0IG9uY2UuXG4gKlxuICogV2hlbiBpbXBvcnRpbmcsIHBsZWFzZSB1c2UgdGhlIGBhZGRDbGFzc2AsIGByZW1vdmVDbGFzc2AsIGB0b2dnbGVDbGFzc2AgYW5kIGBoYXNDbGFzc2AgbmFtZXMsXG4gKiBiZWNhdXNlIHRoZXkncmUgbXVjaCBlYXNpZXIgdG8gdW5kZXJzdGFuZCB3aXRob3V0IGhhdmluZyB0byBhbGlhcyB0aGVtLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZG9tL2NsYXNzTGlzdFxuICogQGF1dGhvciBOaWNvbGFqIEx1bmQgSHVtbWVsXG4gKiBAYXV0aG9yIEFuZGVycyBHaXNzZWwgPGFuZGVycy5naXNzZWxAYWtxYS5jb20+XG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5CYXNpYyB1c2FnZTo8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBhZGRDbGFzcywgcmVtb3ZlQ2xhc3MgfSBmcm9tIFwiLi91dGlscy9kb20vY2xhc3NMaXN0XCI7XG4gKlxuICogY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYW5FbGVtZW50XCIpO1xuICogYWRkQ2xhc3MoZWxlbWVudCwgXCJzb21lQ2xhc3Mgc29tZU90aGVyQ2xhc3NcIik7XG4gKiByZW1vdmVDbGFzcyhlbGVtZW50LCBcImFub3RoZXJDbGFzc1wiKTtcbiAqL1xuXG5cblxuaW1wb3J0IHsgZm9yRWFjaCB9IGZyb20gXCIuLi9mb3JFYWNoXCI7XG5pbXBvcnQgeyBzcGxpdHRlciB9IGZyb20gXCIuLi9zcGxpdHRlclwiO1xuXG5cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFkZHMgYSBjbGFzcyB0byB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAqIENoZWNraW5nIGZvciBjbGFzc0xpc3Qgc2luY2UgdGhpcyBpc24ndCBzdXBwb3J0ZWQgaW4gSUU5IC8gSUU4XG4gKlxuICogQHBhcmFtIHtFbGVtZW50fEVsZW1lbnRbXXxOb2RlTGlzdH0gaW5wdXRcbiAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBjbGFzc05hbWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRDbGFzcyhpbnB1dCwgY2xhc3NOYW1lcykge1xuICAgIGZvckVhY2goaW5wdXQsIGVsZW1lbnQgPT4ge1xuICAgICAgICBzcGxpdHRlcihjbGFzc05hbWVzLCBjbGFzc05hbWUgPT4ge1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9IGAgJHtjbGFzc05hbWV9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cblxuXG4vKipcbiAqIEB0eXBlIHtmdW5jdGlvbn1cbiAqIEBpZ25vcmVcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBjb25zdCBhZGQgPSBhZGRDbGFzcztcblxuXG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBjaGVja3MgaWYgZ2l2ZW4gZWxlbWVudCBoYXMgdGhlIGNsYXNzIHNwZWNpZmllZC5cbiAqIENoZWNraW5nIGZvciBjbGFzc0xpc3Qgc2luY2UgdGhpcyBpc24ndCBzdXBwb3J0ZWQgaW4gSUU5IC8gSUU4LlxuICogVGhpcyBmdW5jdGlvbiBkb2VzIE5PVCBzdXBwb3J0IG5vZGVsaXN0cyBvciBhcnJheXMuXG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICAgIGlmIChlbGVtZW50ICYmIChlbGVtZW50LmNsYXNzTGlzdCB8fCBlbGVtZW50LmNsYXNzTmFtZSkpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKGAoXnwgKSAke2NsYXNzTmFtZX0oIHwkKWAsIFwiZ2lcIikudGVzdChlbGVtZW50LmNsYXNzTmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cblxuXG4vKipcbiAqIEB0eXBlIHtmdW5jdGlvbn1cbiAqIEBpZ25vcmVcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBjb25zdCBjb250YWlucyA9IGhhc0NsYXNzO1xuXG5cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIHJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBnaXZlbiBlbGVtZW50LlxuICogQ2hlY2tpbmcgZm9yIGNsYXNzTGlzdCBzaW5jZSB0aGlzIGlzbid0IHN1cHBvcnRlZCBpbiBJRTkgLyBJRThcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR8RWxlbWVudFtdfE5vZGVMaXN0fSBpbnB1dFxuICogQHBhcmFtIHtzdHJpbmd8c3RyaW5nW119IGNsYXNzTmFtZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGlucHV0LCBjbGFzc05hbWVzKSB7XG4gICAgZm9yRWFjaChpbnB1dCwgZWxlbWVudCA9PiB7XG4gICAgICAgIHNwbGl0dGVyKGNsYXNzTmFtZXMsIGNsYXNzTmFtZSA9PiB7XG4gICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoYChefFxcXFxiKSR7Y2xhc3NOYW1lLnNwbGl0KFwiIFwiKS5qb2luKFwifFwiKX0oXFxcXGJ8JClgLCBcImdpXCIpLCBcIiBcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgcmVtb3ZlID0gcmVtb3ZlQ2xhc3M7XG5cblxuXG4vKipcbiAqIFRvZ2dsZSBhIGNsYXNzLlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudHxFbGVtZW50W118Tm9kZUxpc3R9IGlucHV0IC0gVGhlIEhUTUwgZWxlbWVudCB0byB3b3JrIHdpdGhcbiAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBjbGFzc05hbWVzIC0gVGhlIGNsYXNzIG5hbWUocykgd2UnbGwgYmUgdG9nZ2xpbmdcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2NvbmRpdGlvbl0gLSBPcHRpb25hbCBjb25kaXRpb24uIElmIHNldCB0byB0cnVlIG9yIGZhbHNlLCB0aGUgdG9nZ2xlIHdpbGwgdXNlIHRoZSBnaXZlbiB2YWx1ZSB0byBhZGQgb3IgcmVtb3ZlIHRoZSBjbGFzcy4gSWYgdW5kZWZpbmVkLCBhIHJlZ3VsYXIgdG9nZ2xlIHdpbGwgYmUgcGVyZm9ybWVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoaW5wdXQsIGNsYXNzTmFtZXMsIGNvbmRpdGlvbikge1xuICAgIGZvckVhY2goaW5wdXQsIGVsZW1lbnQgPT4ge1xuICAgICAgICBzcGxpdHRlcihjbGFzc05hbWVzLCBjbGFzc05hbWUgPT4ge1xuICAgICAgICAgICAgbGV0IGNsYXNzU2hvdWxkQmVJbmNsdWRlZDtcbiAgICAgICAgICAgIGNvbnN0IGNsYXNzSXNJbmNsdWRlZEFscmVhZHkgPSBoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpO1xuXG4gICAgICAgICAgICAvLyBJZiBhIGNvbmRpdGlvbiBpcyBnaXZlbiwgd2UnbGwgdXNlIHRoYXQgdG8gZmlndXJlIG91dCBpZiB0aGUgY2xhc3Mgc2hvdWxkIGJlIGFkZGVkIG9yIG5vdC5cbiAgICAgICAgICAgIGlmIChjb25kaXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIC8vIFdlJ2xsIG9ubHkgY29udGludWUgaWYgdGhlIGNvbmRpdGlvbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IHN0YXRlLiBTbyB3ZSdsbCBvbmx5IHJlbW92ZSB0aGVcbiAgICAgICAgICAgICAgICAvLyBjbGFzcyBpZiBpdCBhZGRlZCBhbHJlYWR5IGFuZCB0aGUgY29uZGl0aW9uIGlzIFwiZmFsc2VcIiwgYW5kIHZpY2UgdmVyc2EuXG4gICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbiAhPT0gY2xhc3NJc0luY2x1ZGVkQWxyZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICBjbGFzc1Nob3VsZEJlSW5jbHVkZWQgPSBjb25kaXRpb247XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBObyBjb25kaXRpb24gd2FzIGdpdmVuLCBzbyB3ZSdsbCBqdXN0IHRvZ2dsZSB0aGUgY2xhc3MuXG4gICAgICAgICAgICAgICAgY2xhc3NTaG91bGRCZUluY2x1ZGVkID0gIWNsYXNzSXNJbmNsdWRlZEFscmVhZHk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE9ubHkgY29udGludWUgaWYgYSBuZXcgbW9kZSBpcyBkZWZpbmVkLiBPdGhlcndpc2UgdGhlcmUncyBubyBwb2ludC5cbiAgICAgICAgICAgIGlmIChjbGFzc1Nob3VsZEJlSW5jbHVkZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGlmIChjbGFzc1Nob3VsZEJlSW5jbHVkZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgYWRkQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9KTtcblxuICAgIH0pO1xufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgdG9nZ2xlID0gdG9nZ2xlQ2xhc3M7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBO0FBQ0E7QUFJQTs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQUtBO0FBSUE7Ozs7Ozs7Ozs7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQUtBO0FBSUE7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7QUFLQTtBQUlBOzs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7Ozs7OztBQUtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/classList.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/createElement.js":
/*!**************************************************!*\
  !*** ./static/src/js/utils/dom/createElement.js ***!
  \**************************************************/
/*! exports provided: createElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createElement\", function() { return createElement; });\n/* harmony import */ var _classList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classList */ \"./static/src/js/utils/dom/classList.js\");\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _setStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./setStyles */ \"./static/src/js/utils/dom/setStyles.js\");\n/* harmony import */ var _elementManipulation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./elementManipulation */ \"./static/src/js/utils/dom/elementManipulation.js\");\n/* harmony import */ var _elementProperties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./elementProperties */ \"./static/src/js/utils/dom/elementProperties.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Helper-utility for creating a DOM-element. Allows you to make a whole lot of shortcuts when creating elements\n * dynamically. Special setters are included to make setting certain attributes easier, but the rest will simply\n * be overloaded onto the element. For example, the attribute `id` is not in the list and requires no processing,\n * so if you include `options.id=\"whatever\"`, your finished element will have `id=\"whatever\"` set.\n *\n * @module utils/dom/createElement\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Create a label with various options and containing an input field.</caption>\n * import { createElement } from \"./utils/dom/createElement\";\n *\n * const inputField = createElement(\"input\", {\n *     className: \"input input--text\",\n *     type: \"text\",\n *     id: \"myField\",\n *     value: 45722,\n * });\n *\n * const label = createElement(\"label\", {\n *     html: inputField,\n *     title: \"My field lives here.\",\n * });\n *\n * document.getElementById(\"target\").appendChild(label);\n * // Output will be: <label title=\"My field lives here.\"><input type=\"text\" class=\"input input--text\" id=\"myField\" value=\"45722\" /></label>\n */\n\n\n\n\n\n/**\n * Create a DOM element with the given options. Basically an interface for `document.createElement();`. Any option not described in the parameter list will be added to the tag as a regular attribute.\n *\n * @param {string} tagName - The tag name of the element, ie. `\"p\"` to create a `<p>`-tag. Required!\n * @param {object} [options] - Additional options for the new element. Any option that's not on the list will be added as a \"regular\" attribute.\n * @param {string|array} [options.className] - Classname(s) of element. Can be given as just about anything.\n * @param {string} [options.text] - Text-content of element. Will be set using innerText, and is thus XSS-safe.\n * @param {string|Node|Node[]|NodeList} [options.html] - HTML-content of element. Will be set as innerHTML if string is given; or else appended if at all possible.\n * @param {Object|string} [options.style] - The style of an element given as an object or a string.\n * @param {object} [options.attributes] - DEPRECATED: Key/value pairs of additional attributes, ie.: { readonly: true, \"data-whatever\": \"yes\" }. This syntax is still supported, but you should just add your extra properties to the main options.\n * @returns {HTMLElement|Element}\n */\n\nfunction createElement(tagName) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var newElement = document.createElement(tagName);\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(options, function (optionValue, optionKey) {\n    switch (optionKey) {\n      case \"className\":\n        Object(_classList__WEBPACK_IMPORTED_MODULE_0__[\"addClass\"])(newElement, optionValue || \"\");\n        break;\n\n      case \"attributes\":\n        Object(_elementProperties__WEBPACK_IMPORTED_MODULE_4__[\"setAttributes\"])(newElement, optionValue);\n        break;\n\n      case \"html\":\n        // We'll only set the HTML contents if the \"text\" property hasn't ALSO been set.\n        if (!options.text && typeof optionValue !== \"undefined\") {\n          if (typeof optionValue === \"string\") {\n            newElement.innerHTML = optionValue;\n          } else {\n            Object(_elementManipulation__WEBPACK_IMPORTED_MODULE_3__[\"appendElement\"])(optionValue, newElement);\n          }\n        }\n\n        break;\n\n      case \"text\":\n        newElement.innerText = options.text;\n        break;\n\n      case \"style\":\n        if (_typeof(options.style) === \"object\") {\n          Object(_setStyles__WEBPACK_IMPORTED_MODULE_2__[\"setStyles\"])(newElement, optionValue);\n        } else {\n          Object(_elementProperties__WEBPACK_IMPORTED_MODULE_4__[\"setAttributes\"])(newElement, optionKey, optionValue);\n        }\n\n        break;\n\n      default:\n        // Any unknown option key will be treated as a raw attribute.\n        Object(_elementProperties__WEBPACK_IMPORTED_MODULE_4__[\"setAttributes\"])(newElement, optionKey, optionValue);\n    }\n  });\n  return newElement;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9jcmVhdGVFbGVtZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9kb20vY3JlYXRlRWxlbWVudC5qcz82NjAwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGVscGVyLXV0aWxpdHkgZm9yIGNyZWF0aW5nIGEgRE9NLWVsZW1lbnQuIEFsbG93cyB5b3UgdG8gbWFrZSBhIHdob2xlIGxvdCBvZiBzaG9ydGN1dHMgd2hlbiBjcmVhdGluZyBlbGVtZW50c1xuICogZHluYW1pY2FsbHkuIFNwZWNpYWwgc2V0dGVycyBhcmUgaW5jbHVkZWQgdG8gbWFrZSBzZXR0aW5nIGNlcnRhaW4gYXR0cmlidXRlcyBlYXNpZXIsIGJ1dCB0aGUgcmVzdCB3aWxsIHNpbXBseVxuICogYmUgb3ZlcmxvYWRlZCBvbnRvIHRoZSBlbGVtZW50LiBGb3IgZXhhbXBsZSwgdGhlIGF0dHJpYnV0ZSBgaWRgIGlzIG5vdCBpbiB0aGUgbGlzdCBhbmQgcmVxdWlyZXMgbm8gcHJvY2Vzc2luZyxcbiAqIHNvIGlmIHlvdSBpbmNsdWRlIGBvcHRpb25zLmlkPVwid2hhdGV2ZXJcImAsIHlvdXIgZmluaXNoZWQgZWxlbWVudCB3aWxsIGhhdmUgYGlkPVwid2hhdGV2ZXJcImAgc2V0LlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZG9tL2NyZWF0ZUVsZW1lbnRcbiAqIEBhdXRob3IgQW5kZXJzIEdpc3NlbCA8YW5kZXJzLmdpc3NlbEBha3FhLmNvbT5cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5DcmVhdGUgYSBsYWJlbCB3aXRoIHZhcmlvdXMgb3B0aW9ucyBhbmQgY29udGFpbmluZyBhbiBpbnB1dCBmaWVsZC48L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSBcIi4vdXRpbHMvZG9tL2NyZWF0ZUVsZW1lbnRcIjtcbiAqXG4gKiBjb25zdCBpbnB1dEZpZWxkID0gY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAqICAgICBjbGFzc05hbWU6IFwiaW5wdXQgaW5wdXQtLXRleHRcIixcbiAqICAgICB0eXBlOiBcInRleHRcIixcbiAqICAgICBpZDogXCJteUZpZWxkXCIsXG4gKiAgICAgdmFsdWU6IDQ1NzIyLFxuICogfSk7XG4gKlxuICogY29uc3QgbGFiZWwgPSBjcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICogICAgIGh0bWw6IGlucHV0RmllbGQsXG4gKiAgICAgdGl0bGU6IFwiTXkgZmllbGQgbGl2ZXMgaGVyZS5cIixcbiAqIH0pO1xuICpcbiAqIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFyZ2V0XCIpLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAqIC8vIE91dHB1dCB3aWxsIGJlOiA8bGFiZWwgdGl0bGU9XCJNeSBmaWVsZCBsaXZlcyBoZXJlLlwiPjxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXQgaW5wdXQtLXRleHRcIiBpZD1cIm15RmllbGRcIiB2YWx1ZT1cIjQ1NzIyXCIgLz48L2xhYmVsPlxuICovXG5cbmltcG9ydCB7IGFkZENsYXNzIH0gZnJvbSBcIi4vY2xhc3NMaXN0XCI7XG5pbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSBcIi4uL2ZvckVhY2hcIjtcbmltcG9ydCB7IHNldFN0eWxlcyB9IGZyb20gXCIuL3NldFN0eWxlc1wiO1xuaW1wb3J0IHsgYXBwZW5kRWxlbWVudCB9IGZyb20gXCIuL2VsZW1lbnRNYW5pcHVsYXRpb25cIjtcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tIFwiLi9lbGVtZW50UHJvcGVydGllc1wiO1xuXG5cblxuLyoqXG4gKiBDcmVhdGUgYSBET00gZWxlbWVudCB3aXRoIHRoZSBnaXZlbiBvcHRpb25zLiBCYXNpY2FsbHkgYW4gaW50ZXJmYWNlIGZvciBgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgpO2AuIEFueSBvcHRpb24gbm90IGRlc2NyaWJlZCBpbiB0aGUgcGFyYW1ldGVyIGxpc3Qgd2lsbCBiZSBhZGRlZCB0byB0aGUgdGFnIGFzIGEgcmVndWxhciBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZ05hbWUgLSBUaGUgdGFnIG5hbWUgb2YgdGhlIGVsZW1lbnQsIGllLiBgXCJwXCJgIHRvIGNyZWF0ZSBhIGA8cD5gLXRhZy4gUmVxdWlyZWQhXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIC0gQWRkaXRpb25hbCBvcHRpb25zIGZvciB0aGUgbmV3IGVsZW1lbnQuIEFueSBvcHRpb24gdGhhdCdzIG5vdCBvbiB0aGUgbGlzdCB3aWxsIGJlIGFkZGVkIGFzIGEgXCJyZWd1bGFyXCIgYXR0cmlidXRlLlxuICogQHBhcmFtIHtzdHJpbmd8YXJyYXl9IFtvcHRpb25zLmNsYXNzTmFtZV0gLSBDbGFzc25hbWUocykgb2YgZWxlbWVudC4gQ2FuIGJlIGdpdmVuIGFzIGp1c3QgYWJvdXQgYW55dGhpbmcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudGV4dF0gLSBUZXh0LWNvbnRlbnQgb2YgZWxlbWVudC4gV2lsbCBiZSBzZXQgdXNpbmcgaW5uZXJUZXh0LCBhbmQgaXMgdGh1cyBYU1Mtc2FmZS5cbiAqIEBwYXJhbSB7c3RyaW5nfE5vZGV8Tm9kZVtdfE5vZGVMaXN0fSBbb3B0aW9ucy5odG1sXSAtIEhUTUwtY29udGVudCBvZiBlbGVtZW50LiBXaWxsIGJlIHNldCBhcyBpbm5lckhUTUwgaWYgc3RyaW5nIGlzIGdpdmVuOyBvciBlbHNlIGFwcGVuZGVkIGlmIGF0IGFsbCBwb3NzaWJsZS5cbiAqIEBwYXJhbSB7T2JqZWN0fHN0cmluZ30gW29wdGlvbnMuc3R5bGVdIC0gVGhlIHN0eWxlIG9mIGFuIGVsZW1lbnQgZ2l2ZW4gYXMgYW4gb2JqZWN0IG9yIGEgc3RyaW5nLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLmF0dHJpYnV0ZXNdIC0gREVQUkVDQVRFRDogS2V5L3ZhbHVlIHBhaXJzIG9mIGFkZGl0aW9uYWwgYXR0cmlidXRlcywgaWUuOiB7IHJlYWRvbmx5OiB0cnVlLCBcImRhdGEtd2hhdGV2ZXJcIjogXCJ5ZXNcIiB9LiBUaGlzIHN5bnRheCBpcyBzdGlsbCBzdXBwb3J0ZWQsIGJ1dCB5b3Ugc2hvdWxkIGp1c3QgYWRkIHlvdXIgZXh0cmEgcHJvcGVydGllcyB0byB0aGUgbWFpbiBvcHRpb25zLlxuICogQHJldHVybnMge0hUTUxFbGVtZW50fEVsZW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbGVtZW50KHRhZ05hbWUsIG9wdGlvbnMgPSB7fSkge1xuXG4gICAgY29uc3QgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG5cbiAgICBmb3JFYWNoKG9wdGlvbnMsIChvcHRpb25WYWx1ZSwgb3B0aW9uS2V5KSA9PiB7XG5cbiAgICAgICAgc3dpdGNoIChvcHRpb25LZXkpIHtcblxuICAgICAgICAgICAgY2FzZSBcImNsYXNzTmFtZVwiOlxuICAgICAgICAgICAgICAgIGFkZENsYXNzKG5ld0VsZW1lbnQsIG9wdGlvblZhbHVlIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiYXR0cmlidXRlc1wiOlxuICAgICAgICAgICAgICAgIHNldEF0dHJpYnV0ZXMobmV3RWxlbWVudCwgb3B0aW9uVmFsdWUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwiaHRtbFwiOlxuICAgICAgICAgICAgICAgIC8vIFdlJ2xsIG9ubHkgc2V0IHRoZSBIVE1MIGNvbnRlbnRzIGlmIHRoZSBcInRleHRcIiBwcm9wZXJ0eSBoYXNuJ3QgQUxTTyBiZWVuIHNldC5cbiAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbnMudGV4dCAmJiB0eXBlb2Ygb3B0aW9uVmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25WYWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5pbm5lckhUTUwgPSBvcHRpb25WYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVuZEVsZW1lbnQob3B0aW9uVmFsdWUsIG5ld0VsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuaW5uZXJUZXh0ID0gb3B0aW9ucy50ZXh0O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwic3R5bGVcIjpcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuc3R5bGUgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0U3R5bGVzKG5ld0VsZW1lbnQsIG9wdGlvblZhbHVlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXRBdHRyaWJ1dGVzKG5ld0VsZW1lbnQsIG9wdGlvbktleSwgb3B0aW9uVmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvLyBBbnkgdW5rbm93biBvcHRpb24ga2V5IHdpbGwgYmUgdHJlYXRlZCBhcyBhIHJhdyBhdHRyaWJ1dGUuXG4gICAgICAgICAgICAgICAgc2V0QXR0cmlidXRlcyhuZXdFbGVtZW50LCBvcHRpb25LZXksIG9wdGlvblZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmV3RWxlbWVudDtcblxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7Ozs7OztBQVlBO0FBQUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuQ0E7QUFzQ0E7QUFFQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/createElement.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/elementManipulation.js":
/*!********************************************************!*\
  !*** ./static/src/js/utils/dom/elementManipulation.js ***!
  \********************************************************/
/*! exports provided: parseHTML, deleteElement, appendElement, prependElement, insertElementAfter, insertElementBefore, swapElements, replaceElement, wrapElement, wrapInnerElement, unwrapElement, emptyElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseHTML\", function() { return parseHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteElement\", function() { return deleteElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appendElement\", function() { return appendElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prependElement\", function() { return prependElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertElementAfter\", function() { return insertElementAfter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertElementBefore\", function() { return insertElementBefore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"swapElements\", function() { return swapElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replaceElement\", function() { return replaceElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapElement\", function() { return wrapElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapInnerElement\", function() { return wrapInnerElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrapElement\", function() { return unwrapElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emptyElement\", function() { return emptyElement; });\n/* harmony import */ var _siblings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./siblings */ \"./static/src/js/utils/dom/siblings.js\");\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _createElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createElement */ \"./static/src/js/utils/dom/createElement.js\");\n/**\n * Helper-utilities for inserting, moving and emptying DOM-elements.\n *\n * When inserting elements, they are first added to a document fragment, keeping the repainting and\n * recalculating of the DOM to a minimum.\n *\n * These have also been tested to be way faster than solutions using `innerHTML` and `insertAdjecentHTML`.\n *\n * @module utils/dom/elementManipulation\n * @since 3.6.0\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n */\n\n\n\n/**\n * Parse a string into an array of DOM nodes.\n *\n * @since 3.6.5\n * @param {Node|string} input - String to parse. If input is already a node or an element, nothing will be done to it.\n * @returns {Node[]} An array of DOM nodes.\n *\n * @example\n * import { parseHTML } from \"./utils/dom/elementManipulation\";\n *\n * const HTMLString = \"An example with <b>text</b> and <i>HTML</i>...\";\n * const nodes = parseHTML(HTMLString);\n *\n * const nodeNames = nodes.map(node => node.nodeName);\n * // Outputs [\"#text\", \"B\", \"#text\", \"I\", \"#text\"]\n *\n * const textOnly = nodes.map(node => node.nodeName === \"#text\" ? node.textContent : \"\").join(\"\");\n * // Outputs \"An example with  and ...\"\n *\n * const htmlOnly = nodes.map(node => node.nodeName !== \"#text\" ? node.outerHTML : \"\").join(\"\");\n * // Outputs \"<b>HTML</b><i>stuff</i>\"\n */\n\nvar parseHTML = function parseHTML(input) {\n  return typeof input === \"string\" ? Array.from(Object(_createElement__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(\"div\", {\n    html: input\n  }).childNodes) : [input];\n};\n/**\n * Delete an element from the DOM.\n *\n * @param {Node|Node[]|NodeList} element - Element(s) to delete.\n */\n\nfunction deleteElement(element) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(element, function (currentElement) {\n    return currentElement.parentNode ? currentElement.parentNode.removeChild(currentElement) : null;\n  });\n}\n/**\n * **Append an element** (or multiple) inside another element, which means it will be placed as the last child.\n *\n * @param {Node|NodeList|string|Array.<(Node|string)>} element - The element(s) to append.\n * @param {Node} container - Append the element inside this container.\n */\n\nfunction appendElement(element, container) {\n  var fragment = document.createDocumentFragment(); // Use createTextNode() before appending text to fragment\n\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(element, function (currentElement) {\n    return fragment.appendChild(typeof currentElement === \"string\" ? document.createTextNode(currentElement) : currentElement);\n  });\n  container.appendChild(fragment);\n}\n/**\n * **Prepend an element** (or multiple) inside another element, which means it will be placed as the first child.\n *\n * @param {Node|NodeList|string|Array.<(Node|string)>} element - The element(s) to prepend.\n * @param {Node} container - Prepend the element inside this container.\n */\n\nfunction prependElement(element, container) {\n  var fragment = document.createDocumentFragment();\n  var lastInsertedElement;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(element, function (currentElement) {\n    // Make sure strings are converted to text nodes before moving on\n    var node = typeof currentElement === \"string\" ? document.createTextNode(currentElement) : currentElement;\n\n    if (lastInsertedElement) {\n      insertElementAfter(node, lastInsertedElement);\n    } else if (fragment.firstChild) {\n      insertElementBefore(node, fragment.firstChild);\n    } else {\n      fragment.appendChild(node);\n    }\n\n    lastInsertedElement = node;\n  });\n\n  if (container.firstChild) {\n    insertElementBefore(fragment, container.firstChild);\n  } else {\n    appendElement(fragment, container);\n  }\n}\n/**\n * Insert one or more elements **after** another element.\n *\n * @param {Node|NodeList|string|Array.<(Node|string)>} newElement - The element(s) to insert after another.\n * @param {Node} existingElement - The existing element to insert after.\n */\n\nfunction insertElementAfter(newElement, existingElement) {\n  var parent = existingElement.parentNode;\n\n  if (parent) {\n    var fragment = document.createDocumentFragment();\n    var lastInsertedElement;\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(newElement, function (currentElement) {\n      // Make sure strings are converted to text nodes before moving on\n      var node = typeof currentElement === \"string\" ? document.createTextNode(currentElement) : currentElement;\n\n      if (lastInsertedElement) {\n        fragment.insertBefore(node, lastInsertedElement.nextSibling);\n      } else {\n        fragment.appendChild(node);\n      }\n\n      lastInsertedElement = node;\n    });\n    parent.insertBefore(fragment, existingElement.nextSibling);\n  }\n}\n/**\n * Insert one or more elements **before** another element.\n *\n * @param {Node|NodeList|string|Array.<(Node|string)>} newElement - The element(s) to insert before another.\n * @param {Node} existingElement - The existing element to insert before.\n */\n\nfunction insertElementBefore(newElement, existingElement) {\n  var fragment = document.createDocumentFragment(); // Use createTextNode() before inserting text into fragment\n\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(newElement, function (currentElement) {\n    return fragment.appendChild(typeof currentElement === \"string\" ? document.createTextNode(currentElement) : currentElement);\n  });\n  existingElement.parentNode.insertBefore(fragment, existingElement);\n}\n/**\n * **Swap two elements** with each other.\n *\n * @param {Node} element1 - This will be replaced with `element2`\n * @param {Node} element2 - This will be replaced with `element1`\n */\n\nfunction swapElements(element1, element2) {\n  // Remember the location of element2\n  var parent2 = element2.parentNode;\n  var next2 = element2.nextSibling; // If element1 is the next sibling of element2\n\n  if (next2 === element1) {\n    parent2.insertBefore(element1, element2);\n  } // Otherwise, insert element2 right before element1\n  else {\n      element1.parentNode.insertBefore(element2, element1); // And now insert element1 where element2 was\n\n      if (next2) {\n        // If there was an element after element2, then insert element1 right before that\n        parent2.insertBefore(element1, next2);\n      } else {\n        // Otherwise, just append as last child\n        parent2.appendChild(element1);\n      }\n    }\n}\n/**\n * **Replace an element** with another one.\n *\n * @param {Node} oldElement - The existing element to be replaced.\n * @param {Node} newElement - The new element to take its place.\n */\n\nfunction replaceElement(oldElement, newElement) {\n  insertElementAfter(newElement, oldElement);\n  oldElement.parentElement.removeChild(oldElement);\n}\n/**\n * **Wrap an element** in a new element.\n *\n * @param {Node} existingElement - The existing element, which is about to be wrapped.\n * @param {Node} newWrapper - The new element which the existing one should be wrapped inside.\n *\n * @example\n * import { wrapElement } from \"./utils/dom/elementManipulation\";\n * import { createElement } from \"./utils/dom/createElement\";\n *\n * const newWrapper = createElement(\"div\", { className: \"wrapper\" });\n * const wrapThis = document.getElementById(\"wrapThis\");\n *\n * wrapElement(wrapThis, newWrapper);\n */\n\nfunction wrapElement(existingElement, newWrapper) {\n  existingElement.parentNode.insertBefore(newWrapper, existingElement);\n  newWrapper.appendChild(existingElement);\n}\n/**\n * **Inner wrap an element** in a new element.\n *\n * Actually, the children are what will be wrapped.\n *\n * @param {Node} existingElement - The existing element, which is about have its children wrapped.\n * @param {Node} newWrapper - The new element which the existing one should be wrapped inside.\n */\n\nfunction wrapInnerElement(existingElement, newWrapper) {\n  while (existingElement.childNodes.length > 0) {\n    newWrapper.appendChild(existingElement.childNodes[0]);\n  }\n\n  appendElement(newWrapper, existingElement);\n}\n/**\n * **Unwrap an element** by moving said element out on its parent and deleting the parent.\n *\n * @param {Node} element - The element to unwrap.\n * @param {boolean} [keepSiblings=true] - The element to unwrap.\n *\n * @example\n * import { unwrapElement } from \"./utils/dom/elementManipulation\";\n * const unwrapThis = document.getElementById(\"unwrapThis\");\n * wrapElement(unwrapThis);\n * // The element just lost its parent and now lives with its grandparent.\n */\n\nfunction unwrapElement(element) {\n  var keepSiblings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var parent = element.parentElement;\n\n  if (keepSiblings) {\n    var allSiblings = Object(_siblings__WEBPACK_IMPORTED_MODULE_0__[\"getSiblings\"])(element, true);\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(allSiblings, function (sibling) {\n      return insertElementBefore(sibling, parent);\n    });\n    deleteElement(parent);\n  } else {\n    replaceElement(parent, element);\n  }\n}\n/**\n * Empty one or more elements by removing all children.\n *\n * This is more than 75% faster than `innerHTML = \"\"` according to performance tests on jsPerf.com.\n *\n * @param {Node|Node[]|NodeList} element - The element(s) to be emptied.\n */\n\nfunction emptyElement(element) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(element, function (currentElement) {\n    while (currentElement.firstChild) {\n      currentElement.removeChild(currentElement.firstChild);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/elementManipulation.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/elementProperties.js":
/*!******************************************************!*\
  !*** ./static/src/js/utils/dom/elementProperties.js ***!
  \******************************************************/
/*! exports provided: isElementEmpty, elementIsEmpty, isElementHidden, elementIsHidden, isElementInViewport, elementInViewport, getElementPosition, isElementInside, getElementScroll, getElementSize, getElementWidth, getElementHeight, setAttributes, removeAttributes, isElementTag, areAllElementsTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElementEmpty\", function() { return isElementEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementIsEmpty\", function() { return elementIsEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElementHidden\", function() { return isElementHidden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementIsHidden\", function() { return elementIsHidden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElementInViewport\", function() { return isElementInViewport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementInViewport\", function() { return elementInViewport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementPosition\", function() { return getElementPosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElementInside\", function() { return isElementInside; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementScroll\", function() { return getElementScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementSize\", function() { return getElementSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementWidth\", function() { return getElementWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementHeight\", function() { return getElementHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAttributes\", function() { return setAttributes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeAttributes\", function() { return removeAttributes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElementTag\", function() { return isElementTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"areAllElementsTag\", function() { return areAllElementsTag; });\n/* harmony import */ var _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/onWindowResize */ \"./static/src/js/utils/events/onWindowResize.js\");\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Utilities for checking properties and states of elements.\n *\n * @module utils/dom/elementProperties\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n * @author Nicolaj Lund Hummel\n * @author Anders Gissel <anders.gissel@akqa.com>\n */\n\n\n\n/**\n * Check if an element is empty.\n *\n * @param {Node} element - Check if this element is empty.\n * @param {boolean} [strict=true] - Set this to **false** to ignore nodes with whitespace.\n * @returns {boolean} **True** if the element is empty.\n */\n\nfunction isElementEmpty(element) {\n  var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return strict ? !element.childNodes.length : !element.innerHTML.trim().length;\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar elementIsEmpty = isElementEmpty;\n/**\n * Check if an element is hidden in the DOM with `display: none;`\n *\n * @param {HTMLElement} element - The element to check.\n * @returns {boolean} **True** if element is hidden, otherwise **false**.\n */\n\nfunction isElementHidden(element) {\n  return element.offsetParent === null;\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar elementIsHidden = isElementHidden;\n/**\n * Check if a given element is within the client viewport.\n *\n * @param {Element} element - Element to check against viewport bounds.\n * @param {number|{x: number, y: number}} expandMargin - Number of pixels to expand viewport-detection-area with. Can be set as an object specifying expansion for `x` and `y`.\n * @returns {boolean} True if element is in viewport.\n *\n *\n * @example <caption>Basic usage:</caption>\n * import { isElementInViewport } from \"./utils/dom/elementProperties\";\n *\n * if (isElementInViewport(element)) {\n *     // The element is visible in the viewport\n * };\n *\n * if (isElementInViewport(element, 100)) {\n *     // The element is within 100 pixels of the viewport\n * };\n *\n * if (isElementInViewport(element, { x: 100, y: 200 })) {\n *     // The element is within 100 pixels of the viewport on the x-axis,\n *     // and within 200 pixels on the y-axis.\n * };\n */\n\nfunction isElementInViewport(element) {\n  var expandMargin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var rect = element.getBoundingClientRect();\n  var expandMarginX = isNaN(expandMargin) ? expandMargin.x : expandMargin;\n  var expandMarginY = isNaN(expandMargin) ? expandMargin.y : expandMargin;\n  var spanY = rect.top + Math.max(rect.height, 1) + expandMarginY;\n  var spanX = rect.left + Math.max(rect.width, 1) + expandMarginX;\n  return spanY >= Math.min(0, expandMarginY) + 1 && rect.top <= _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"currentWindowHeight\"] + expandMarginY - 1 && spanX >= Math.min(0, expandMarginX) + 1 && rect.left <= _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"currentWindowWidth\"] + expandMarginX - 1;\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar elementInViewport = isElementInViewport;\n/**\n * Return the position of an element\n *\n * @param {Element|String} element - The HTML element to work with or its ID\n * @param {Element|String|Window} [relativeTo=window] - The HTML element to return the position relative to or its ID\n * @returns {{top: Number, left: Number}} An object with top and left positions in pixels\n *\n *\n * @example <caption>Basic usage:</caption>\n * import { getElementPosition } from \"./utils/dom/elementProperties\";\n *\n * const element = document.querySelector(\".anElement\");\n * getElementPosition(element);\n *\n *\n * @example <caption>Perform a search for an element with an ID equal to the string, i.e. \"elementId\", and get the position of that:</caption>\n * import { getElementPosition } from \"./utils/dom/elementProperties\";\n *\n * getElementPosition(\"elementId\");\n */\n\nfunction getElementPosition(element) {\n  var relativeTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  var useElement = typeof element === \"string\" ? document.getElementById(element) : element; // Throw error if element wasn't found\n\n  if (!useElement) {\n    throw \"getElementPosition did not find an element.\";\n  }\n\n  var useRelativeTo = typeof relativeTo === \"string\" ? document.getElementById(relativeTo) : relativeTo; // Throw error if relative element wasn't found\n\n  if (!useRelativeTo) {\n    throw \"getElementPosition did not find an element to show the position relative to.\";\n  }\n\n  var rect = useElement.getBoundingClientRect();\n\n  if (relativeTo === window) {\n    // Return position relative to window\n    return {\n      top: rect.top + (window.pageYOffset || document.documentElement.scrollTop),\n      left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft)\n    };\n  } else {\n    var relativeToRect = relativeTo.getBoundingClientRect(); // Return position relative to declared element\n\n    return {\n      top: rect.top - relativeToRect.top,\n      left: rect.left - relativeToRect.left\n    };\n  }\n}\n/**\n * Check if an element is within the bounds of another element.\n *\n * @since 3.9.0\n * @param {Element|String} element - The HTML element to work with or its ID.\n * @param {Element|String|Window} [relativeTo=window] - The HTML element to return the position relative to or its ID.\n * @param {boolean} [mustBeFullyInside=false] - Set this to `true` if 100% of the element _must_ be withing the bounds of the other element.\n * @returns {boolean} True if the element is within the bounds of the other element.\n */\n\nfunction isElementInside(element) {\n  var relativeTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  var mustBeFullyInside = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var useElement = typeof element === \"string\" ? document.getElementById(element) : element;\n  var useRelativeTo = typeof relativeTo === \"string\" ? document.getElementById(relativeTo) : relativeTo;\n  var elementPosition = getElementPosition(useElement, useRelativeTo);\n  var insideTop = elementPosition.top + useElement.offsetHeight >= (mustBeFullyInside ? useElement.offsetHeight : 1);\n  var insideRight = elementPosition.left <= useRelativeTo.offsetWidth - (mustBeFullyInside ? useElement.offsetWidth : 1);\n  var insideBottom = elementPosition.top <= useRelativeTo.offsetHeight - (mustBeFullyInside ? useElement.offsetHeight : 1);\n  var insideLeft = elementPosition.left + useElement.offsetWidth >= (mustBeFullyInside ? useElement.offsetWidth : 1);\n  return insideTop && insideRight && insideBottom && insideLeft;\n}\n/**\n * Get the current scroll values of the given element (or window). Will return an object containing\n * \"left\" and \"top\" properties, which are set to the scroll values, or false if no compatible element\n * was given.\n *\n * @param {Element|Window} [element=window]\n * @returns {{ left: number, top: number } | boolean}\n */\n\nfunction getElementScroll() {\n  var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n\n  if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isElement\"])(element)) {\n    if (element instanceof Window) {\n      return {\n        left: element.pageXOffset || document.documentElement.scrollLeft,\n        top: element.pageYOffset || document.documentElement.scrollTop\n      };\n    } else {\n      return {\n        left: element.scrollX || element.scrollLeft,\n        top: element.scrollY || element.scrollTop\n      };\n    }\n  } else {\n    return false;\n  }\n}\n/**\n * Calculate the scale of an element from its transform matrix.\n *\n * @since 3.12.0\n * @param {string} transform\n * @returns {string}\n */\n\nfunction getScaleFromTransformMatrix(transform) {\n  var scale = 0;\n\n  if (transform && transform !== \"none\") {\n    var matrix = transform.split(\"(\")[1].split(\")\")[0].split(\",\").map(function (value) {\n      return parseFloat(value);\n    });\n    scale = Math.sqrt(matrix[0] * matrix[0] + matrix[1] * matrix[1]);\n  }\n\n  return scale.toFixed(3);\n}\n/**\n * Get both width and height of element\n *\n * @param {HTMLElement} element - The HTML element to work with\n * @param {Object} [options={}] - Object of options\n * @param {boolean} [options.includeTransformScale=false] - Include transform scale\n * @param {boolean} [options.includePadding=false] - Get size including padding (defaults to true)\n * @param {boolean} [options.includeBorder=false] - Get size including border (defaults to true)\n * @param {boolean} [options.includeMargin=true] - Get size including margin (defaults to false)\n * @param {null|\":before\"|\":after\"} [options.pseudoElement=null] - Get size of pseudo element \":before\" or \":after\"\n * @returns {{width: number, height: number}} An object with the width and height as numbers\n */\n\n\nfunction getElementSize(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Get styles\n  var elementStyle = window.getComputedStyle(element, options.pseudoElement);\n  return {\n    width: getElementWidth(element, options, elementStyle),\n    height: getElementHeight(element, options, elementStyle)\n  };\n}\n/**\n * Get width of element\n *\n * @param {HTMLElement} element - The HTML element to work with\n * @param {Object} [options={}] - Object of options\n * @param {boolean} [options.includeTransformScale=false] - Include transform scale\n * @param {boolean} [options.includeMargin=false] - Get width including margin (defaults to false)\n * @param {boolean} [options.includeBorder=true] - Get width including border (defaults to true)\n * @param {boolean} [options.includePadding=true] - Get width including padding (defaults to true)\n * @param {null|\":before\"|\":after\"} [options.pseudoElement=null] - Get width of pseudo element \":before\" or \":after\"\n * @param {CSSStyleDeclaration} [elementStyle] - Style declaration of element (in case you already have called .getComputedStyle(), pass its returned value here)\n * @returns {number} The width as a number\n */\n\nfunction getElementWidth(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var elementStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  // Keep supplied values or set to defaults\n  options.includeMargin = options.includeMargin === true;\n  options.includeBorder = options.includeBorder !== false;\n  options.includePadding = options.includePadding !== false; // Get styles\n\n  var style = elementStyle || window.getComputedStyle(element, options.pseudoElement);\n  var scale = options.includeTransformScale ? getScaleFromTransformMatrix(style.transform) : 1; // Get width including border and padding\n\n  var width = element.offsetWidth; // Calculate width with margin\n\n  if (options.includeMargin) {\n    width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  } // Calculate width without border\n\n\n  if (!options.includeBorder) {\n    width -= parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n  } // Calculate width without padding\n\n\n  if (!options.includePadding) {\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n\n  return width * scale;\n}\n/**\n * Get height of element\n *\n * @param {HTMLElement} element - The HTML element to work with\n * @param {Object} [options={}] - Object of options\n * @param {boolean} [options.includeTransformScale=false] - Include transform scale\n * @param {boolean} [options.includeMargin=false] - Get height including margin (defaults to false)\n * @param {boolean} [options.includeBorder=true] - Get height including border (defaults to true)\n * @param {boolean} [options.includePadding=true] - Get height including padding (defaults to true)\n * @param {null|\":before\"|\":after\"} [options.pseudoElement=null] - Get height of pseudo element \":before\" or \":after\"\n * @param {CSSStyleDeclaration} [elementStyle] - Style declaration of element (in case you already have called .getComputedStyle(), pass its returned value here)\n * @returns {number} The height as a number\n */\n\nfunction getElementHeight(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var elementStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  // Keep supplied values or set to defaults\n  options.includeMargin = options.includeMargin === true;\n  options.includeBorder = options.includeBorder !== false;\n  options.includePadding = options.includePadding !== false; // Get styles\n\n  var style = elementStyle || window.getComputedStyle(element, options.pseudoElement);\n  var scale = options.includeTransformScale ? getScaleFromTransformMatrix(style.transform) : 1; // Get height including border and padding\n\n  var height = element.offsetHeight; // Calculate height with margin\n\n  if (options.includeMargin) {\n    height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n  } // Calculate height without border\n\n\n  if (!options.includeBorder) {\n    height -= parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n  } // Calculate height without padding\n\n\n  if (!options.includePadding) {\n    height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n  }\n\n  return height * scale;\n}\n/**\n * Set a single attribute for the given element. This tiny helper really only exists so `setAttributes()`\n * has someone to do the actual work.\n *\n * @since 3.7.0\n * @param {Element|Element[]|NodeList} elementCollection - The collection to manipulate.\n * @param {string} attributeName - The name of the attribute, ie. `disabled` or `data-something`\n * @param {string|boolean|Number} attributeValue - The value of the attribute, ie. `\"someString\"` or `true`.\n * @private\n */\n\nvar setAttribute = function setAttribute(elementCollection, attributeName, attributeValue) {\n  return Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(elementCollection, function (element) {\n    if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isElement\"])(element)) {\n      // If the option value is a boolean, we'll check the value of the element's property. If that's a\n      // boolean as well, we'll set the property \"directly\". This will get rid of those pesky use-cases\n      // with `disabled=\"true\"` instead of just `disabled`.\n      if (typeof attributeValue === \"boolean\" && typeof element[attributeName] === \"boolean\") {\n        element[attributeName] = attributeValue;\n      } else {\n        element.setAttribute(attributeName, attributeValue);\n      }\n    }\n  });\n};\n/**\n * Set one or more attributes on one or more elements.\n *\n * @since 3.7.0\n * @param {Element|Element[]|NodeList} element - The element(s) to manipulate\n * @param {string|object} attribute - The attribute(s) to manipulate. If sent as a string (ie. `\"disabled\"` or `\"data-value\"`), it will be used as the attribute name, and `attributeValue` will provide the value for it. You can also set this as a key/value object, with the key being the attribute to set, and the value being the... well, the value.\n * @param {string|boolean|Number|null} [attributeValue=null] - The value to set. Will be ignored if `attribute` is an object.\n *\n * @example <caption>Basic usage. In this case, though, you might as well just use `element.setAttribute(disabled, \"disabled\")`, or better yet: `element.disabled = true`</caption>\n * import { setAttributes } from \"./utils/dom/elementProperties\";\n *\n * const element = document.querySelector(\".my-element\");\n * setAttributes(element, \"disabled\", true);\n *\n *\n * @example <caption>Setting multiple properties on multiple elements. This is more like it!</caption>\n * import { setAttributes } from \"./utils/dom/elementProperties\";\n *\n * const elements = document.querySelectorAll(\"div\");\n * setAttributes(elements, {\n *     \"data-value\": \"some value\",\n *     \"data-ill-take-a-pound-of-nuts\": \"That's a lot of nuts!\",\n *     \"data-he-just-left\": \"With nuts!\",\n * });\n *\n */\n\n\nfunction setAttributes(element, attribute) {\n  var attributeValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (_typeof(attribute) === \"object\") {\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(attribute, function (value, attribute) {\n      return setAttribute(element, attribute, value);\n    });\n  } else {\n    setAttribute(element, attribute, attributeValue);\n  }\n}\n/**\n * Remove one or more attributes from one or more elements.\n *\n * @since 3.7.0\n * @param {Element|Element[]|NodeList} elements - Element(s) to remove the given attributes for.\n * @param {string|string[]} attributes - The attributes to remove, ie. `style` or `data-something`. Can be a single attribute or an array of attribute names.\n *\n * @example <caption>Remove a list of attributes from a list of elements:</caption>\n * import { removeAttributes } from \"./utils/dom/elementProperties\";\n *\n * const elements = document.querySelectorAll(\"div\");\n * removeAttributes(elements, [\"data-value\", \"data-name\", \"data-sausage\", \"value\"]);\n */\n\nfunction removeAttributes(elements, attributes) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(elements, function (element) {\n    if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isElement\"])(element)) {\n      Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(attributes, function (attribute) {\n        return element.removeAttribute(attribute);\n      });\n    }\n  });\n}\n/**\n * Match one or more elements' tags against one or more tag names.\n *\n * @since 3.10.0\n * @param {Element|Element[]|NodeList} elements - One or more elements to test.\n * @param {...string|string[]} tagNames - The tag names to match against.\n * @returns {boolean} True if an element's tag name matches one of the supplied tag names. False if none of the elements matched.\n *\n *\n * @example <caption>Basic usage:</caption>\n * import { isElementTag } from \"./utils/dom/elementProperties\";\n *\n * const allElements = document.querySelectorAll(\".testElements\");\n * const divElements = document.getElementsByTagName(\"div\");\n * const singleAudioElement = document.getElementsByById(\"audio\");\n * const singleVideoElement = document.getElementsByById(\"video\");\n *\n * // Match one or more elements against a single tag name.\n * if (isElementTag(divElements, \"div\")) {\n *     // This is true, it's a DIV.\n * };\n *\n * // Match a single element against multiple tag names.\n * if (isElementTag(singleAudioElement, [\"audio\", \"video\"])) {\n *     // This is true, element tag matches \"audio\".\n * };\n *\n * // Match multiple elements against multiple tag names.\n * if (isElementTag(allElements, \"section\", \"article\", \"span\")) {\n *     // This is false.\n *     // None of the elements matched any of the tag names.\n * };\n *\n * // Match multiple elements against a single tag name.\n * if (isElementTag([audioElement, videoElement], \"video\")) {\n *     // This is true.\n *     // One of the elements matched the tag name.\n * };\n */\n\nfunction isElementTag(elements) {\n  for (var _len = arguments.length, tagNames = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    tagNames[_key - 1] = arguments[_key];\n  }\n\n  var acceptedTagNames = tagNames.length === 1 && tagNames[0] instanceof Array ? tagNames[0] : tagNames;\n  var elementTagNames = elements.length ? Array.from(elements).map(function (tis) {\n    return tis.tagName.toLowerCase();\n  }) : [elements.tagName.toLowerCase()];\n  return acceptedTagNames.reduce(function (tagNameMatch, tagName) {\n    return tagNameMatch || elementTagNames.indexOf(tagName.toLowerCase()) > -1;\n  }, false);\n}\n/**\n * Match a number of elements' tags against one or more tag names.\n *\n * @since 3.10.0\n * @param {Element|Element[]|NodeList} elements - One or more elements to test.\n * @param {...string|string[]} tagNames - The tag names to match against.\n * @returns {boolean} True if all elements match one of the supplied tag names. False if one of the elements doesn't match.\n *\n *\n * @example <caption>Basic usage:</caption>\n * import { areAllElementsTag } from \"./utils/dom/elementProperties\";\n *\n * const sections = document.querySelectorAll(\"section\");\n * const articles = document.querySelectorAll(\"article\");\n * const allElements = document.querySelectorAll(\"section, article\");\n *\n * // Match similar elements against a single tag name.\n * if (areAllElementsTag(sections, \"section\")) {\n *     // This is true, their are all sections\n * };\n *\n * // The same as above, but this time it's false.\n * if (areAllElementsTag(article, \"section\"])) {\n *     // This is false, articles are not sections\n * };\n *\n * // Match multiple elements against multiple tag names.\n * if (areAllElementsTag(allElements, \"section\", \"article\")) {\n *     // This is true.\n *     // The elements are either sections or articles.\n * };\n *\n * // The same as above, but this time it's false.\n * if (areAllElementsTag(allElements, \"section\")) {\n *     // This is false.\n *     // Some of the elements are not sections.\n * };\n */\n\nfunction areAllElementsTag(elements) {\n  for (var _len2 = arguments.length, tagNames = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    tagNames[_key2 - 1] = arguments[_key2];\n  }\n\n  var acceptedTagNames = tagNames.length === 1 && tagNames[0] instanceof Array ? tagNames[0] : tagNames;\n  var elementTagNames = elements.length ? Array.from(elements).map(function (tis) {\n    return tis.tagName.toLowerCase();\n  }) : [elements.tagName.toLowerCase()];\n  return !elementTagNames.reduce(function (tagNameNegativeMatch, tagName) {\n    return tagNameNegativeMatch || acceptedTagNames.indexOf(tagName.toLowerCase()) === -1;\n  }, false);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/elementProperties.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/imageHandler.js":
/*!*************************************************!*\
  !*** ./static/src/js/utils/dom/imageHandler.js ***!
  \*************************************************/
/*! exports provided: refreshImages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"refreshImages\", function() { return refreshImages; });\n/* harmony import */ var _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/onWindowResize */ \"./static/src/js/utils/events/onWindowResize.js\");\n/* harmony import */ var _events_onReady__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/onReady */ \"./static/src/js/utils/events/onReady.js\");\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _classList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./classList */ \"./static/src/js/utils/dom/classList.js\");\n/* harmony import */ var _network_loadImage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../network/loadImage */ \"./static/src/js/utils/network/loadImage.js\");\n/**\n * This module loops the dom to collect image wrapper classes.\n * It then adds the images (normal img tags and background images) to the dom\n * with a src based on screen width.\n *\n *\n * @module utils/dom/imageHandler\n * @author Bjarni Olsen <bjarni.olsen@akqa.com>\n * @author Anders Gissel <anders.gissel@akqa.com>\n * @deprecated Replaced by lazyLoad (v3.10.0, 25-03-2019).\n *\n * @example\n * <caption>\n * Basic HTML for handling an image in different sizes depending on the size of the viewport.\n *\n * **Important:** `data-src-xxs` - or whichever breakpoint is the smallest in you setup - *must* be defined.\n * </caption>\n * {@lang html}\n * <div class=\"imagehandler\"\n *     data-src-xxs=\"path/to/image/xxs.jpg\"\n *     data-src-xs=\"path/to/image/xs.jpg\"\n *     data-src-sm=\"path/to/image/sm.jpg\"\n *     data-src-md=\"path/to/image/md.jpg\"\n *     data-src-lg=\"path/to/image/lg.jpg\"\n *     data-src-xl=\"path/to/image/xl.jpg\"\n *     data-src-xxl=\"path/to/image/xxl.jpg\"\n *     data-alt=\"Dummy Alt text\">\n *     <noscript>\n *         <img src=\"path/to/image/fallback.jpg\" alt=\"Dummy Alt text\">\n *     </noscript>\n * </div>\n *\n * @example\n * <caption>\n * Basic HTML for handling a **background image** in different sizes depending on the size of the viewport.\n * </caption>\n * {@lang html}\n * <div class=\"bg-imagehandler\"\n *     data-src-xxs=\"path/to/image/xxs.jpg\"\n *     data-src-sm=\"path/to/image/sm.jpg\"\n *     data-src-lg=\"path/to/image/lg.jpg\"\n *     style=\"background-image: url('path/to/image/fallback.jpg')\">\n * </div>\n *\n * @example <caption>Basic javascript:</caption>\n * import \"./utils/dom/imageHandler\";\n * // That's it.\n */\n\n\n\n\n\nvar loadingClassname = \"image--loading\";\nvar loadedClassname = \"image--loaded\";\nvar lastUsedScreenWidth;\nvar dom = {};\n/**\n * This function gets the data-src from the image wrapper, based on width of the browser window.\n *\n * @private\n * @param {HTMLElement} image - Image wrapper element\n * @returns {string}\n */\n\nfunction getImageSrc(image) {\n  var src = \"\";\n  var largestBreakpointFound = 0;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(_events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"breakpointIndex\"], function (sizeIndication, breakpointName) {\n    if (_events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"currentBreakpoint\"] >= sizeIndication && sizeIndication > largestBreakpointFound) {\n      src = image.getAttribute(\"data-src-\".concat(breakpointName)) || src; // Make sure we won't set the size to a smaller breakpoint later, in case they're not properly ordered.\n\n      largestBreakpointFound = sizeIndication;\n    }\n  });\n  return src;\n}\n/**\n * This function gets the image wrapper data attributes src and alt text,\n * creates a new image and appends it to image wrapper.\n *\n * @private\n * @param {HTMLElement} currentImage - Image wrapper element\n */\n\n\nfunction createImage(currentImage) {\n  var src = getImageSrc(currentImage); // If no usable source was returned, abort at once.\n\n  if (!src) {\n    return;\n  } // We don't want to start processing if the new URL matches the old one.\n\n\n  var oldImage = currentImage.querySelector(\"img.\".concat(loadedClassname));\n\n  if (oldImage) {\n    if (oldImage.getAttribute(\"src\") === src) {\n      return;\n    }\n  } // Add loading-class to current image.\n\n\n  Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"addClass\"])(currentImage, loadingClassname); // Load the image.\n\n  Object(_network_loadImage__WEBPACK_IMPORTED_MODULE_4__[\"loadImage\"])(src).then(function (newImageTag) {\n    // Set the ALT text.\n    var altText = currentImage.getAttribute(\"data-alt\") || \"\";\n    newImageTag.setAttribute(\"alt\", altText);\n    Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"addClass\"])(newImageTag, loadedClassname); // Empty the image container completely, just to be safe. The inline <noscript>-block\n    // isn't needed at this point, and if we don't empty the object completely, we may get\n    // broken node relations that result in double images. This is way better.\n\n    currentImage.innerHTML = \"\";\n    Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"removeClass\"])(currentImage, loadingClassname);\n    currentImage.appendChild(newImageTag);\n  });\n}\n/**\n * This function gets the image wrapper data attributes src and alt text\n * and creates an new image tag to download the image.\n * It then uses the src as a background-image.\n *\n * @private\n * @param {HTMLElement} currentContainer - Image wrapper element\n */\n\n\nfunction loadBgImage(currentContainer) {\n  var src = getImageSrc(currentContainer); // If no usable source was returned, abort at once.\n\n  if (!src) {\n    return;\n  }\n\n  var formattedSrc = \"url(\".concat(encodeURI(src), \")\");\n\n  if (currentContainer.style.backgroundImage === formattedSrc) {\n    return;\n  } // Add loading-class to image.\n\n\n  Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"addClass\"])(currentContainer, loadingClassname); // Start loading the new image.\n\n  Object(_network_loadImage__WEBPACK_IMPORTED_MODULE_4__[\"loadImage\"])(src).then(function () {\n    currentContainer.style.backgroundImage = formattedSrc;\n    Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"addClass\"])(currentContainer, loadedClassname);\n    Object(_classList__WEBPACK_IMPORTED_MODULE_3__[\"removeClass\"])(currentContainer, loadingClassname);\n  });\n}\n/**\n * @private\n */\n\n\nfunction refreshAll() {\n  // If our current screen mode does not match the one we used the last time we made an image lookup,\n  // perform a new one now. Otherwise, what would be the point?\n  if (lastUsedScreenWidth !== _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"currentBreakpoint\"]) {\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(dom.images, createImage);\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(dom.bgImages, loadBgImage);\n    lastUsedScreenWidth = _events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"currentBreakpoint\"];\n  }\n}\n/**\n * Refresh all responsive images on the page.\n */\n\n\nfunction refreshImages() {\n  dom.images = document.querySelectorAll(\".imagehandler\");\n  dom.bgImages = document.querySelectorAll(\".bg-imagehandler\");\n  lastUsedScreenWidth = -1;\n  refreshAll();\n}\nObject(_events_onReady__WEBPACK_IMPORTED_MODULE_1__[\"onReady\"])(function () {\n  Object(_events_onWindowResize__WEBPACK_IMPORTED_MODULE_0__[\"onWindowResize\"])(refreshAll);\n  refreshImages();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9pbWFnZUhhbmRsZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9pbWFnZUhhbmRsZXIuanM/ZGM4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbW9kdWxlIGxvb3BzIHRoZSBkb20gdG8gY29sbGVjdCBpbWFnZSB3cmFwcGVyIGNsYXNzZXMuXG4gKiBJdCB0aGVuIGFkZHMgdGhlIGltYWdlcyAobm9ybWFsIGltZyB0YWdzIGFuZCBiYWNrZ3JvdW5kIGltYWdlcykgdG8gdGhlIGRvbVxuICogd2l0aCBhIHNyYyBiYXNlZCBvbiBzY3JlZW4gd2lkdGguXG4gKlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZG9tL2ltYWdlSGFuZGxlclxuICogQGF1dGhvciBCamFybmkgT2xzZW4gPGJqYXJuaS5vbHNlbkBha3FhLmNvbT5cbiAqIEBhdXRob3IgQW5kZXJzIEdpc3NlbCA8YW5kZXJzLmdpc3NlbEBha3FhLmNvbT5cbiAqIEBkZXByZWNhdGVkIFJlcGxhY2VkIGJ5IGxhenlMb2FkICh2My4xMC4wLCAyNS0wMy0yMDE5KS5cbiAqXG4gKiBAZXhhbXBsZVxuICogPGNhcHRpb24+XG4gKiBCYXNpYyBIVE1MIGZvciBoYW5kbGluZyBhbiBpbWFnZSBpbiBkaWZmZXJlbnQgc2l6ZXMgZGVwZW5kaW5nIG9uIHRoZSBzaXplIG9mIHRoZSB2aWV3cG9ydC5cbiAqXG4gKiAqKkltcG9ydGFudDoqKiBgZGF0YS1zcmMteHhzYCAtIG9yIHdoaWNoZXZlciBicmVha3BvaW50IGlzIHRoZSBzbWFsbGVzdCBpbiB5b3Ugc2V0dXAgLSAqbXVzdCogYmUgZGVmaW5lZC5cbiAqIDwvY2FwdGlvbj5cbiAqIHtAbGFuZyBodG1sfVxuICogPGRpdiBjbGFzcz1cImltYWdlaGFuZGxlclwiXG4gKiAgICAgZGF0YS1zcmMteHhzPVwicGF0aC90by9pbWFnZS94eHMuanBnXCJcbiAqICAgICBkYXRhLXNyYy14cz1cInBhdGgvdG8vaW1hZ2UveHMuanBnXCJcbiAqICAgICBkYXRhLXNyYy1zbT1cInBhdGgvdG8vaW1hZ2Uvc20uanBnXCJcbiAqICAgICBkYXRhLXNyYy1tZD1cInBhdGgvdG8vaW1hZ2UvbWQuanBnXCJcbiAqICAgICBkYXRhLXNyYy1sZz1cInBhdGgvdG8vaW1hZ2UvbGcuanBnXCJcbiAqICAgICBkYXRhLXNyYy14bD1cInBhdGgvdG8vaW1hZ2UveGwuanBnXCJcbiAqICAgICBkYXRhLXNyYy14eGw9XCJwYXRoL3RvL2ltYWdlL3h4bC5qcGdcIlxuICogICAgIGRhdGEtYWx0PVwiRHVtbXkgQWx0IHRleHRcIj5cbiAqICAgICA8bm9zY3JpcHQ+XG4gKiAgICAgICAgIDxpbWcgc3JjPVwicGF0aC90by9pbWFnZS9mYWxsYmFjay5qcGdcIiBhbHQ9XCJEdW1teSBBbHQgdGV4dFwiPlxuICogICAgIDwvbm9zY3JpcHQ+XG4gKiA8L2Rpdj5cbiAqXG4gKiBAZXhhbXBsZVxuICogPGNhcHRpb24+XG4gKiBCYXNpYyBIVE1MIGZvciBoYW5kbGluZyBhICoqYmFja2dyb3VuZCBpbWFnZSoqIGluIGRpZmZlcmVudCBzaXplcyBkZXBlbmRpbmcgb24gdGhlIHNpemUgb2YgdGhlIHZpZXdwb3J0LlxuICogPC9jYXB0aW9uPlxuICoge0BsYW5nIGh0bWx9XG4gKiA8ZGl2IGNsYXNzPVwiYmctaW1hZ2VoYW5kbGVyXCJcbiAqICAgICBkYXRhLXNyYy14eHM9XCJwYXRoL3RvL2ltYWdlL3h4cy5qcGdcIlxuICogICAgIGRhdGEtc3JjLXNtPVwicGF0aC90by9pbWFnZS9zbS5qcGdcIlxuICogICAgIGRhdGEtc3JjLWxnPVwicGF0aC90by9pbWFnZS9sZy5qcGdcIlxuICogICAgIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCdwYXRoL3RvL2ltYWdlL2ZhbGxiYWNrLmpwZycpXCI+XG4gKiA8L2Rpdj5cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5CYXNpYyBqYXZhc2NyaXB0OjwvY2FwdGlvbj5cbiAqIGltcG9ydCBcIi4vdXRpbHMvZG9tL2ltYWdlSGFuZGxlclwiO1xuICogLy8gVGhhdCdzIGl0LlxuICovXG5cblxuaW1wb3J0IHsgY3VycmVudEJyZWFrcG9pbnQsIGJyZWFrcG9pbnRJbmRleCwgb25XaW5kb3dSZXNpemUgfSBmcm9tIFwiLi4vZXZlbnRzL29uV2luZG93UmVzaXplXCI7XG5pbXBvcnQgeyBvblJlYWR5IH0gZnJvbSBcIi4uL2V2ZW50cy9vblJlYWR5XCI7XG5pbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSBcIi4uL2ZvckVhY2hcIjtcbmltcG9ydCB7IGFkZENsYXNzLCByZW1vdmVDbGFzcyB9IGZyb20gXCIuL2NsYXNzTGlzdFwiO1xuaW1wb3J0IHsgbG9hZEltYWdlIH0gZnJvbSBcIi4uL25ldHdvcmsvbG9hZEltYWdlXCI7XG5cblxuXG5jb25zdCBsb2FkaW5nQ2xhc3NuYW1lID0gXCJpbWFnZS0tbG9hZGluZ1wiO1xuY29uc3QgbG9hZGVkQ2xhc3NuYW1lID0gXCJpbWFnZS0tbG9hZGVkXCI7XG5sZXQgbGFzdFVzZWRTY3JlZW5XaWR0aDtcbmNvbnN0IGRvbSA9IHt9O1xuXG5cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGdldHMgdGhlIGRhdGEtc3JjIGZyb20gdGhlIGltYWdlIHdyYXBwZXIsIGJhc2VkIG9uIHdpZHRoIG9mIHRoZSBicm93c2VyIHdpbmRvdy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gaW1hZ2UgLSBJbWFnZSB3cmFwcGVyIGVsZW1lbnRcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldEltYWdlU3JjKGltYWdlKSB7XG5cbiAgICBsZXQgc3JjID0gXCJcIjtcbiAgICBsZXQgbGFyZ2VzdEJyZWFrcG9pbnRGb3VuZCA9IDA7XG5cbiAgICBmb3JFYWNoKGJyZWFrcG9pbnRJbmRleCwgKHNpemVJbmRpY2F0aW9uLCBicmVha3BvaW50TmFtZSkgPT4ge1xuICAgICAgICBpZiAoY3VycmVudEJyZWFrcG9pbnQgPj0gc2l6ZUluZGljYXRpb24gJiYgc2l6ZUluZGljYXRpb24gPiBsYXJnZXN0QnJlYWtwb2ludEZvdW5kKSB7XG4gICAgICAgICAgICBzcmMgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoYGRhdGEtc3JjLSR7YnJlYWtwb2ludE5hbWV9YCkgfHwgc3JjO1xuXG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgd2Ugd29uJ3Qgc2V0IHRoZSBzaXplIHRvIGEgc21hbGxlciBicmVha3BvaW50IGxhdGVyLCBpbiBjYXNlIHRoZXkncmUgbm90IHByb3Blcmx5IG9yZGVyZWQuXG4gICAgICAgICAgICBsYXJnZXN0QnJlYWtwb2ludEZvdW5kID0gc2l6ZUluZGljYXRpb247XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBzcmM7XG59XG5cblxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gZ2V0cyB0aGUgaW1hZ2Ugd3JhcHBlciBkYXRhIGF0dHJpYnV0ZXMgc3JjIGFuZCBhbHQgdGV4dCxcbiAqIGNyZWF0ZXMgYSBuZXcgaW1hZ2UgYW5kIGFwcGVuZHMgaXQgdG8gaW1hZ2Ugd3JhcHBlci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY3VycmVudEltYWdlIC0gSW1hZ2Ugd3JhcHBlciBlbGVtZW50XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUltYWdlKGN1cnJlbnRJbWFnZSkge1xuICAgIGNvbnN0IHNyYyA9IGdldEltYWdlU3JjKGN1cnJlbnRJbWFnZSk7XG5cbiAgICAvLyBJZiBubyB1c2FibGUgc291cmNlIHdhcyByZXR1cm5lZCwgYWJvcnQgYXQgb25jZS5cbiAgICBpZiAoIXNyYykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBzdGFydCBwcm9jZXNzaW5nIGlmIHRoZSBuZXcgVVJMIG1hdGNoZXMgdGhlIG9sZCBvbmUuXG4gICAgY29uc3Qgb2xkSW1hZ2UgPSBjdXJyZW50SW1hZ2UucXVlcnlTZWxlY3RvcihgaW1nLiR7bG9hZGVkQ2xhc3NuYW1lfWApO1xuICAgIGlmIChvbGRJbWFnZSkge1xuICAgICAgICBpZiAob2xkSW1hZ2UuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09PSBzcmMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBsb2FkaW5nLWNsYXNzIHRvIGN1cnJlbnQgaW1hZ2UuXG4gICAgYWRkQ2xhc3MoY3VycmVudEltYWdlLCBsb2FkaW5nQ2xhc3NuYW1lKTtcblxuICAgIC8vIExvYWQgdGhlIGltYWdlLlxuICAgIGxvYWRJbWFnZShzcmMpLnRoZW4obmV3SW1hZ2VUYWcgPT4ge1xuICAgICAgICAvLyBTZXQgdGhlIEFMVCB0ZXh0LlxuICAgICAgICBjb25zdCBhbHRUZXh0ID0gY3VycmVudEltYWdlLmdldEF0dHJpYnV0ZShcImRhdGEtYWx0XCIpIHx8IFwiXCI7XG4gICAgICAgIG5ld0ltYWdlVGFnLnNldEF0dHJpYnV0ZShcImFsdFwiLCBhbHRUZXh0KTtcblxuICAgICAgICBhZGRDbGFzcyhuZXdJbWFnZVRhZywgbG9hZGVkQ2xhc3NuYW1lKTtcblxuICAgICAgICAvLyBFbXB0eSB0aGUgaW1hZ2UgY29udGFpbmVyIGNvbXBsZXRlbHksIGp1c3QgdG8gYmUgc2FmZS4gVGhlIGlubGluZSA8bm9zY3JpcHQ+LWJsb2NrXG4gICAgICAgIC8vIGlzbid0IG5lZWRlZCBhdCB0aGlzIHBvaW50LCBhbmQgaWYgd2UgZG9uJ3QgZW1wdHkgdGhlIG9iamVjdCBjb21wbGV0ZWx5LCB3ZSBtYXkgZ2V0XG4gICAgICAgIC8vIGJyb2tlbiBub2RlIHJlbGF0aW9ucyB0aGF0IHJlc3VsdCBpbiBkb3VibGUgaW1hZ2VzLiBUaGlzIGlzIHdheSBiZXR0ZXIuXG4gICAgICAgIGN1cnJlbnRJbWFnZS5pbm5lckhUTUwgPSBcIlwiO1xuXG4gICAgICAgIHJlbW92ZUNsYXNzKGN1cnJlbnRJbWFnZSwgbG9hZGluZ0NsYXNzbmFtZSk7XG4gICAgICAgIGN1cnJlbnRJbWFnZS5hcHBlbmRDaGlsZChuZXdJbWFnZVRhZyk7XG4gICAgfSk7XG59XG5cblxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gZ2V0cyB0aGUgaW1hZ2Ugd3JhcHBlciBkYXRhIGF0dHJpYnV0ZXMgc3JjIGFuZCBhbHQgdGV4dFxuICogYW5kIGNyZWF0ZXMgYW4gbmV3IGltYWdlIHRhZyB0byBkb3dubG9hZCB0aGUgaW1hZ2UuXG4gKiBJdCB0aGVuIHVzZXMgdGhlIHNyYyBhcyBhIGJhY2tncm91bmQtaW1hZ2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGN1cnJlbnRDb250YWluZXIgLSBJbWFnZSB3cmFwcGVyIGVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gbG9hZEJnSW1hZ2UoY3VycmVudENvbnRhaW5lcikge1xuXG4gICAgY29uc3Qgc3JjID0gZ2V0SW1hZ2VTcmMoY3VycmVudENvbnRhaW5lcik7XG5cbiAgICAvLyBJZiBubyB1c2FibGUgc291cmNlIHdhcyByZXR1cm5lZCwgYWJvcnQgYXQgb25jZS5cbiAgICBpZiAoIXNyYykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybWF0dGVkU3JjID0gYHVybCgke2VuY29kZVVSSShzcmMpfSlgO1xuXG4gICAgaWYgKGN1cnJlbnRDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZEltYWdlID09PSBmb3JtYXR0ZWRTcmMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEFkZCBsb2FkaW5nLWNsYXNzIHRvIGltYWdlLlxuICAgIGFkZENsYXNzKGN1cnJlbnRDb250YWluZXIsIGxvYWRpbmdDbGFzc25hbWUpO1xuXG4gICAgLy8gU3RhcnQgbG9hZGluZyB0aGUgbmV3IGltYWdlLlxuICAgIGxvYWRJbWFnZShzcmMpLnRoZW4oKCkgPT4ge1xuICAgICAgICBjdXJyZW50Q29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGZvcm1hdHRlZFNyYztcbiAgICAgICAgYWRkQ2xhc3MoY3VycmVudENvbnRhaW5lciwgbG9hZGVkQ2xhc3NuYW1lKTtcbiAgICAgICAgcmVtb3ZlQ2xhc3MoY3VycmVudENvbnRhaW5lciwgbG9hZGluZ0NsYXNzbmFtZSk7XG4gICAgfSk7XG59XG5cblxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlZnJlc2hBbGwoKSB7XG4gICAgLy8gSWYgb3VyIGN1cnJlbnQgc2NyZWVuIG1vZGUgZG9lcyBub3QgbWF0Y2ggdGhlIG9uZSB3ZSB1c2VkIHRoZSBsYXN0IHRpbWUgd2UgbWFkZSBhbiBpbWFnZSBsb29rdXAsXG4gICAgLy8gcGVyZm9ybSBhIG5ldyBvbmUgbm93LiBPdGhlcndpc2UsIHdoYXQgd291bGQgYmUgdGhlIHBvaW50P1xuICAgIGlmIChsYXN0VXNlZFNjcmVlbldpZHRoICE9PSBjdXJyZW50QnJlYWtwb2ludCkge1xuICAgICAgICBmb3JFYWNoKGRvbS5pbWFnZXMsIGNyZWF0ZUltYWdlKTtcbiAgICAgICAgZm9yRWFjaChkb20uYmdJbWFnZXMsIGxvYWRCZ0ltYWdlKTtcbiAgICAgICAgbGFzdFVzZWRTY3JlZW5XaWR0aCA9IGN1cnJlbnRCcmVha3BvaW50O1xuICAgIH1cbn1cblxuXG5cbi8qKlxuICogUmVmcmVzaCBhbGwgcmVzcG9uc2l2ZSBpbWFnZXMgb24gdGhlIHBhZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWZyZXNoSW1hZ2VzKCkge1xuICAgIGRvbS5pbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmltYWdlaGFuZGxlclwiKTtcbiAgICBkb20uYmdJbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmJnLWltYWdlaGFuZGxlclwiKTtcbiAgICBsYXN0VXNlZFNjcmVlbldpZHRoID0gLTE7XG4gICAgcmVmcmVzaEFsbCgpO1xufVxuXG5cblxub25SZWFkeSgoKSA9PiB7XG4gICAgb25XaW5kb3dSZXNpemUocmVmcmVzaEFsbCk7XG4gICAgcmVmcmVzaEltYWdlcygpO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7QUFPQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFJQTs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7Ozs7O0FBUUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/imageHandler.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/scrollLock.js":
/*!***********************************************!*\
  !*** ./static/src/js/utils/dom/scrollLock.js ***!
  \***********************************************/
/*! exports provided: isScrollLocked, enableScrollLock, enable, disableScrollLock, disable, toggleScrollLock, toggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isScrollLocked\", function() { return isScrollLocked; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableScrollLock\", function() { return enableScrollLock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enable\", function() { return enable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableScrollLock\", function() { return disableScrollLock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disable\", function() { return disable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleScrollLock\", function() { return toggleScrollLock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggle\", function() { return toggle; });\n/* harmony import */ var _events_triggerCustomEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/triggerCustomEvent */ \"./static/src/js/utils/events/triggerCustomEvent.js\");\n/* harmony import */ var _elementProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementProperties */ \"./static/src/js/utils/dom/elementProperties.js\");\n/* harmony import */ var _classList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classList */ \"./static/src/js/utils/dom/classList.js\");\n/**\n * A utility to **lock the viewport** at the current position in order to **stop scrolling**.\n *\n * This is very useful when opening modal windows and the likes.\n *\n * @module utils/dom/scrollLock\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Basic usage</caption>\n * import { enableScrollLock, disableScrollLock } from \"./utils/dom/scrollLock\";\n *\n * enableScrollLock();\n * window.setTimeout(disableScrollLock, 3000);\n */\n\n\n\nvar className = \"akqa-scroll-lock\";\nvar scrollTop = 0;\n/**\n * Get the current state of the scroll lock. `true` if the scroll lock is enabled, otherwise `false`.\n *\n * @type {boolean}\n */\n\nvar isScrollLocked = false;\n/**\n * Enable the scroll lock.\n */\n\nfunction enableScrollLock() {\n  if (!isScrollLocked) {\n    // Get scroll position\n    var scrollPosition = Object(_elementProperties__WEBPACK_IMPORTED_MODULE_1__[\"getElementScroll\"])(); // Reset scroll position\n\n    window.scrollTo(scrollPosition.left, 0);\n    var htmlTag = document.documentElement;\n    Object(_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(htmlTag, className);\n    htmlTag.style.marginTop = \"\".concat(-scrollPosition.top, \"px\");\n    htmlTag.style.position = \"fixed\";\n    htmlTag.style.overflow = \"hidden\";\n    htmlTag.style.width = \"100%\"; // Trigger event on target. You can listen for it using document.body.addEventListener(\"akqa.scrollLock:enable\", callbackHere)\n\n    Object(_events_triggerCustomEvent__WEBPACK_IMPORTED_MODULE_0__[\"triggerCustomEvent\"])(document.body, \"akqa.scrollLock:enable\"); // Remember state\n\n    isScrollLocked = true;\n    scrollTop = scrollPosition.top;\n  }\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar enable = enableScrollLock;\n/**\n * Disable the scroll lock\n */\n\nfunction disableScrollLock() {\n  if (isScrollLocked) {\n    var scrollPosition = Object(_elementProperties__WEBPACK_IMPORTED_MODULE_1__[\"getElementScroll\"])();\n    var htmlTag = document.documentElement;\n    Object(_classList__WEBPACK_IMPORTED_MODULE_2__[\"removeClass\"])(htmlTag, className);\n    htmlTag.style.marginTop = \"\";\n    htmlTag.style.position = \"\";\n    htmlTag.style.overflow = \"\";\n    htmlTag.style.width = \"\"; // Set the scroll position to what it was before\n\n    window.scrollTo(scrollPosition.left, scrollTop); // Trigger event on target. You can listen for it using document.body.addEventListener(\"akqa.scrollLock:disable\", callbackHere)\n\n    Object(_events_triggerCustomEvent__WEBPACK_IMPORTED_MODULE_0__[\"triggerCustomEvent\"])(document.body, \"akqa.scrollLock:disable\"); // Remember state\n\n    isScrollLocked = false;\n  }\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar disable = disableScrollLock;\n/**\n * Toggle the scroll lock between on and off\n */\n\nfunction toggleScrollLock() {\n  if (isScrollLocked) {\n    disableScrollLock();\n  } else {\n    enableScrollLock();\n  }\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar toggle = toggleScrollLock;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9zY3JvbGxMb2NrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9kb20vc2Nyb2xsTG9jay5qcz9kOWRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSB1dGlsaXR5IHRvICoqbG9jayB0aGUgdmlld3BvcnQqKiBhdCB0aGUgY3VycmVudCBwb3NpdGlvbiBpbiBvcmRlciB0byAqKnN0b3Agc2Nyb2xsaW5nKiouXG4gKlxuICogVGhpcyBpcyB2ZXJ5IHVzZWZ1bCB3aGVuIG9wZW5pbmcgbW9kYWwgd2luZG93cyBhbmQgdGhlIGxpa2VzLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZG9tL3Njcm9sbExvY2tcbiAqIEBhdXRob3IgTGFycyBNdW5raG9sbSA8bGFycy5tdW5raG9sbUBha3FhLmNvbT5cbiAqIEBhdXRob3IgQW5kZXJzIEdpc3NlbCA8YW5kZXJzLmdpc3NlbEBha3FhLmNvbT5cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5CYXNpYyB1c2FnZTwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IGVuYWJsZVNjcm9sbExvY2ssIGRpc2FibGVTY3JvbGxMb2NrIH0gZnJvbSBcIi4vdXRpbHMvZG9tL3Njcm9sbExvY2tcIjtcbiAqXG4gKiBlbmFibGVTY3JvbGxMb2NrKCk7XG4gKiB3aW5kb3cuc2V0VGltZW91dChkaXNhYmxlU2Nyb2xsTG9jaywgMzAwMCk7XG4gKi9cblxuaW1wb3J0IHsgdHJpZ2dlckN1c3RvbUV2ZW50IH0gZnJvbSBcIi4uL2V2ZW50cy90cmlnZ2VyQ3VzdG9tRXZlbnRcIjtcbmltcG9ydCB7IGdldEVsZW1lbnRTY3JvbGwgfSBmcm9tIFwiLi9lbGVtZW50UHJvcGVydGllc1wiO1xuaW1wb3J0IHsgYWRkQ2xhc3MsIHJlbW92ZUNsYXNzIH0gZnJvbSBcIi4vY2xhc3NMaXN0XCI7XG5cblxuXG5jb25zdCBjbGFzc05hbWUgPSBcImFrcWEtc2Nyb2xsLWxvY2tcIjtcbmxldCBzY3JvbGxUb3AgPSAwO1xuXG5cblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHNjcm9sbCBsb2NrLiBgdHJ1ZWAgaWYgdGhlIHNjcm9sbCBsb2NrIGlzIGVuYWJsZWQsIG90aGVyd2lzZSBgZmFsc2VgLlxuICpcbiAqIEB0eXBlIHtib29sZWFufVxuICovXG5leHBvcnQgbGV0IGlzU2Nyb2xsTG9ja2VkID0gZmFsc2U7XG5cblxuXG4vKipcbiAqIEVuYWJsZSB0aGUgc2Nyb2xsIGxvY2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVTY3JvbGxMb2NrKCkge1xuICAgIGlmICghaXNTY3JvbGxMb2NrZWQpIHtcbiAgICAgICAgLy8gR2V0IHNjcm9sbCBwb3NpdGlvblxuICAgICAgICBjb25zdCBzY3JvbGxQb3NpdGlvbiA9IGdldEVsZW1lbnRTY3JvbGwoKTtcblxuICAgICAgICAvLyBSZXNldCBzY3JvbGwgcG9zaXRpb25cbiAgICAgICAgd2luZG93LnNjcm9sbFRvKHNjcm9sbFBvc2l0aW9uLmxlZnQsIDApO1xuXG4gICAgICAgIGNvbnN0IGh0bWxUYWcgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIGFkZENsYXNzKGh0bWxUYWcsIGNsYXNzTmFtZSk7XG4gICAgICAgIGh0bWxUYWcuc3R5bGUubWFyZ2luVG9wID0gYCR7LXNjcm9sbFBvc2l0aW9uLnRvcH1weGA7XG4gICAgICAgIGh0bWxUYWcuc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XG4gICAgICAgIGh0bWxUYWcuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuICAgICAgICBodG1sVGFnLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XG5cbiAgICAgICAgLy8gVHJpZ2dlciBldmVudCBvbiB0YXJnZXQuIFlvdSBjYW4gbGlzdGVuIGZvciBpdCB1c2luZyBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJha3FhLnNjcm9sbExvY2s6ZW5hYmxlXCIsIGNhbGxiYWNrSGVyZSlcbiAgICAgICAgdHJpZ2dlckN1c3RvbUV2ZW50KGRvY3VtZW50LmJvZHksIFwiYWtxYS5zY3JvbGxMb2NrOmVuYWJsZVwiKTtcblxuICAgICAgICAvLyBSZW1lbWJlciBzdGF0ZVxuICAgICAgICBpc1Njcm9sbExvY2tlZCA9IHRydWU7XG4gICAgICAgIHNjcm9sbFRvcCA9IHNjcm9sbFBvc2l0aW9uLnRvcDtcbiAgICB9XG59XG5cblxuXG4vKipcbiAqIEB0eXBlIHtmdW5jdGlvbn1cbiAqIEBpZ25vcmVcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmV4cG9ydCBjb25zdCBlbmFibGUgPSBlbmFibGVTY3JvbGxMb2NrO1xuXG5cblxuLyoqXG4gKiBEaXNhYmxlIHRoZSBzY3JvbGwgbG9ja1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGlzYWJsZVNjcm9sbExvY2soKSB7XG4gICAgaWYgKGlzU2Nyb2xsTG9ja2VkKSB7XG4gICAgICAgIGNvbnN0IHNjcm9sbFBvc2l0aW9uID0gZ2V0RWxlbWVudFNjcm9sbCgpO1xuXG4gICAgICAgIGNvbnN0IGh0bWxUYWcgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlbW92ZUNsYXNzKGh0bWxUYWcsIGNsYXNzTmFtZSk7XG4gICAgICAgIGh0bWxUYWcuc3R5bGUubWFyZ2luVG9wID0gXCJcIjtcbiAgICAgICAgaHRtbFRhZy5zdHlsZS5wb3NpdGlvbiA9IFwiXCI7XG4gICAgICAgIGh0bWxUYWcuc3R5bGUub3ZlcmZsb3cgPSBcIlwiO1xuICAgICAgICBodG1sVGFnLnN0eWxlLndpZHRoID0gXCJcIjtcblxuICAgICAgICAvLyBTZXQgdGhlIHNjcm9sbCBwb3NpdGlvbiB0byB3aGF0IGl0IHdhcyBiZWZvcmVcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKHNjcm9sbFBvc2l0aW9uLmxlZnQsIHNjcm9sbFRvcCk7XG5cbiAgICAgICAgLy8gVHJpZ2dlciBldmVudCBvbiB0YXJnZXQuIFlvdSBjYW4gbGlzdGVuIGZvciBpdCB1c2luZyBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJha3FhLnNjcm9sbExvY2s6ZGlzYWJsZVwiLCBjYWxsYmFja0hlcmUpXG4gICAgICAgIHRyaWdnZXJDdXN0b21FdmVudChkb2N1bWVudC5ib2R5LCBcImFrcWEuc2Nyb2xsTG9jazpkaXNhYmxlXCIpO1xuXG4gICAgICAgIC8vIFJlbWVtYmVyIHN0YXRlXG4gICAgICAgIGlzU2Nyb2xsTG9ja2VkID0gZmFsc2U7XG4gICAgfVxufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgZGlzYWJsZSA9IGRpc2FibGVTY3JvbGxMb2NrO1xuXG5cblxuLyoqXG4gKiBUb2dnbGUgdGhlIHNjcm9sbCBsb2NrIGJldHdlZW4gb24gYW5kIG9mZlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlU2Nyb2xsTG9jaygpIHtcbiAgICBpZiAoaXNTY3JvbGxMb2NrZWQpIHtcbiAgICAgICAgZGlzYWJsZVNjcm9sbExvY2soKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbmFibGVTY3JvbGxMb2NrKCk7XG4gICAgfVxufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgdG9nZ2xlID0gdG9nZ2xlU2Nyb2xsTG9jaztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUlBOzs7Ozs7QUFLQTtBQUlBOzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7O0FBS0E7QUFJQTs7OztBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7O0FBS0E7QUFJQTs7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQUtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/scrollLock.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/setStyles.js":
/*!**********************************************!*\
  !*** ./static/src/js/utils/dom/setStyles.js ***!
  \**********************************************/
/*! exports provided: setStyles, saveStylesAsDefault, resetStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setStyles\", function() { return setStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saveStylesAsDefault\", function() { return saveStylesAsDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetStyles\", function() { return resetStyles; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/**\n * Set (or reset) an object of styles on multiple elements at the same time.\n *\n * @module utils/dom/setStyles\n * @since 3.6.0\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n *\n * @example <caption>Basic usage:</caption>\n * import { setStyles, resetStyles } from \"./utils/dom/setStyles\";\n *\n * const uglyElements = document.querySelectorAll(\"figure, aside, article .box\");\n * setStyles(uglyElements, {\n *     color: \"#FFF\",\n *     boxShadow: \"0 1px 10px #000\",\n * });\n *\n * // And reset styles like this:\n * resetStyles(uglyElements);\n *\n *\n * @example <caption>If you don't speak camelCase, use kebab-case like this:</caption>\n * setStyles(document.getElementById(\"anotherUglyElement\"), {\n *     \"background-color\": \"#FFF\",\n *     \"border-radius\": \"50%\",\n *     \"padding-top\": 0,\n * });\n *\n *\n * @example\n * <caption>You can set your own styles as the default:</caption>\n * import {\n *     setStyles,\n *     resetStyles,\n *     saveStylesAsDefault\n * } from \"./utils/dom/setStyles\";\n *\n * const element = document.getElementById(\"uglyElement\");\n *\n * // Set the background color to white\n * setStyles(element, {\n *     \"background-color\": \"#FFF\",\n * });\n *\n * // Save the current inline styling as the default\n * saveStylesAsDefault(element);\n *\n * // Change styling again\n * setStyles(element, {\n *     \"background-color\": \"#000\",\n * });\n *\n * // Now reset - this will set the background-color to white again\n * resetStyles(element);\n */\n // We'll be using Map and not a regular object, since Map supports using objects as keys.\n// This requires you to include the required polyfill. \"default-3.6\" from polyfill.io is fine.\n\nvar knownDOMObjects = new Map();\n/**\n * Set multiple styles on one or more elements.\n *\n * @param {HTMLElement|HTMLElement[]|NodeList} element - One or more elements that need some stylin'.\n * @param {Object} styles - An object with styles. Properties can be in both camelCase and kebab-case.\n */\n\nfunction setStyles(element, styles) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(element, function (currentElement) {\n    // Reset styles\n    if (styles === null) {\n      resetStyles(currentElement);\n    } // Set new styles\n    else {\n        // Save original styling in case the element needs to be reset to its default state later\n        saveStylesAsDefault(currentElement, false); // Do the changes!\n\n        Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(styles, function (value, key) {\n          return currentElement.style[key.replace(/-([a-z])/g, function (match) {\n            return match[1].toUpperCase();\n          })] = value;\n        });\n      }\n  });\n}\n/**\n * Save the current inline styling of one or more elements as the default.\n *\n * @param {HTMLElement|HTMLElement[]|NodeList} element - One or more elements to get the inline styling from.\n * @param {boolean} [overwriteExisting=true] - Set to **false** if you don't want to overwrite an already existing default.\n */\n\nfunction saveStylesAsDefault(element) {\n  var overwriteExisting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(element, function (currentElement) {\n    var originalInlineStyles = knownDOMObjects.get(currentElement);\n\n    if (overwriteExisting || !(originalInlineStyles && typeof originalInlineStyles === \"string\")) {\n      knownDOMObjects.set(currentElement, currentElement.getAttribute(\"style\") || \"\");\n    }\n  });\n}\n/**\n * Reset the styling of one or more elements.\n *\n * If an element had inline styling before you used `setStyles()` on it, we'll reset to that.\n * If you want to remove inline styles completely, set the second argument `hardReset` to *true*.\n *\n * @param {HTMLElement|HTMLElement[]|NodeList} element - One or more elements that you wish to remove inline styling from.\n * @param {boolean} [isHardReset=false] - Set this to **true** to remove inline styling completely.\n */\n\nfunction resetStyles(element) {\n  var isHardReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(element, function (currentElement) {\n    var setStylesTo = \"\";\n\n    if (!isHardReset) {\n      // If the element's original inline styling has been saved, reset to that\n      var originalInlineStyles = knownDOMObjects.get(currentElement);\n\n      if (originalInlineStyles && typeof originalInlineStyles === \"string\") {\n        setStylesTo = originalInlineStyles || \"\";\n      }\n    }\n\n    currentElement.style.cssText = setStylesTo;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9zZXRTdHlsZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9zZXRTdHlsZXMuanM/NGJhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNldCAob3IgcmVzZXQpIGFuIG9iamVjdCBvZiBzdHlsZXMgb24gbXVsdGlwbGUgZWxlbWVudHMgYXQgdGhlIHNhbWUgdGltZS5cbiAqXG4gKiBAbW9kdWxlIHV0aWxzL2RvbS9zZXRTdHlsZXNcbiAqIEBzaW5jZSAzLjYuMFxuICogQGF1dGhvciBMYXJzIE11bmtob2xtIDxsYXJzLm11bmtob2xtQGFrcWEuY29tPlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkJhc2ljIHVzYWdlOjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IHNldFN0eWxlcywgcmVzZXRTdHlsZXMgfSBmcm9tIFwiLi91dGlscy9kb20vc2V0U3R5bGVzXCI7XG4gKlxuICogY29uc3QgdWdseUVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImZpZ3VyZSwgYXNpZGUsIGFydGljbGUgLmJveFwiKTtcbiAqIHNldFN0eWxlcyh1Z2x5RWxlbWVudHMsIHtcbiAqICAgICBjb2xvcjogXCIjRkZGXCIsXG4gKiAgICAgYm94U2hhZG93OiBcIjAgMXB4IDEwcHggIzAwMFwiLFxuICogfSk7XG4gKlxuICogLy8gQW5kIHJlc2V0IHN0eWxlcyBsaWtlIHRoaXM6XG4gKiByZXNldFN0eWxlcyh1Z2x5RWxlbWVudHMpO1xuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5JZiB5b3UgZG9uJ3Qgc3BlYWsgY2FtZWxDYXNlLCB1c2Uga2ViYWItY2FzZSBsaWtlIHRoaXM6PC9jYXB0aW9uPlxuICogc2V0U3R5bGVzKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5vdGhlclVnbHlFbGVtZW50XCIpLCB7XG4gKiAgICAgXCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwiI0ZGRlwiLFxuICogICAgIFwiYm9yZGVyLXJhZGl1c1wiOiBcIjUwJVwiLFxuICogICAgIFwicGFkZGluZy10b3BcIjogMCxcbiAqIH0pO1xuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogPGNhcHRpb24+WW91IGNhbiBzZXQgeW91ciBvd24gc3R5bGVzIGFzIHRoZSBkZWZhdWx0OjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7XG4gKiAgICAgc2V0U3R5bGVzLFxuICogICAgIHJlc2V0U3R5bGVzLFxuICogICAgIHNhdmVTdHlsZXNBc0RlZmF1bHRcbiAqIH0gZnJvbSBcIi4vdXRpbHMvZG9tL3NldFN0eWxlc1wiO1xuICpcbiAqIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVnbHlFbGVtZW50XCIpO1xuICpcbiAqIC8vIFNldCB0aGUgYmFja2dyb3VuZCBjb2xvciB0byB3aGl0ZVxuICogc2V0U3R5bGVzKGVsZW1lbnQsIHtcbiAqICAgICBcImJhY2tncm91bmQtY29sb3JcIjogXCIjRkZGXCIsXG4gKiB9KTtcbiAqXG4gKiAvLyBTYXZlIHRoZSBjdXJyZW50IGlubGluZSBzdHlsaW5nIGFzIHRoZSBkZWZhdWx0XG4gKiBzYXZlU3R5bGVzQXNEZWZhdWx0KGVsZW1lbnQpO1xuICpcbiAqIC8vIENoYW5nZSBzdHlsaW5nIGFnYWluXG4gKiBzZXRTdHlsZXMoZWxlbWVudCwge1xuICogICAgIFwiYmFja2dyb3VuZC1jb2xvclwiOiBcIiMwMDBcIixcbiAqIH0pO1xuICpcbiAqIC8vIE5vdyByZXNldCAtIHRoaXMgd2lsbCBzZXQgdGhlIGJhY2tncm91bmQtY29sb3IgdG8gd2hpdGUgYWdhaW5cbiAqIHJlc2V0U3R5bGVzKGVsZW1lbnQpO1xuICovXG5cbmltcG9ydCB7IGZvckVhY2ggfSBmcm9tIFwiLi4vZm9yRWFjaFwiO1xuXG5cbi8vIFdlJ2xsIGJlIHVzaW5nIE1hcCBhbmQgbm90IGEgcmVndWxhciBvYmplY3QsIHNpbmNlIE1hcCBzdXBwb3J0cyB1c2luZyBvYmplY3RzIGFzIGtleXMuXG4vLyBUaGlzIHJlcXVpcmVzIHlvdSB0byBpbmNsdWRlIHRoZSByZXF1aXJlZCBwb2x5ZmlsbC4gXCJkZWZhdWx0LTMuNlwiIGZyb20gcG9seWZpbGwuaW8gaXMgZmluZS5cbmNvbnN0IGtub3duRE9NT2JqZWN0cyA9IG5ldyBNYXAoKTtcblxuXG5cbi8qKlxuICogU2V0IG11bHRpcGxlIHN0eWxlcyBvbiBvbmUgb3IgbW9yZSBlbGVtZW50cy5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fEhUTUxFbGVtZW50W118Tm9kZUxpc3R9IGVsZW1lbnQgLSBPbmUgb3IgbW9yZSBlbGVtZW50cyB0aGF0IG5lZWQgc29tZSBzdHlsaW4nLlxuICogQHBhcmFtIHtPYmplY3R9IHN0eWxlcyAtIEFuIG9iamVjdCB3aXRoIHN0eWxlcy4gUHJvcGVydGllcyBjYW4gYmUgaW4gYm90aCBjYW1lbENhc2UgYW5kIGtlYmFiLWNhc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRTdHlsZXMoZWxlbWVudCwgc3R5bGVzKSB7XG4gICAgZm9yRWFjaChlbGVtZW50LCBjdXJyZW50RWxlbWVudCA9PiB7XG5cbiAgICAgICAgLy8gUmVzZXQgc3R5bGVzXG4gICAgICAgIGlmIChzdHlsZXMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJlc2V0U3R5bGVzKGN1cnJlbnRFbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNldCBuZXcgc3R5bGVzXG4gICAgICAgIGVsc2Uge1xuXG4gICAgICAgICAgICAvLyBTYXZlIG9yaWdpbmFsIHN0eWxpbmcgaW4gY2FzZSB0aGUgZWxlbWVudCBuZWVkcyB0byBiZSByZXNldCB0byBpdHMgZGVmYXVsdCBzdGF0ZSBsYXRlclxuICAgICAgICAgICAgc2F2ZVN0eWxlc0FzRGVmYXVsdChjdXJyZW50RWxlbWVudCwgZmFsc2UpO1xuXG4gICAgICAgICAgICAvLyBEbyB0aGUgY2hhbmdlcyFcbiAgICAgICAgICAgIGZvckVhY2goc3R5bGVzLCAodmFsdWUsIGtleSkgPT4gY3VycmVudEVsZW1lbnQuc3R5bGVba2V5LnJlcGxhY2UoLy0oW2Etel0pL2csIG1hdGNoID0+IG1hdGNoWzFdLnRvVXBwZXJDYXNlKCkpXSA9IHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgfSk7XG59XG5cblxuXG4vKipcbiAqIFNhdmUgdGhlIGN1cnJlbnQgaW5saW5lIHN0eWxpbmcgb2Ygb25lIG9yIG1vcmUgZWxlbWVudHMgYXMgdGhlIGRlZmF1bHQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudHxIVE1MRWxlbWVudFtdfE5vZGVMaXN0fSBlbGVtZW50IC0gT25lIG9yIG1vcmUgZWxlbWVudHMgdG8gZ2V0IHRoZSBpbmxpbmUgc3R5bGluZyBmcm9tLlxuICogQHBhcmFtIHtib29sZWFufSBbb3ZlcndyaXRlRXhpc3Rpbmc9dHJ1ZV0gLSBTZXQgdG8gKipmYWxzZSoqIGlmIHlvdSBkb24ndCB3YW50IHRvIG92ZXJ3cml0ZSBhbiBhbHJlYWR5IGV4aXN0aW5nIGRlZmF1bHQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYXZlU3R5bGVzQXNEZWZhdWx0KGVsZW1lbnQsIG92ZXJ3cml0ZUV4aXN0aW5nID0gdHJ1ZSkge1xuICAgIGZvckVhY2goZWxlbWVudCwgY3VycmVudEVsZW1lbnQgPT4ge1xuICAgICAgICBjb25zdCBvcmlnaW5hbElubGluZVN0eWxlcyA9IGtub3duRE9NT2JqZWN0cy5nZXQoY3VycmVudEVsZW1lbnQpO1xuICAgICAgICBpZiAob3ZlcndyaXRlRXhpc3RpbmcgfHwgIShvcmlnaW5hbElubGluZVN0eWxlcyAmJiB0eXBlb2Ygb3JpZ2luYWxJbmxpbmVTdHlsZXMgPT09IFwic3RyaW5nXCIpKSB7XG4gICAgICAgICAgICBrbm93bkRPTU9iamVjdHMuc2V0KGN1cnJlbnRFbGVtZW50LCBjdXJyZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzdHlsZVwiKSB8fCBcIlwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5cblxuLyoqXG4gKiBSZXNldCB0aGUgc3R5bGluZyBvZiBvbmUgb3IgbW9yZSBlbGVtZW50cy5cbiAqXG4gKiBJZiBhbiBlbGVtZW50IGhhZCBpbmxpbmUgc3R5bGluZyBiZWZvcmUgeW91IHVzZWQgYHNldFN0eWxlcygpYCBvbiBpdCwgd2UnbGwgcmVzZXQgdG8gdGhhdC5cbiAqIElmIHlvdSB3YW50IHRvIHJlbW92ZSBpbmxpbmUgc3R5bGVzIGNvbXBsZXRlbHksIHNldCB0aGUgc2Vjb25kIGFyZ3VtZW50IGBoYXJkUmVzZXRgIHRvICp0cnVlKi5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fEhUTUxFbGVtZW50W118Tm9kZUxpc3R9IGVsZW1lbnQgLSBPbmUgb3IgbW9yZSBlbGVtZW50cyB0aGF0IHlvdSB3aXNoIHRvIHJlbW92ZSBpbmxpbmUgc3R5bGluZyBmcm9tLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNIYXJkUmVzZXQ9ZmFsc2VdIC0gU2V0IHRoaXMgdG8gKip0cnVlKiogdG8gcmVtb3ZlIGlubGluZSBzdHlsaW5nIGNvbXBsZXRlbHkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNldFN0eWxlcyhlbGVtZW50LCBpc0hhcmRSZXNldCA9IGZhbHNlKSB7XG4gICAgZm9yRWFjaChlbGVtZW50LCBjdXJyZW50RWxlbWVudCA9PiB7XG4gICAgICAgIGxldCBzZXRTdHlsZXNUbyA9IFwiXCI7XG5cbiAgICAgICAgaWYgKCFpc0hhcmRSZXNldCkge1xuICAgICAgICAgICAgLy8gSWYgdGhlIGVsZW1lbnQncyBvcmlnaW5hbCBpbmxpbmUgc3R5bGluZyBoYXMgYmVlbiBzYXZlZCwgcmVzZXQgdG8gdGhhdFxuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxJbmxpbmVTdHlsZXMgPSBrbm93bkRPTU9iamVjdHMuZ2V0KGN1cnJlbnRFbGVtZW50KTtcbiAgICAgICAgICAgIGlmIChvcmlnaW5hbElubGluZVN0eWxlcyAmJiB0eXBlb2Ygb3JpZ2luYWxJbmxpbmVTdHlsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBzZXRTdHlsZXNUbyA9IG9yaWdpbmFsSW5saW5lU3R5bGVzIHx8IFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjdXJyZW50RWxlbWVudC5zdHlsZS5jc3NUZXh0ID0gc2V0U3R5bGVzVG87XG4gICAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdURBO0FBSUE7QUFDQTtBQUFBO0FBSUE7Ozs7Ozs7QUFNQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQU9BO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFJQTs7Ozs7OztBQU1BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7Ozs7Ozs7QUFTQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/setStyles.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/siblings.js":
/*!*********************************************!*\
  !*** ./static/src/js/utils/dom/siblings.js ***!
  \*********************************************/
/*! exports provided: getSiblings, siblings, getNextSiblings, nextSiblings, getPreviousSiblings, previousSiblings, areElementsSiblings, elementsAreSiblings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSiblings\", function() { return getSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"siblings\", function() { return siblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNextSiblings\", function() { return getNextSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nextSiblings\", function() { return nextSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPreviousSiblings\", function() { return getPreviousSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"previousSiblings\", function() { return previousSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"areElementsSiblings\", function() { return areElementsSiblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementsAreSiblings\", function() { return elementsAreSiblings; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/**\n * Utility to get **all the siblings** for the given DOM-element, or a subset thereof.\n *\n * @module utils/dom/siblings\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n */\n\n/**\n * Get all siblings of element, or a subset thereof.\n *\n * @param {Node} element - The target element.\n * @param {Boolean} [includeOriginalElement=false] - Set to true to include the original element among the siblings\n * @param {Node|Null} [fromElement=null] - Return the siblings starting at this element\n * @param {Node|Null} [untilElement=null] - Return the siblings stopping at this element\n * @returns {Node[]} Array of elements that are siblings to the given element.\n */\n\nfunction getSiblings(element) {\n  var includeOriginalElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var fromElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var untilElement = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (includeOriginalElement && !fromElement && !untilElement) {\n    // Return array including the original element and all its siblings\n    return Array.from(element.parentNode.children);\n  } else {\n    var _siblings = []; // Set the element to start looking for siblings from\n\n    var nextElement = fromElement || element.parentNode.firstElementChild;\n\n    do {\n      var currentElement = nextElement;\n      var sameAsOriginalElement = element === currentElement; // Set next element to look at\n\n      nextElement = nextElement.nextElementSibling; // Add this element to the list of sibling\n      // unless it is the same as the original element (and this should be left out)\n\n      if (!sameAsOriginalElement || includeOriginalElement) {\n        _siblings.push(currentElement);\n      } // Stop looking for siblings, if the loop is set to stop at the current element\n\n\n      if (currentElement === untilElement) {\n        break;\n      }\n    } while (nextElement); // Return array of elements\n\n\n    return _siblings;\n  }\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar siblings = getSiblings;\n/**\n * Get all the siblings **after** the given element.\n *\n * @param {Node} element - The target element.\n * @param {Boolean} [includeOriginalElement=false] - Set to true to include the original element among the siblings\n * @returns {Node[]} An array containing the elements following the given element (and possibly the element itself).\n */\n\nfunction getNextSiblings(element) {\n  var includeOriginalElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return getSiblings(element, includeOriginalElement, element);\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar nextSiblings = getNextSiblings;\n/**\n * Get previous siblings of element\n *\n * @param {Node} element - The target element.\n * @param {Boolean} [includeOriginalElement=false] - Set to true to include the original element among the siblings\n * @returns {Node[]} An array containing the elements preceding the given element (and possibly the element itself).\n */\n\nfunction getPreviousSiblings(element) {\n  var includeOriginalElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return getSiblings(element, includeOriginalElement, null, element);\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar previousSiblings = getPreviousSiblings;\n/**\n * Check if two elements are siblings.\n *\n * @param {Element} element1 - Check if this is a sibling to element2.\n * @param {Element} element2 - Check if this is a sibling to element1.\n * @param {boolean} [adjacentOnly=false] - Set this to **true** to only looks for adjacent siblings (meaning just before or after).\n * @returns {boolean} **True** if the element is a parent to the other element.\n */\n\nfunction areElementsSiblings(element1, element2) {\n  var adjacentOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (adjacentOnly) {\n    return element1.nextElementSibling === element2 || element1.previousElementSibling === element2;\n  } else {\n    // We'll start off with assuming that the elements aren't siblings, since most aren't\n    var siblingsCheck = false; // Get siblings of element1\n\n    var siblingElements = getSiblings(element1); // Loop though siblings and check if any of them are element2\n\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(siblingElements, function (sibling) {\n      return sibling === element2 ? siblingsCheck = true : null;\n    }); // If element2 wasn't found amongst element1's children, return false\n\n    return siblingsCheck;\n  }\n}\n/**\n * @type {function}\n * @ignore\n * @deprecated\n */\n\nvar elementsAreSiblings = areElementsSiblings;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS9zaWJsaW5ncy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3N0YXRpYy9zcmMvanMvdXRpbHMvZG9tL3NpYmxpbmdzLmpzPzJhNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXR5IHRvIGdldCAqKmFsbCB0aGUgc2libGluZ3MqKiBmb3IgdGhlIGdpdmVuIERPTS1lbGVtZW50LCBvciBhIHN1YnNldCB0aGVyZW9mLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZG9tL3NpYmxpbmdzXG4gKiBAYXV0aG9yIExhcnMgTXVua2hvbG0gPGxhcnMubXVua2hvbG1AYWtxYS5jb20+XG4gKi9cblxuXG5pbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSBcIi4uL2ZvckVhY2hcIjtcblxuXG5cbi8qKlxuICogR2V0IGFsbCBzaWJsaW5ncyBvZiBlbGVtZW50LCBvciBhIHN1YnNldCB0aGVyZW9mLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gZWxlbWVudCAtIFRoZSB0YXJnZXQgZWxlbWVudC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW2luY2x1ZGVPcmlnaW5hbEVsZW1lbnQ9ZmFsc2VdIC0gU2V0IHRvIHRydWUgdG8gaW5jbHVkZSB0aGUgb3JpZ2luYWwgZWxlbWVudCBhbW9uZyB0aGUgc2libGluZ3NcbiAqIEBwYXJhbSB7Tm9kZXxOdWxsfSBbZnJvbUVsZW1lbnQ9bnVsbF0gLSBSZXR1cm4gdGhlIHNpYmxpbmdzIHN0YXJ0aW5nIGF0IHRoaXMgZWxlbWVudFxuICogQHBhcmFtIHtOb2RlfE51bGx9IFt1bnRpbEVsZW1lbnQ9bnVsbF0gLSBSZXR1cm4gdGhlIHNpYmxpbmdzIHN0b3BwaW5nIGF0IHRoaXMgZWxlbWVudFxuICogQHJldHVybnMge05vZGVbXX0gQXJyYXkgb2YgZWxlbWVudHMgdGhhdCBhcmUgc2libGluZ3MgdG8gdGhlIGdpdmVuIGVsZW1lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaWJsaW5ncyhlbGVtZW50LCBpbmNsdWRlT3JpZ2luYWxFbGVtZW50ID0gZmFsc2UsIGZyb21FbGVtZW50ID0gbnVsbCwgdW50aWxFbGVtZW50ID0gbnVsbCkge1xuXG4gICAgaWYgKGluY2x1ZGVPcmlnaW5hbEVsZW1lbnQgJiYgIWZyb21FbGVtZW50ICYmICF1bnRpbEVsZW1lbnQpIHtcblxuICAgICAgICAvLyBSZXR1cm4gYXJyYXkgaW5jbHVkaW5nIHRoZSBvcmlnaW5hbCBlbGVtZW50IGFuZCBhbGwgaXRzIHNpYmxpbmdzXG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKGVsZW1lbnQucGFyZW50Tm9kZS5jaGlsZHJlbik7XG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICAgIGNvbnN0IHNpYmxpbmdzID0gW107XG5cbiAgICAgICAgLy8gU2V0IHRoZSBlbGVtZW50IHRvIHN0YXJ0IGxvb2tpbmcgZm9yIHNpYmxpbmdzIGZyb21cbiAgICAgICAgbGV0IG5leHRFbGVtZW50ID0gZnJvbUVsZW1lbnQgfHwgZWxlbWVudC5wYXJlbnROb2RlLmZpcnN0RWxlbWVudENoaWxkO1xuXG5cbiAgICAgICAgZG8ge1xuXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50RWxlbWVudCA9IG5leHRFbGVtZW50O1xuICAgICAgICAgICAgY29uc3Qgc2FtZUFzT3JpZ2luYWxFbGVtZW50ID0gZWxlbWVudCA9PT0gY3VycmVudEVsZW1lbnQ7XG5cbiAgICAgICAgICAgIC8vIFNldCBuZXh0IGVsZW1lbnQgdG8gbG9vayBhdFxuICAgICAgICAgICAgbmV4dEVsZW1lbnQgPSBuZXh0RWxlbWVudC5uZXh0RWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgICAgIC8vIEFkZCB0aGlzIGVsZW1lbnQgdG8gdGhlIGxpc3Qgb2Ygc2libGluZ1xuICAgICAgICAgICAgLy8gdW5sZXNzIGl0IGlzIHRoZSBzYW1lIGFzIHRoZSBvcmlnaW5hbCBlbGVtZW50IChhbmQgdGhpcyBzaG91bGQgYmUgbGVmdCBvdXQpXG4gICAgICAgICAgICBpZiAoIXNhbWVBc09yaWdpbmFsRWxlbWVudCB8fCBpbmNsdWRlT3JpZ2luYWxFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgc2libGluZ3MucHVzaChjdXJyZW50RWxlbWVudCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFN0b3AgbG9va2luZyBmb3Igc2libGluZ3MsIGlmIHRoZSBsb29wIGlzIHNldCB0byBzdG9wIGF0IHRoZSBjdXJyZW50IGVsZW1lbnRcbiAgICAgICAgICAgIGlmIChjdXJyZW50RWxlbWVudCA9PT0gdW50aWxFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSB3aGlsZSAobmV4dEVsZW1lbnQpO1xuXG5cbiAgICAgICAgLy8gUmV0dXJuIGFycmF5IG9mIGVsZW1lbnRzXG4gICAgICAgIHJldHVybiBzaWJsaW5ncztcblxuICAgIH1cblxufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3Qgc2libGluZ3MgPSBnZXRTaWJsaW5ncztcblxuXG5cbi8qKlxuICogR2V0IGFsbCB0aGUgc2libGluZ3MgKiphZnRlcioqIHRoZSBnaXZlbiBlbGVtZW50LlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gZWxlbWVudCAtIFRoZSB0YXJnZXQgZWxlbWVudC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW2luY2x1ZGVPcmlnaW5hbEVsZW1lbnQ9ZmFsc2VdIC0gU2V0IHRvIHRydWUgdG8gaW5jbHVkZSB0aGUgb3JpZ2luYWwgZWxlbWVudCBhbW9uZyB0aGUgc2libGluZ3NcbiAqIEByZXR1cm5zIHtOb2RlW119IEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIGVsZW1lbnRzIGZvbGxvd2luZyB0aGUgZ2l2ZW4gZWxlbWVudCAoYW5kIHBvc3NpYmx5IHRoZSBlbGVtZW50IGl0c2VsZikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXh0U2libGluZ3MoZWxlbWVudCwgaW5jbHVkZU9yaWdpbmFsRWxlbWVudCA9IGZhbHNlKSB7XG4gICAgcmV0dXJuIGdldFNpYmxpbmdzKGVsZW1lbnQsIGluY2x1ZGVPcmlnaW5hbEVsZW1lbnQsIGVsZW1lbnQpO1xufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgbmV4dFNpYmxpbmdzID0gZ2V0TmV4dFNpYmxpbmdzO1xuXG5cblxuLyoqXG4gKiBHZXQgcHJldmlvdXMgc2libGluZ3Mgb2YgZWxlbWVudFxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gZWxlbWVudCAtIFRoZSB0YXJnZXQgZWxlbWVudC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW2luY2x1ZGVPcmlnaW5hbEVsZW1lbnQ9ZmFsc2VdIC0gU2V0IHRvIHRydWUgdG8gaW5jbHVkZSB0aGUgb3JpZ2luYWwgZWxlbWVudCBhbW9uZyB0aGUgc2libGluZ3NcbiAqIEByZXR1cm5zIHtOb2RlW119IEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIGVsZW1lbnRzIHByZWNlZGluZyB0aGUgZ2l2ZW4gZWxlbWVudCAoYW5kIHBvc3NpYmx5IHRoZSBlbGVtZW50IGl0c2VsZikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmV2aW91c1NpYmxpbmdzKGVsZW1lbnQsIGluY2x1ZGVPcmlnaW5hbEVsZW1lbnQgPSBmYWxzZSkge1xuICAgIHJldHVybiBnZXRTaWJsaW5ncyhlbGVtZW50LCBpbmNsdWRlT3JpZ2luYWxFbGVtZW50LCBudWxsLCBlbGVtZW50KTtcbn1cblxuXG5cbi8qKlxuICogQHR5cGUge2Z1bmN0aW9ufVxuICogQGlnbm9yZVxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHByZXZpb3VzU2libGluZ3MgPSBnZXRQcmV2aW91c1NpYmxpbmdzO1xuXG5cblxuLyoqXG4gKiBDaGVjayBpZiB0d28gZWxlbWVudHMgYXJlIHNpYmxpbmdzLlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudDEgLSBDaGVjayBpZiB0aGlzIGlzIGEgc2libGluZyB0byBlbGVtZW50Mi5cbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudDIgLSBDaGVjayBpZiB0aGlzIGlzIGEgc2libGluZyB0byBlbGVtZW50MS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2FkamFjZW50T25seT1mYWxzZV0gLSBTZXQgdGhpcyB0byAqKnRydWUqKiB0byBvbmx5IGxvb2tzIGZvciBhZGphY2VudCBzaWJsaW5ncyAobWVhbmluZyBqdXN0IGJlZm9yZSBvciBhZnRlcikuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gKipUcnVlKiogaWYgdGhlIGVsZW1lbnQgaXMgYSBwYXJlbnQgdG8gdGhlIG90aGVyIGVsZW1lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcmVFbGVtZW50c1NpYmxpbmdzKGVsZW1lbnQxLCBlbGVtZW50MiwgYWRqYWNlbnRPbmx5ID0gZmFsc2UpIHtcbiAgICBpZiAoYWRqYWNlbnRPbmx5KSB7XG5cbiAgICAgICAgcmV0dXJuIChlbGVtZW50MS5uZXh0RWxlbWVudFNpYmxpbmcgPT09IGVsZW1lbnQyIHx8IGVsZW1lbnQxLnByZXZpb3VzRWxlbWVudFNpYmxpbmcgPT09IGVsZW1lbnQyKTtcblxuICAgIH0gZWxzZSB7XG5cbiAgICAgICAgLy8gV2UnbGwgc3RhcnQgb2ZmIHdpdGggYXNzdW1pbmcgdGhhdCB0aGUgZWxlbWVudHMgYXJlbid0IHNpYmxpbmdzLCBzaW5jZSBtb3N0IGFyZW4ndFxuICAgICAgICBsZXQgc2libGluZ3NDaGVjayA9IGZhbHNlO1xuXG4gICAgICAgIC8vIEdldCBzaWJsaW5ncyBvZiBlbGVtZW50MVxuICAgICAgICBjb25zdCBzaWJsaW5nRWxlbWVudHMgPSBnZXRTaWJsaW5ncyhlbGVtZW50MSk7XG5cbiAgICAgICAgLy8gTG9vcCB0aG91Z2ggc2libGluZ3MgYW5kIGNoZWNrIGlmIGFueSBvZiB0aGVtIGFyZSBlbGVtZW50MlxuICAgICAgICBmb3JFYWNoKHNpYmxpbmdFbGVtZW50cywgc2libGluZyA9PiBzaWJsaW5nID09PSBlbGVtZW50MiA/IHNpYmxpbmdzQ2hlY2sgPSB0cnVlIDogbnVsbCk7XG5cbiAgICAgICAgLy8gSWYgZWxlbWVudDIgd2Fzbid0IGZvdW5kIGFtb25nc3QgZWxlbWVudDEncyBjaGlsZHJlbiwgcmV0dXJuIGZhbHNlXG4gICAgICAgIHJldHVybiBzaWJsaW5nc0NoZWNrO1xuXG4gICAgfVxufVxuXG5cblxuLyoqXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAaWdub3JlXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgZWxlbWVudHNBcmVTaWJsaW5ncyA9IGFyZUVsZW1lbnRzU2libGluZ3M7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7OztBQVFBO0FBSUE7Ozs7Ozs7Ozs7QUFTQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUlBOzs7Ozs7QUFLQTtBQUlBOzs7Ozs7OztBQU9BO0FBQUE7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQUtBO0FBSUE7Ozs7Ozs7O0FBT0E7QUFBQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7O0FBS0E7QUFJQTs7Ozs7Ozs7O0FBUUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7Ozs7OztBQUtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/siblings.js\n");

/***/ }),

/***/ "./static/src/js/utils/dom/tabDomElements.js":
/*!***************************************************!*\
  !*** ./static/src/js/utils/dom/tabDomElements.js ***!
  \***************************************************/
/*! exports provided: selectTabDomElements, TabDomElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectTabDomElements\", function() { return selectTabDomElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TabDomElements\", function() { return TabDomElements; });\n/* harmony import */ var _events_onReady__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/onReady */ \"./static/src/js/utils/events/onReady.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter */ \"./static/src/js/utils/filter.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Tabbable element handling\n *\n * Get prev and next from document.activeElement in dom.\n * Get first, last and byIndex tabbable element in dom.\n *\n * @module utils/dom/TabDomElements\n * @author Casper Andersen <casper.andersen@akqa.com>\n *\n * @example\n * import { TabDomElements } from \"./utils/dom/tabDomElements\";\n *\n * let tabDomElements = new TabDomElements(container); // Default use document\n *\n * // Get prev element from activeElement\n * tabDomElements.getPrevTabElement();\n *\n * // Get next element from activeElement\n * tabDomElements.getNextTabElement();\n *\n * // Get element by index of all tabbable elements\n * tabDomElements.getTabElementByIndex();\n *\n * // Get first element of all tabbable elements\n * tabDomElements.getFirstTabElement();\n *\n * // Get last element of all tabbable elements\n * tabDomElements.getLastTabElement();\n */\n\n // Tabbable dom elements querystring\n\nvar tabbableDOMQuery = \"a, button, input, textarea, select, area\";\n/**\n * Select Tab dom elements\n * @param {HTMLElement|Document} [container] - To find tabbable element inside, default is document\n * @param {HTMLElement[]} [excludes] - Array of element to exclude from tabelements that is set by default (line 37 - tabbableDOMQuery).\n *\n * @returns {HTMLElement[]} Return tabbable elements\n */\n\nfunction selectTabDomElements() {\n  var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var excludes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\"filter\"])(container.querySelectorAll(tabbableDOMQuery), function (element) {\n    return (element.offsetWidth > 0 || element.offsetHeight > 0) && ( // Disabled or tabindex -1\n    !element.disabled || element.getAttribute(\"tabindex\") !== \"-1\") && // Or is in focus\n    element !== document.activeElement && // And is not part of the exclude array.\n    excludes.indexOf(element) === -1;\n  });\n}\n/**\n * Helper class for selecting tabbing elements\n *\n */\n\nvar TabDomElements =\n/*#__PURE__*/\nfunction () {\n  /**\n   * The constructor is fired once the class is instantiated.\n   *\n   * @param {HTMLElement} container - To find tabbable element inside, default is document\n   * @param {HTMLElement[]} [excludes=[]] - Array of element to exclude from tabelements that is set by default (line 37 - tabbableDOMQuery).\n   */\n  function TabDomElements(container) {\n    var _this = this;\n\n    var excludes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, TabDomElements);\n\n    // Run initializing code once the DOM is ready.\n    Object(_events_onReady__WEBPACK_IMPORTED_MODULE_0__[\"onReady\"])(function () {\n      return _this.init(container, excludes);\n    });\n  }\n  /**\n   * Find previous Tab element\n   * @returns {HTMLElement}\n   */\n\n\n  _createClass(TabDomElements, [{\n    key: \"getPrevTabElement\",\n    value: function getPrevTabElement() {\n      if (document.activeElement) {\n        var index = this.TabDomElements.indexOf(document.activeElement);\n\n        if (index > -1) {\n          return this.TabDomElements[index - 1] || undefined;\n        }\n      }\n\n      return undefined;\n    }\n    /**\n     * Find next Tab element\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"getNextTabElement\",\n    value: function getNextTabElement() {\n      if (document.activeElement) {\n        var index = this.TabDomElements.indexOf(document.activeElement);\n\n        if (index > -1) {\n          return this.TabDomElements[index + 1] || undefined;\n        }\n      }\n\n      return undefined;\n    }\n    /**\n     * Return Tab dom element by index\n     * @param {Number} index\n     * @returns {HTMLElement|undefined}\n     */\n\n  }, {\n    key: \"getTabElementByIndex\",\n    value: function getTabElementByIndex(index) {\n      if (Number.isInteger(index)) {\n        return this.TabDomElements[index];\n      }\n\n      return undefined;\n    }\n    /**\n     * Return first tab element\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"getFirstTabElement\",\n    value: function getFirstTabElement() {\n      return this.TabDomElements[0];\n    }\n    /**\n     * Return last tab element\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"getLastTabElement\",\n    value: function getLastTabElement() {\n      return this.TabDomElements[this.TabDomElements.length - 1];\n    }\n    /**\n     * Get index of current active element\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getCurrentActiveElementIndex\",\n    value: function getCurrentActiveElementIndex() {\n      return this.TabDomElements.indexOf(document.activeElement);\n    }\n    /**\n     * The actual initialization function, fired once the DOM is ready.\n     *\n     * @param {HTMLElement} container - To find tabbable element inside, default is document\n     * @param {HTMLElement[]} [excludes=[]] - Array of element to exclude from tabelements that is set by default (line 37 - tabbableDOMQuery).\n     *\n     * @private\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(container) {\n      var excludes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      // Tab dom elements\n      this.TabDomElements = selectTabDomElements(container, excludes);\n    }\n  }]);\n\n  return TabDomElements;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2RvbS90YWJEb21FbGVtZW50cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3N0YXRpYy9zcmMvanMvdXRpbHMvZG9tL3RhYkRvbUVsZW1lbnRzLmpzPzE2NDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWJiYWJsZSBlbGVtZW50IGhhbmRsaW5nXG4gKlxuICogR2V0IHByZXYgYW5kIG5leHQgZnJvbSBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGluIGRvbS5cbiAqIEdldCBmaXJzdCwgbGFzdCBhbmQgYnlJbmRleCB0YWJiYWJsZSBlbGVtZW50IGluIGRvbS5cbiAqXG4gKiBAbW9kdWxlIHV0aWxzL2RvbS9UYWJEb21FbGVtZW50c1xuICogQGF1dGhvciBDYXNwZXIgQW5kZXJzZW4gPGNhc3Blci5hbmRlcnNlbkBha3FhLmNvbT5cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgVGFiRG9tRWxlbWVudHMgfSBmcm9tIFwiLi91dGlscy9kb20vdGFiRG9tRWxlbWVudHNcIjtcbiAqXG4gKiBsZXQgdGFiRG9tRWxlbWVudHMgPSBuZXcgVGFiRG9tRWxlbWVudHMoY29udGFpbmVyKTsgLy8gRGVmYXVsdCB1c2UgZG9jdW1lbnRcbiAqXG4gKiAvLyBHZXQgcHJldiBlbGVtZW50IGZyb20gYWN0aXZlRWxlbWVudFxuICogdGFiRG9tRWxlbWVudHMuZ2V0UHJldlRhYkVsZW1lbnQoKTtcbiAqXG4gKiAvLyBHZXQgbmV4dCBlbGVtZW50IGZyb20gYWN0aXZlRWxlbWVudFxuICogdGFiRG9tRWxlbWVudHMuZ2V0TmV4dFRhYkVsZW1lbnQoKTtcbiAqXG4gKiAvLyBHZXQgZWxlbWVudCBieSBpbmRleCBvZiBhbGwgdGFiYmFibGUgZWxlbWVudHNcbiAqIHRhYkRvbUVsZW1lbnRzLmdldFRhYkVsZW1lbnRCeUluZGV4KCk7XG4gKlxuICogLy8gR2V0IGZpcnN0IGVsZW1lbnQgb2YgYWxsIHRhYmJhYmxlIGVsZW1lbnRzXG4gKiB0YWJEb21FbGVtZW50cy5nZXRGaXJzdFRhYkVsZW1lbnQoKTtcbiAqXG4gKiAvLyBHZXQgbGFzdCBlbGVtZW50IG9mIGFsbCB0YWJiYWJsZSBlbGVtZW50c1xuICogdGFiRG9tRWxlbWVudHMuZ2V0TGFzdFRhYkVsZW1lbnQoKTtcbiAqL1xuXG5pbXBvcnQgeyBvblJlYWR5IH0gZnJvbSBcIi4uL2V2ZW50cy9vblJlYWR5XCI7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tIFwiLi4vZmlsdGVyXCI7XG5cbi8vIFRhYmJhYmxlIGRvbSBlbGVtZW50cyBxdWVyeXN0cmluZ1xuY29uc3QgdGFiYmFibGVET01RdWVyeSA9IFwiYSwgYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCwgYXJlYVwiO1xuXG5cblxuLyoqXG4gKiBTZWxlY3QgVGFiIGRvbSBlbGVtZW50c1xuICogQHBhcmFtIHtIVE1MRWxlbWVudHxEb2N1bWVudH0gW2NvbnRhaW5lcl0gLSBUbyBmaW5kIHRhYmJhYmxlIGVsZW1lbnQgaW5zaWRlLCBkZWZhdWx0IGlzIGRvY3VtZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50W119IFtleGNsdWRlc10gLSBBcnJheSBvZiBlbGVtZW50IHRvIGV4Y2x1ZGUgZnJvbSB0YWJlbGVtZW50cyB0aGF0IGlzIHNldCBieSBkZWZhdWx0IChsaW5lIDM3IC0gdGFiYmFibGVET01RdWVyeSkuXG4gKlxuICogQHJldHVybnMge0hUTUxFbGVtZW50W119IFJldHVybiB0YWJiYWJsZSBlbGVtZW50c1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0VGFiRG9tRWxlbWVudHMoY29udGFpbmVyID0gZG9jdW1lbnQsIGV4Y2x1ZGVzID0gW10pIHtcblxuICAgIHJldHVybiBmaWx0ZXIoXG4gICAgICAgIGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKHRhYmJhYmxlRE9NUXVlcnkpLFxuICAgICAgICBlbGVtZW50ID0+IChcbiAgICAgICAgICAgIChlbGVtZW50Lm9mZnNldFdpZHRoID4gMCB8fCBlbGVtZW50Lm9mZnNldEhlaWdodCA+IDApICYmXG4gICAgICAgICAgICAvLyBEaXNhYmxlZCBvciB0YWJpbmRleCAtMVxuICAgICAgICAgICAgKCFlbGVtZW50LmRpc2FibGVkIHx8IGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIikgIT09IFwiLTFcIikgJiZcbiAgICAgICAgICAgIC8vIE9yIGlzIGluIGZvY3VzXG4gICAgICAgICAgICBlbGVtZW50ICE9PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmXG4gICAgICAgICAgICAvLyBBbmQgaXMgbm90IHBhcnQgb2YgdGhlIGV4Y2x1ZGUgYXJyYXkuXG4gICAgICAgICAgICBleGNsdWRlcy5pbmRleE9mKGVsZW1lbnQpID09PSAtMVxuICAgICAgICApXG4gICAgKTtcbn1cblxuXG5cbi8qKlxuICogSGVscGVyIGNsYXNzIGZvciBzZWxlY3RpbmcgdGFiYmluZyBlbGVtZW50c1xuICpcbiAqL1xuZXhwb3J0IGNsYXNzIFRhYkRvbUVsZW1lbnRzIHtcbiAgICAvKipcbiAgICAgKiBUaGUgY29uc3RydWN0b3IgaXMgZmlyZWQgb25jZSB0aGUgY2xhc3MgaXMgaW5zdGFudGlhdGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGFpbmVyIC0gVG8gZmluZCB0YWJiYWJsZSBlbGVtZW50IGluc2lkZSwgZGVmYXVsdCBpcyBkb2N1bWVudFxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnRbXX0gW2V4Y2x1ZGVzPVtdXSAtIEFycmF5IG9mIGVsZW1lbnQgdG8gZXhjbHVkZSBmcm9tIHRhYmVsZW1lbnRzIHRoYXQgaXMgc2V0IGJ5IGRlZmF1bHQgKGxpbmUgMzcgLSB0YWJiYWJsZURPTVF1ZXJ5KS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIGV4Y2x1ZGVzID0gW10pIHtcbiAgICAgICAgLy8gUnVuIGluaXRpYWxpemluZyBjb2RlIG9uY2UgdGhlIERPTSBpcyByZWFkeS5cbiAgICAgICAgb25SZWFkeSgoKSA9PiB0aGlzLmluaXQoY29udGFpbmVyLCBleGNsdWRlcykpO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBGaW5kIHByZXZpb3VzIFRhYiBlbGVtZW50XG4gICAgICogQHJldHVybnMge0hUTUxFbGVtZW50fVxuICAgICAqL1xuICAgIGdldFByZXZUYWJFbGVtZW50KCkge1xuICAgICAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLlRhYkRvbUVsZW1lbnRzLmluZGV4T2YoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlRhYkRvbUVsZW1lbnRzW2luZGV4IC0gMV0gfHwgdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG5cblxuICAgIC8qKlxuICAgICAqIEZpbmQgbmV4dCBUYWIgZWxlbWVudFxuICAgICAqIEByZXR1cm5zIHtIVE1MRWxlbWVudH1cbiAgICAgKi9cbiAgICBnZXROZXh0VGFiRWxlbWVudCgpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5UYWJEb21FbGVtZW50cy5pbmRleE9mKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5UYWJEb21FbGVtZW50c1tpbmRleCArIDFdIHx8IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gVGFiIGRvbSBlbGVtZW50IGJ5IGluZGV4XG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gICAgICogQHJldHVybnMge0hUTUxFbGVtZW50fHVuZGVmaW5lZH1cbiAgICAgKi9cbiAgICBnZXRUYWJFbGVtZW50QnlJbmRleChpbmRleCkge1xuICAgICAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcihpbmRleCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlRhYkRvbUVsZW1lbnRzW2luZGV4XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gZmlyc3QgdGFiIGVsZW1lbnRcbiAgICAgKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR9XG4gICAgICovXG4gICAgZ2V0Rmlyc3RUYWJFbGVtZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5UYWJEb21FbGVtZW50c1swXTtcbiAgICB9XG5cblxuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIGxhc3QgdGFiIGVsZW1lbnRcbiAgICAgKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR9XG4gICAgICovXG4gICAgZ2V0TGFzdFRhYkVsZW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLlRhYkRvbUVsZW1lbnRzW3RoaXMuVGFiRG9tRWxlbWVudHMubGVuZ3RoIC0gMV07XG4gICAgfVxuXG5cblxuICAgIC8qKlxuICAgICAqIEdldCBpbmRleCBvZiBjdXJyZW50IGFjdGl2ZSBlbGVtZW50XG4gICAgICogQHJldHVybnMge051bWJlcn1cbiAgICAgKi9cbiAgICBnZXRDdXJyZW50QWN0aXZlRWxlbWVudEluZGV4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5UYWJEb21FbGVtZW50cy5pbmRleE9mKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYWN0dWFsIGluaXRpYWxpemF0aW9uIGZ1bmN0aW9uLCBmaXJlZCBvbmNlIHRoZSBET00gaXMgcmVhZHkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250YWluZXIgLSBUbyBmaW5kIHRhYmJhYmxlIGVsZW1lbnQgaW5zaWRlLCBkZWZhdWx0IGlzIGRvY3VtZW50XG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudFtdfSBbZXhjbHVkZXM9W11dIC0gQXJyYXkgb2YgZWxlbWVudCB0byBleGNsdWRlIGZyb20gdGFiZWxlbWVudHMgdGhhdCBpcyBzZXQgYnkgZGVmYXVsdCAobGluZSAzNyAtIHRhYmJhYmxlRE9NUXVlcnkpLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBpbml0KGNvbnRhaW5lciwgZXhjbHVkZXMgPSBbXSkge1xuICAgICAgICAvLyBUYWIgZG9tIGVsZW1lbnRzXG4gICAgICAgIHRoaXMuVGFiRG9tRWxlbWVudHMgPSBzZWxlY3RUYWJEb21FbGVtZW50cyhjb250YWluZXIsIGV4Y2x1ZGVzKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEJBO0FBQ0E7QUFDQTtBQUVBO0FBSUE7Ozs7Ozs7O0FBT0E7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUdBO0FBRUE7QUFFQTtBQVBBO0FBVUE7QUFJQTs7Ozs7QUFJQTtBQUFBO0FBQUE7QUFDQTs7Ozs7O0FBTUE7QUFBQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSUE7Ozs7OztBQWRBO0FBQUE7QUFBQTtBQW1CQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUlBOzs7OztBQTlCQTtBQUFBO0FBQUE7QUFtQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFJQTs7Ozs7O0FBOUNBO0FBQUE7QUFBQTtBQW9EQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFJQTs7Ozs7QUE1REE7QUFBQTtBQUFBO0FBaUVBO0FBQ0E7QUFJQTs7Ozs7QUF0RUE7QUFBQTtBQUFBO0FBMkVBO0FBQ0E7QUFJQTs7Ozs7QUFoRkE7QUFBQTtBQUFBO0FBcUZBO0FBQ0E7QUFJQTs7Ozs7Ozs7O0FBMUZBO0FBQUE7QUFBQTtBQWtHQTtBQUNBO0FBQ0E7QUFDQTtBQXJHQTtBQUNBO0FBREE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./static/src/js/utils/dom/tabDomElements.js\n");

/***/ }),

/***/ "./static/src/js/utils/events/detectEventName.js":
/*!*******************************************************!*\
  !*** ./static/src/js/utils/events/detectEventName.js ***!
  \*******************************************************/
/*! exports provided: detectTransitionEndEventName, detectAnimationEndEventName, getWheelEventName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detectTransitionEndEventName\", function() { return detectTransitionEndEventName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detectAnimationEndEventName\", function() { return detectAnimationEndEventName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getWheelEventName\", function() { return getWheelEventName; });\n/**\n * Methods for detecting browser specific event names.\n *\n * @module utils/events/detectEventName\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Usage with `addEvent` or `addEventOnce`. The lookups are cached, so\n * multiple calls to the same detector will not slow down your code.</caption>\n * import { detectTransitionEndEventName, detectAnimationEndEventName } from \"./utils/events/detectEventName\";\n * import { addEvent, addEventOnce } from \"./utils/events/events\";\n *\n * const element = document.getElementById(\"demo\");\n *\n * // Detect every time a CSS transition completes.\n * addEvent(element, detectTransitionEndEventName(), () => window.console.log(\"Transition ended.\"));\n *\n * // Detect the first time a CSS animation completes.\n * addEventOnce(element, detectAnimationEndEventName(), () => window.console.log(\"Animation ended.\"));\n */\n// Internal variables for caching lookups.\nvar foundTransitionEndEventName = \"\";\nvar isTransitionEventLookedUp = false;\nvar foundAnimationEndEventName = \"\";\nvar isAnimationEventLookedUp = false;\n/**\n * Detect the name of the \"transition end\" event name on the current browser, if applicable.\n *\n * @example\n * import { detectTransitionEndEventName } from \"./utils/events/detectEventName\";\n * detectTransitionEndEventName();\n * // Returns \"transitionend\", \"oTransitionEnd\" or \"webkitTransitionEnd\"\n *\n * @returns {\"transitionend\"|\"oTransitionEnd\"|\"webkitTransitionEnd\"|string}\n */\n\nfunction detectTransitionEndEventName() {\n  if (!isTransitionEventLookedUp) {\n    isTransitionEventLookedUp = true;\n    var el = document.createElement(\"div\");\n    var transitions = {\n      \"transition\": \"transitionend\",\n      \"OTransition\": \"oTransitionEnd\",\n      \"MozTransition\": \"transitionend\",\n      \"WebkitTransition\": \"webkitTransitionEnd\"\n    };\n\n    for (var t in transitions) {\n      if (el.style[t] !== undefined) {\n        foundTransitionEndEventName = transitions[t];\n        return foundTransitionEndEventName;\n      }\n    }\n\n    return \"\";\n  } else {\n    return foundTransitionEndEventName;\n  }\n}\n/**\n * Detect the name of the \"animation end\" event name on the current browser, if applicable.\n *\n * @example\n * import { detectAnimationEndEventName } from \"./utils/events/detectEventName\";\n *\n * detectAnimationEndEventName();\n * // Returns \"animationend\", \"oAnimationEnd\" or \"webkitAnimationEnd\"\n *\n * @returns {\"animationend\"|\"oAnimationEnd\"|\"webkitAnimationEnd\"|string}\n */\n\nfunction detectAnimationEndEventName() {\n  if (!isAnimationEventLookedUp) {\n    isAnimationEventLookedUp = true;\n    var el = document.createElement(\"div\");\n    var animations = {\n      \"animation\": \"animationend\",\n      \"OAnimation\": \"oAnimationEnd\",\n      \"MozAnimation\": \"animationend\",\n      \"WebkitAnimation\": \"webkitAnimationEnd\"\n    };\n\n    for (var t in animations) {\n      if (el.style[t] !== undefined) {\n        foundAnimationEndEventName = animations[t];\n        return foundAnimationEndEventName;\n      }\n    }\n\n    return \"\";\n  } else {\n    return foundAnimationEndEventName;\n  }\n}\n/**\n * Detect the name of the \"mouse wheel\" event name on the current browser, if applicable.\n *\n * @example\n * import { getWheelEventName } from \"./utils/events/detectEventName\";\n *\n * getWheelEventName();\n * // Returns \"wheel\", \"mousewheel\" or \"DOMMouseScroll\"\n *\n * @returns {\"wheel\"|\"mousewheel\"|\"DOMMouseScroll\"}\n */\n\nfunction getWheelEventName() {\n  return \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n  document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n  \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2V2ZW50cy9kZXRlY3RFdmVudE5hbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2V2ZW50cy9kZXRlY3RFdmVudE5hbWUuanM/NDM2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1ldGhvZHMgZm9yIGRldGVjdGluZyBicm93c2VyIHNwZWNpZmljIGV2ZW50IG5hbWVzLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZXZlbnRzL2RldGVjdEV2ZW50TmFtZVxuICogQGF1dGhvciBBbmRlcnMgR2lzc2VsIDxhbmRlcnMuZ2lzc2VsQGFrcWEuY29tPlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlVzYWdlIHdpdGggYGFkZEV2ZW50YCBvciBgYWRkRXZlbnRPbmNlYC4gVGhlIGxvb2t1cHMgYXJlIGNhY2hlZCwgc29cbiAqIG11bHRpcGxlIGNhbGxzIHRvIHRoZSBzYW1lIGRldGVjdG9yIHdpbGwgbm90IHNsb3cgZG93biB5b3VyIGNvZGUuPC9jYXB0aW9uPlxuICogaW1wb3J0IHsgZGV0ZWN0VHJhbnNpdGlvbkVuZEV2ZW50TmFtZSwgZGV0ZWN0QW5pbWF0aW9uRW5kRXZlbnROYW1lIH0gZnJvbSBcIi4vdXRpbHMvZXZlbnRzL2RldGVjdEV2ZW50TmFtZVwiO1xuICogaW1wb3J0IHsgYWRkRXZlbnQsIGFkZEV2ZW50T25jZSB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy9ldmVudHNcIjtcbiAqXG4gKiBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZW1vXCIpO1xuICpcbiAqIC8vIERldGVjdCBldmVyeSB0aW1lIGEgQ1NTIHRyYW5zaXRpb24gY29tcGxldGVzLlxuICogYWRkRXZlbnQoZWxlbWVudCwgZGV0ZWN0VHJhbnNpdGlvbkVuZEV2ZW50TmFtZSgpLCAoKSA9PiB3aW5kb3cuY29uc29sZS5sb2coXCJUcmFuc2l0aW9uIGVuZGVkLlwiKSk7XG4gKlxuICogLy8gRGV0ZWN0IHRoZSBmaXJzdCB0aW1lIGEgQ1NTIGFuaW1hdGlvbiBjb21wbGV0ZXMuXG4gKiBhZGRFdmVudE9uY2UoZWxlbWVudCwgZGV0ZWN0QW5pbWF0aW9uRW5kRXZlbnROYW1lKCksICgpID0+IHdpbmRvdy5jb25zb2xlLmxvZyhcIkFuaW1hdGlvbiBlbmRlZC5cIikpO1xuICovXG5cbi8vIEludGVybmFsIHZhcmlhYmxlcyBmb3IgY2FjaGluZyBsb29rdXBzLlxubGV0IGZvdW5kVHJhbnNpdGlvbkVuZEV2ZW50TmFtZSA9IFwiXCI7XG5sZXQgaXNUcmFuc2l0aW9uRXZlbnRMb29rZWRVcCA9IGZhbHNlO1xubGV0IGZvdW5kQW5pbWF0aW9uRW5kRXZlbnROYW1lID0gXCJcIjtcbmxldCBpc0FuaW1hdGlvbkV2ZW50TG9va2VkVXAgPSBmYWxzZTtcblxuXG5cbi8qKlxuICogRGV0ZWN0IHRoZSBuYW1lIG9mIHRoZSBcInRyYW5zaXRpb24gZW5kXCIgZXZlbnQgbmFtZSBvbiB0aGUgY3VycmVudCBicm93c2VyLCBpZiBhcHBsaWNhYmxlLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBkZXRlY3RUcmFuc2l0aW9uRW5kRXZlbnROYW1lIH0gZnJvbSBcIi4vdXRpbHMvZXZlbnRzL2RldGVjdEV2ZW50TmFtZVwiO1xuICogZGV0ZWN0VHJhbnNpdGlvbkVuZEV2ZW50TmFtZSgpO1xuICogLy8gUmV0dXJucyBcInRyYW5zaXRpb25lbmRcIiwgXCJvVHJhbnNpdGlvbkVuZFwiIG9yIFwid2Via2l0VHJhbnNpdGlvbkVuZFwiXG4gKlxuICogQHJldHVybnMge1widHJhbnNpdGlvbmVuZFwifFwib1RyYW5zaXRpb25FbmRcInxcIndlYmtpdFRyYW5zaXRpb25FbmRcInxzdHJpbmd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXRlY3RUcmFuc2l0aW9uRW5kRXZlbnROYW1lKCkge1xuXG4gICAgaWYgKCFpc1RyYW5zaXRpb25FdmVudExvb2tlZFVwKSB7XG4gICAgICAgIGlzVHJhbnNpdGlvbkV2ZW50TG9va2VkVXAgPSB0cnVlO1xuXG4gICAgICAgIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgICAgICBjb25zdCB0cmFuc2l0aW9ucyA9IHtcbiAgICAgICAgICAgIFwidHJhbnNpdGlvblwiOiBcInRyYW5zaXRpb25lbmRcIixcbiAgICAgICAgICAgIFwiT1RyYW5zaXRpb25cIjogXCJvVHJhbnNpdGlvbkVuZFwiLFxuICAgICAgICAgICAgXCJNb3pUcmFuc2l0aW9uXCI6IFwidHJhbnNpdGlvbmVuZFwiLFxuICAgICAgICAgICAgXCJXZWJraXRUcmFuc2l0aW9uXCI6IFwid2Via2l0VHJhbnNpdGlvbkVuZFwiLFxuICAgICAgICB9O1xuXG4gICAgICAgIGZvciAoY29uc3QgdCBpbiB0cmFuc2l0aW9ucykge1xuICAgICAgICAgICAgaWYgKGVsLnN0eWxlW3RdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBmb3VuZFRyYW5zaXRpb25FbmRFdmVudE5hbWUgPSB0cmFuc2l0aW9uc1t0XTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZm91bmRUcmFuc2l0aW9uRW5kRXZlbnROYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFwiXCI7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZm91bmRUcmFuc2l0aW9uRW5kRXZlbnROYW1lO1xuICAgIH1cbn1cblxuXG5cbi8qKlxuICogRGV0ZWN0IHRoZSBuYW1lIG9mIHRoZSBcImFuaW1hdGlvbiBlbmRcIiBldmVudCBuYW1lIG9uIHRoZSBjdXJyZW50IGJyb3dzZXIsIGlmIGFwcGxpY2FibGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IGRldGVjdEFuaW1hdGlvbkVuZEV2ZW50TmFtZSB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy9kZXRlY3RFdmVudE5hbWVcIjtcbiAqXG4gKiBkZXRlY3RBbmltYXRpb25FbmRFdmVudE5hbWUoKTtcbiAqIC8vIFJldHVybnMgXCJhbmltYXRpb25lbmRcIiwgXCJvQW5pbWF0aW9uRW5kXCIgb3IgXCJ3ZWJraXRBbmltYXRpb25FbmRcIlxuICpcbiAqIEByZXR1cm5zIHtcImFuaW1hdGlvbmVuZFwifFwib0FuaW1hdGlvbkVuZFwifFwid2Via2l0QW5pbWF0aW9uRW5kXCJ8c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0QW5pbWF0aW9uRW5kRXZlbnROYW1lKCkge1xuXG4gICAgaWYgKCFpc0FuaW1hdGlvbkV2ZW50TG9va2VkVXApIHtcbiAgICAgICAgaXNBbmltYXRpb25FdmVudExvb2tlZFVwID0gdHJ1ZTtcblxuICAgICAgICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICAgICAgY29uc3QgYW5pbWF0aW9ucyA9IHtcbiAgICAgICAgICAgIFwiYW5pbWF0aW9uXCI6IFwiYW5pbWF0aW9uZW5kXCIsXG4gICAgICAgICAgICBcIk9BbmltYXRpb25cIjogXCJvQW5pbWF0aW9uRW5kXCIsXG4gICAgICAgICAgICBcIk1vekFuaW1hdGlvblwiOiBcImFuaW1hdGlvbmVuZFwiLFxuICAgICAgICAgICAgXCJXZWJraXRBbmltYXRpb25cIjogXCJ3ZWJraXRBbmltYXRpb25FbmRcIixcbiAgICAgICAgfTtcblxuICAgICAgICBmb3IgKGNvbnN0IHQgaW4gYW5pbWF0aW9ucykge1xuICAgICAgICAgICAgaWYgKGVsLnN0eWxlW3RdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBmb3VuZEFuaW1hdGlvbkVuZEV2ZW50TmFtZSA9IGFuaW1hdGlvbnNbdF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kQW5pbWF0aW9uRW5kRXZlbnROYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFwiXCI7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZm91bmRBbmltYXRpb25FbmRFdmVudE5hbWU7XG4gICAgfVxufVxuXG5cblxuLyoqXG4gKiBEZXRlY3QgdGhlIG5hbWUgb2YgdGhlIFwibW91c2Ugd2hlZWxcIiBldmVudCBuYW1lIG9uIHRoZSBjdXJyZW50IGJyb3dzZXIsIGlmIGFwcGxpY2FibGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IGdldFdoZWVsRXZlbnROYW1lIH0gZnJvbSBcIi4vdXRpbHMvZXZlbnRzL2RldGVjdEV2ZW50TmFtZVwiO1xuICpcbiAqIGdldFdoZWVsRXZlbnROYW1lKCk7XG4gKiAvLyBSZXR1cm5zIFwid2hlZWxcIiwgXCJtb3VzZXdoZWVsXCIgb3IgXCJET01Nb3VzZVNjcm9sbFwiXG4gKlxuICogQHJldHVybnMge1wid2hlZWxcInxcIm1vdXNld2hlZWxcInxcIkRPTU1vdXNlU2Nyb2xsXCJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXaGVlbEV2ZW50TmFtZSgpIHtcbiAgICByZXR1cm4gKFwib253aGVlbFwiKSBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpID8gXCJ3aGVlbFwiIDogLy8gTW9kZXJuIGJyb3dzZXJzIHN1cHBvcnQgXCJ3aGVlbFwiXG4gICAgICAgIGRvY3VtZW50Lm9ubW91c2V3aGVlbCAhPT0gdW5kZWZpbmVkID8gXCJtb3VzZXdoZWVsXCIgOiAvLyBXZWJraXQgYW5kIElFIHN1cHBvcnQgYXQgbGVhc3QgXCJtb3VzZXdoZWVsXCJcbiAgICAgICAgICAgIFwiRE9NTW91c2VTY3JvbGxcIjsgLy8gbGV0J3MgYXNzdW1lIHRoYXQgcmVtYWluaW5nIGJyb3dzZXJzIGFyZSBvbGRlciBGaXJlZm94XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7Ozs7OztBQVVBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7Ozs7O0FBV0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/events/detectEventName.js\n");

/***/ }),

/***/ "./static/src/js/utils/events/events.js":
/*!**********************************************!*\
  !*** ./static/src/js/utils/events/events.js ***!
  \**********************************************/
/*! exports provided: removeEvent, removeAllEvents, addEvent, addEventOnce, delegateEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeEvent\", function() { return removeEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeAllEvents\", function() { return removeAllEvents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addEvent\", function() { return addEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addEventOnce\", function() { return addEventOnce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delegateEvent\", function() { return delegateEvent; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../filter */ \"./static/src/js/utils/filter.js\");\n/* harmony import */ var _splitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../splitter */ \"./static/src/js/utils/splitter.js\");\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * This module provides a set of functions for adding and removing events to any DOM element through an event\n * proxy. The underlying system is vanilla JS and uses addEventListener()/removeEventListener(), but the proxy\n * makes it possible to remove any and all events, even though they are bound to other scopes or exist inside\n * constructor instantiations.\n *\n * Under normal circumstances, you probably won't need this. But as soon as you start removing constructed\n * instances, and need to clean up after yourself, adding and removing events using these functions will help\n * you a lot.\n *\n * Please note that you will NOT be able to remove these events using removeEventListener(); nor will you\n * be able to use these functions to remove events created using addEventListener().\n *\n *\n * @module utils/events/events\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>To add an event:</caption>\n * import { addEvent } from \"./utils/events/events\";\n * const element = document.querySelector(\".element\");\n * addEvent(element, \"click\", yourEventHandlerHere);\n *\n *\n * @example <caption>To remove that event again:</caption>\n * import { removeEvent } from \"./utils/events/events\";\n * removeEvent(element, \"click\", yourEventHandlerHere);\n *\n *\n * @example <caption>To remove all click-events from the element:</caption>\n * removeEvent(element, \"click\");\n *\n *\n * @example <caption>To remove all events from the element:</caption>\n * import { removeAllEvents } from \"./utils/events/events\";\n * removeAllEvents(element);\n *\n *\n * @example <caption>To add an event to be fired only once and then removed automatically:</caption>\n * import { addEventOnce } from \"./utils/events/events\";\n * const element = document.querySelector(\".element\");\n * addEventOnce(element, \"click\", yourEventHandlerHere);\n *\n */\n\n\n\n // We'll be using Map and not a regular object, since Map supports using objects as keys.\n// This requires you to include the required polyfill. \"default-3.6\" from polyfill.io is fine.\n\nvar knownDOMObjects = new Map();\n/**\n * The actual event handler that will be fired by any event bound using addEvent(). Internal use only.\n *\n * @private\n * @param {Event} event\n */\n\nfunction handleEvent(event) {\n  /** @type {Node|*} */\n  var element = this;\n  var elementHandlers = knownDOMObjects.get(element);\n  var eventType = event.type;\n\n  if (elementHandlers && _typeof(elementHandlers) === \"object\") {\n    var callbackList = elementHandlers[eventType]; // Fire all associated event handlers!\n\n    if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_3__[\"isArray\"])(callbackList) && callbackList.length) {\n      Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(callbackList, function (callback) {\n        callback.eventHandler(event); // Remove event if it is only to be fired once\n\n        if (callback.once) {\n          removeEvent(element, eventType, callback.eventHandler);\n        }\n      });\n    }\n  }\n}\n/**\n * Remove an event from the given DOM element(s). Can individual or all callbacks for an event type, depending on whether\n * \"eventHandlerToRemove\" is set.\n *\n * @param {Node|Node[]|NodeList|Window|Document} elements - The DOM element(s) we'll be working on.\n * @param {string|string[]} eventTypes - A string containing one or more event names to remove, separated by comma/space, or given as an array.\n * @param {function} [eventHandlerToRemove] - A specific event handler to remove. If set, only that particular callback will be removed from the event type. If not, all callbacks for the event type are removed.\n */\n\n\nfunction removeEvent(elements, eventTypes, eventHandlerToRemove) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(elements, function (element) {\n    var elementHandlers = knownDOMObjects.get(element);\n\n    if (elementHandlers) {\n      Object(_splitter__WEBPACK_IMPORTED_MODULE_2__[\"splitter\"])(eventTypes, function (event) {\n        if (event) {\n          if (eventHandlerToRemove !== undefined) {\n            var callbackList = elementHandlers[event]; // If there's a list of callbacks for the event type, filter it so it doesn't contain the given \"target callback\".\n\n            if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_3__[\"isArray\"])(callbackList) && callbackList.length > 0) {\n              callbackList = Object(_filter__WEBPACK_IMPORTED_MODULE_1__[\"filter\"])(callbackList, function (callbackObject) {\n                return callbackObject.eventHandler !== eventHandlerToRemove;\n              }); // If there are any callbacks left, store them now, and then return to avoid hitting\n              // the final \"remove everything\"-block.\n\n              if (callbackList.length > 0) {\n                elementHandlers[event] = callbackList;\n                return;\n              }\n            }\n          } // If we're here, no usable event handlers are left, or we should just kill anything anyway (if no\n          // eventHandlerToRemove was provided). Destroy the entire event handler to clean up memory.\n\n\n          element.removeEventListener(event, handleEvent);\n          delete elementHandlers[event];\n        }\n      }); // Update the event handler cache.\n\n      knownDOMObjects.set(element, elementHandlers);\n    }\n  });\n}\n/**\n * Remove ALL event handlers set on the given DOM element(s).\n *\n * @param {Node|Node[]|NodeList|Window|Document} elements - The element(s) to clean up.\n */\n\nfunction removeAllEvents(elements) {\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(elements, function (element) {\n    var elementHandlers = knownDOMObjects.get(element);\n\n    if (elementHandlers) {\n      // Remove all the event handlers we can possibly find.\n      Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(Object.keys(elementHandlers), function (eventType) {\n        removeEvent(element, eventType); // Remove event listeners and clean up memory.\n\n        element.removeEventListener(eventType, handleEvent);\n      });\n      knownDOMObjects.delete(element);\n    }\n  });\n}\n/**\n * Add an event to the given element(s).\n *\n * @param {Node|Node[]|NodeList|Window|Document} elements - The element(s) we'll be working on.\n * @param {string|string[]} eventTypes - A string containing one or more events to add (ie. \"click\", \"mouseenter\" etc.), separated by comma/space, or given as an array.\n * @param {function} eventHandler - The event handler function that'll handle the event.\n * @param {boolean} [useCapture=false] - Whether or not to use event capturing. See JS-docs for more.\n * @param {boolean} [runOnce=false] - Whether or not to only run the event once and then remove it.\n */\n\nfunction addEvent(elements, eventTypes, eventHandler) {\n  var useCapture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var runOnce = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(elements, function (element) {\n    var elementHandlers = knownDOMObjects.get(element) || {};\n    Object(_splitter__WEBPACK_IMPORTED_MODULE_2__[\"splitter\"])(eventTypes, function (event) {\n      if (!Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_3__[\"isArray\"])(elementHandlers[event])) {\n        elementHandlers[event] = [];\n        element.addEventListener(event, handleEvent, useCapture);\n      }\n\n      elementHandlers[event].push({\n        runOnce: runOnce,\n        eventHandler: eventHandler\n      });\n    });\n    knownDOMObjects.set(element, elementHandlers);\n  });\n}\n/**\n * Add an event to the given element(s) and remove it after its first run\n *\n * @param {Node|Node[]|NodeList|Window|Document} elements - The element(s) we'll be working on.\n * @param {string|string[]} eventTypes - A string containing one or more events to add (ie. \"click\", \"mouseenter\" etc.), separated by space.\n * @param {function} eventHandler - The event handler function that'll handle the event.\n * @param {boolean} [useCapture=false] - Whether or not to use event capturing. See JS-docs for more.\n */\n\nfunction addEventOnce(elements, eventTypes, eventHandler) {\n  var useCapture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  addEvent(elements, eventTypes, eventHandler, useCapture, true);\n}\n/**\n * Create an eventListener on a parent DOMElement to handle events triggered on multiple elements\n * elements triggering the eventHandler is determined by selector given.\n * Bonus: Works even on elements created after the event listener was added.\n * Depends on experimental code `Element.prototype.closest`, which isn't supported in IE, so a polyfill is required.\n *\n * @param {string} selector - Selector-string of element to trigger eventHandler on\n * @param {string|string[]} eventTypes - A string containing one or more events to add (ie. \"click\", \"mouseenter\" etc.), separated by comma/space, or given as an array.\n * @param {function} eventHandler - The event handler function that'll be triggered once event is fired inside selected element. Will be called with object as single parameter, containing event and event target (to avoid scope trouble).\n * @param {Node|Node[]|NodeList|HTMLDocument|Window|Document} elementScope - Parent DOM-element to set eventListener on (optional, defaults to document).\n */\n\nfunction delegateEvent(selector, eventTypes, eventHandler) {\n  var elementScope = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : document;\n  addEvent(elementScope, eventTypes, function (event) {\n    var listeningTarget = event.target.closest(selector);\n\n    if (listeningTarget) {\n      eventHandler({\n        event: event,\n        target: listeningTarget\n      });\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/src/js/utils/events/events.js\n");

/***/ }),

/***/ "./static/src/js/utils/events/onReady.js":
/*!***********************************************!*\
  !*** ./static/src/js/utils/events/onReady.js ***!
  \***********************************************/
/*! exports provided: runAutomatically, documentIsReady, setRunAutomatically, onReady */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runAutomatically\", function() { return runAutomatically; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"documentIsReady\", function() { return documentIsReady; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setRunAutomatically\", function() { return setRunAutomatically; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onReady\", function() { return onReady; });\n/**\n * Handler to trigger callbacks once the browser is ready for them.\n *\n * The onReady() function is one of the cornerstones of Frontline. You basically feed it a function, or a lot\n * of functions, and they will be executed automatically once the browser's readystate changes to something\n * close to \"ready\". You can add a priority to move your scripts up in the queue, but the default should suit\n * most use cases perfectly.\n *\n * You can keep adding references using onReady() even after the page is loaded. In that case they will be\n * run at once.\n *\n *\n * @module utils/events/onReady\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example\n * import { onReady } from \"./utils/events/onReady\";\n *\n * onReady(yourFunctionHere);\n *\n *\n * @example <caption>To set a task to high priority:</caption>\n * onReady(yourFunctionHere, 50);\n *\n *\n * @example <caption>To disable automatic execution so you can trigger the ready-state yourself, do this:</caption>\n * import { documentIsReady, setRunAutomatically, onReady } from \"./utils/events/onReady\";\n *\n * setRunAutomatically(false); // This must happen BEFORE the first use of onReady()!\n * onReady(yourCallbackHere);\n * window.setTimeout(documentIsReady, 5000);\n *\n */\nvar functionReferences = []; // Set the initial readyState based on the browser's current state. If the script has been loaded\n// asynchronously, the DOM might be ready for us already, in which case there's no reason to delay\n// any further processing. The following will evaluate as true if the DOM is ready, or the page is\n// complete.\n\nvar readyState = document.readyState === \"interactive\" || document.readyState === \"complete\"; // Defines whether or not the window.onReady event has been bound, so we won't do it twice. That\n// would just be stupid.\n\nvar isReadyEventBound = false;\n/**\n * Whether or not the callbacks are run automatically\n *\n * @type {boolean}\n */\n\nvar runAutomatically = true;\n/**\n * Sort and run the given array of callback functions.\n *\n * @private\n * @param {Array} funcArray\n */\n\nfunction runFunctionArray(funcArray) {\n  funcArray.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n  funcArray.forEach(function (funcRef) {\n    return funcRef.func();\n  });\n}\n/**\n * Empty the callback arrays\n *\n * @private\n */\n\n\nfunction emptyCallbackArrays() {\n  // Keep iterating through the function references until there are none left.\n  while (functionReferences.length) {\n    // Set up a temporary array that mirrors the list of callbacks, and empty the real one.\n    var tempArray = functionReferences.slice(0);\n    functionReferences = []; // Run the callbacks. The callbacks themselves may set up more callbacks, which\n    // is why we keep looping the array until we're done.\n\n    runFunctionArray(tempArray);\n  } // At this point we'll assume we're ready for anything!\n\n\n  readyState = true;\n}\n/**\n * Make sure the \"ready\"-event is set.\n *\n * @private\n */\n\n\nfunction bindReadyEvent() {\n  if (!isReadyEventBound) {\n    // Set up our own document-ready-function to run when the DOM is ready, or whatever.\n    if (window.addEventListener) {\n      window.addEventListener(\"load\", emptyCallbackArrays, false);\n    } else {\n      window.attachEvent(\"onload\", emptyCallbackArrays);\n    }\n\n    isReadyEventBound = true;\n  }\n}\n/**\n * External function to mark the code as being ready. Must be used if runAutomatically is set to false.\n */\n\n\nfunction documentIsReady() {\n  // Continue at once if the DOM is ready; otherwise wait for the browser to catch up by\n  // attaching an event listener.\n  if (readyState) {\n    emptyCallbackArrays();\n  } else {\n    bindReadyEvent();\n  }\n}\n/**\n * Set whether or not the tasks should be run automatically when the page is ready or not.\n *\n * @param {boolean} state - Whether or not to run the tasks automatically.\n */\n\nfunction setRunAutomatically() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  runAutomatically = state;\n}\n/**\n * Register a function to run when the page is ready.\n *\n * @param {Function} functionReference - The function you want to run.\n * @param {Number} [priority=100] - Priority of your callback. Default should be 100, anything under 25 is very-high priority and should be avoided unless you know what you're doing!\n */\n\nfunction onReady(functionReference) {\n  var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n  if (typeof functionReference === \"function\") {\n    if (readyState && runAutomatically) {\n      functionReference();\n    } else {\n      if (runAutomatically) {\n        bindReadyEvent();\n      }\n\n      functionReferences.push({\n        func: functionReference,\n        priority: priority\n      });\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2V2ZW50cy9vblJlYWR5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9ldmVudHMvb25SZWFkeS5qcz9lMTg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGFuZGxlciB0byB0cmlnZ2VyIGNhbGxiYWNrcyBvbmNlIHRoZSBicm93c2VyIGlzIHJlYWR5IGZvciB0aGVtLlxuICpcbiAqIFRoZSBvblJlYWR5KCkgZnVuY3Rpb24gaXMgb25lIG9mIHRoZSBjb3JuZXJzdG9uZXMgb2YgRnJvbnRsaW5lLiBZb3UgYmFzaWNhbGx5IGZlZWQgaXQgYSBmdW5jdGlvbiwgb3IgYSBsb3RcbiAqIG9mIGZ1bmN0aW9ucywgYW5kIHRoZXkgd2lsbCBiZSBleGVjdXRlZCBhdXRvbWF0aWNhbGx5IG9uY2UgdGhlIGJyb3dzZXIncyByZWFkeXN0YXRlIGNoYW5nZXMgdG8gc29tZXRoaW5nXG4gKiBjbG9zZSB0byBcInJlYWR5XCIuIFlvdSBjYW4gYWRkIGEgcHJpb3JpdHkgdG8gbW92ZSB5b3VyIHNjcmlwdHMgdXAgaW4gdGhlIHF1ZXVlLCBidXQgdGhlIGRlZmF1bHQgc2hvdWxkIHN1aXRcbiAqIG1vc3QgdXNlIGNhc2VzIHBlcmZlY3RseS5cbiAqXG4gKiBZb3UgY2FuIGtlZXAgYWRkaW5nIHJlZmVyZW5jZXMgdXNpbmcgb25SZWFkeSgpIGV2ZW4gYWZ0ZXIgdGhlIHBhZ2UgaXMgbG9hZGVkLiBJbiB0aGF0IGNhc2UgdGhleSB3aWxsIGJlXG4gKiBydW4gYXQgb25jZS5cbiAqXG4gKlxuICogQG1vZHVsZSB1dGlscy9ldmVudHMvb25SZWFkeVxuICogQGF1dGhvciBBbmRlcnMgR2lzc2VsIDxhbmRlcnMuZ2lzc2VsQGFrcWEuY29tPlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBvblJlYWR5IH0gZnJvbSBcIi4vdXRpbHMvZXZlbnRzL29uUmVhZHlcIjtcbiAqXG4gKiBvblJlYWR5KHlvdXJGdW5jdGlvbkhlcmUpO1xuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5UbyBzZXQgYSB0YXNrIHRvIGhpZ2ggcHJpb3JpdHk6PC9jYXB0aW9uPlxuICogb25SZWFkeSh5b3VyRnVuY3Rpb25IZXJlLCA1MCk7XG4gKlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlRvIGRpc2FibGUgYXV0b21hdGljIGV4ZWN1dGlvbiBzbyB5b3UgY2FuIHRyaWdnZXIgdGhlIHJlYWR5LXN0YXRlIHlvdXJzZWxmLCBkbyB0aGlzOjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IGRvY3VtZW50SXNSZWFkeSwgc2V0UnVuQXV0b21hdGljYWxseSwgb25SZWFkeSB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy9vblJlYWR5XCI7XG4gKlxuICogc2V0UnVuQXV0b21hdGljYWxseShmYWxzZSk7IC8vIFRoaXMgbXVzdCBoYXBwZW4gQkVGT1JFIHRoZSBmaXJzdCB1c2Ugb2Ygb25SZWFkeSgpIVxuICogb25SZWFkeSh5b3VyQ2FsbGJhY2tIZXJlKTtcbiAqIHdpbmRvdy5zZXRUaW1lb3V0KGRvY3VtZW50SXNSZWFkeSwgNTAwMCk7XG4gKlxuICovXG5cblxuXG5sZXQgZnVuY3Rpb25SZWZlcmVuY2VzID0gW107XG5cbi8vIFNldCB0aGUgaW5pdGlhbCByZWFkeVN0YXRlIGJhc2VkIG9uIHRoZSBicm93c2VyJ3MgY3VycmVudCBzdGF0ZS4gSWYgdGhlIHNjcmlwdCBoYXMgYmVlbiBsb2FkZWRcbi8vIGFzeW5jaHJvbm91c2x5LCB0aGUgRE9NIG1pZ2h0IGJlIHJlYWR5IGZvciB1cyBhbHJlYWR5LCBpbiB3aGljaCBjYXNlIHRoZXJlJ3Mgbm8gcmVhc29uIHRvIGRlbGF5XG4vLyBhbnkgZnVydGhlciBwcm9jZXNzaW5nLiBUaGUgZm9sbG93aW5nIHdpbGwgZXZhbHVhdGUgYXMgdHJ1ZSBpZiB0aGUgRE9NIGlzIHJlYWR5LCBvciB0aGUgcGFnZSBpc1xuLy8gY29tcGxldGUuXG5sZXQgcmVhZHlTdGF0ZSA9IGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiaW50ZXJhY3RpdmVcIiB8fCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCI7XG5cblxuLy8gRGVmaW5lcyB3aGV0aGVyIG9yIG5vdCB0aGUgd2luZG93Lm9uUmVhZHkgZXZlbnQgaGFzIGJlZW4gYm91bmQsIHNvIHdlIHdvbid0IGRvIGl0IHR3aWNlLiBUaGF0XG4vLyB3b3VsZCBqdXN0IGJlIHN0dXBpZC5cbmxldCBpc1JlYWR5RXZlbnRCb3VuZCA9IGZhbHNlO1xuXG5cbi8qKlxuICogV2hldGhlciBvciBub3QgdGhlIGNhbGxiYWNrcyBhcmUgcnVuIGF1dG9tYXRpY2FsbHlcbiAqXG4gKiBAdHlwZSB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGxldCBydW5BdXRvbWF0aWNhbGx5ID0gdHJ1ZTtcblxuXG5cbi8qKlxuICogU29ydCBhbmQgcnVuIHRoZSBnaXZlbiBhcnJheSBvZiBjYWxsYmFjayBmdW5jdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGZ1bmNBcnJheVxuICovXG5mdW5jdGlvbiBydW5GdW5jdGlvbkFycmF5KGZ1bmNBcnJheSkge1xuXG4gICAgZnVuY0FycmF5LnNvcnQoKGEsIGIpID0+IGEucHJpb3JpdHkgLSBiLnByaW9yaXR5KTtcblxuICAgIGZ1bmNBcnJheS5mb3JFYWNoKGZ1bmNSZWYgPT4gZnVuY1JlZi5mdW5jKCkpO1xuXG59XG5cblxuXG4vKipcbiAqIEVtcHR5IHRoZSBjYWxsYmFjayBhcnJheXNcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBlbXB0eUNhbGxiYWNrQXJyYXlzKCkge1xuXG4gICAgLy8gS2VlcCBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZnVuY3Rpb24gcmVmZXJlbmNlcyB1bnRpbCB0aGVyZSBhcmUgbm9uZSBsZWZ0LlxuICAgIHdoaWxlIChmdW5jdGlvblJlZmVyZW5jZXMubGVuZ3RoKSB7XG5cbiAgICAgICAgLy8gU2V0IHVwIGEgdGVtcG9yYXJ5IGFycmF5IHRoYXQgbWlycm9ycyB0aGUgbGlzdCBvZiBjYWxsYmFja3MsIGFuZCBlbXB0eSB0aGUgcmVhbCBvbmUuXG4gICAgICAgIGNvbnN0IHRlbXBBcnJheSA9IGZ1bmN0aW9uUmVmZXJlbmNlcy5zbGljZSgwKTtcbiAgICAgICAgZnVuY3Rpb25SZWZlcmVuY2VzID0gW107XG5cbiAgICAgICAgLy8gUnVuIHRoZSBjYWxsYmFja3MuIFRoZSBjYWxsYmFja3MgdGhlbXNlbHZlcyBtYXkgc2V0IHVwIG1vcmUgY2FsbGJhY2tzLCB3aGljaFxuICAgICAgICAvLyBpcyB3aHkgd2Uga2VlcCBsb29waW5nIHRoZSBhcnJheSB1bnRpbCB3ZSdyZSBkb25lLlxuICAgICAgICBydW5GdW5jdGlvbkFycmF5KHRlbXBBcnJheSk7XG5cbiAgICB9XG5cblxuICAgIC8vIEF0IHRoaXMgcG9pbnQgd2UnbGwgYXNzdW1lIHdlJ3JlIHJlYWR5IGZvciBhbnl0aGluZyFcbiAgICByZWFkeVN0YXRlID0gdHJ1ZTtcblxufVxuXG5cblxuLyoqXG4gKiBNYWtlIHN1cmUgdGhlIFwicmVhZHlcIi1ldmVudCBpcyBzZXQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gYmluZFJlYWR5RXZlbnQoKSB7XG5cbiAgICBpZiAoIWlzUmVhZHlFdmVudEJvdW5kKSB7XG4gICAgICAgIC8vIFNldCB1cCBvdXIgb3duIGRvY3VtZW50LXJlYWR5LWZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBET00gaXMgcmVhZHksIG9yIHdoYXRldmVyLlxuICAgICAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBlbXB0eUNhbGxiYWNrQXJyYXlzLCBmYWxzZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIiwgZW1wdHlDYWxsYmFja0FycmF5cyk7XG4gICAgICAgIH1cblxuICAgICAgICBpc1JlYWR5RXZlbnRCb3VuZCA9IHRydWU7XG5cbiAgICB9XG59XG5cblxuXG4vKipcbiAqIEV4dGVybmFsIGZ1bmN0aW9uIHRvIG1hcmsgdGhlIGNvZGUgYXMgYmVpbmcgcmVhZHkuIE11c3QgYmUgdXNlZCBpZiBydW5BdXRvbWF0aWNhbGx5IGlzIHNldCB0byBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRvY3VtZW50SXNSZWFkeSgpIHtcblxuICAgIC8vIENvbnRpbnVlIGF0IG9uY2UgaWYgdGhlIERPTSBpcyByZWFkeTsgb3RoZXJ3aXNlIHdhaXQgZm9yIHRoZSBicm93c2VyIHRvIGNhdGNoIHVwIGJ5XG4gICAgLy8gYXR0YWNoaW5nIGFuIGV2ZW50IGxpc3RlbmVyLlxuICAgIGlmIChyZWFkeVN0YXRlKSB7XG4gICAgICAgIGVtcHR5Q2FsbGJhY2tBcnJheXMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBiaW5kUmVhZHlFdmVudCgpO1xuICAgIH1cblxufVxuXG5cblxuLyoqXG4gKiBTZXQgd2hldGhlciBvciBub3QgdGhlIHRhc2tzIHNob3VsZCBiZSBydW4gYXV0b21hdGljYWxseSB3aGVuIHRoZSBwYWdlIGlzIHJlYWR5IG9yIG5vdC5cbiAqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHN0YXRlIC0gV2hldGhlciBvciBub3QgdG8gcnVuIHRoZSB0YXNrcyBhdXRvbWF0aWNhbGx5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0UnVuQXV0b21hdGljYWxseShzdGF0ZSA9IHRydWUpIHtcbiAgICBydW5BdXRvbWF0aWNhbGx5ID0gc3RhdGU7XG59XG5cblxuXG4vKipcbiAqIFJlZ2lzdGVyIGEgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIHBhZ2UgaXMgcmVhZHkuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuY3Rpb25SZWZlcmVuY2UgLSBUaGUgZnVuY3Rpb24geW91IHdhbnQgdG8gcnVuLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtwcmlvcml0eT0xMDBdIC0gUHJpb3JpdHkgb2YgeW91ciBjYWxsYmFjay4gRGVmYXVsdCBzaG91bGQgYmUgMTAwLCBhbnl0aGluZyB1bmRlciAyNSBpcyB2ZXJ5LWhpZ2ggcHJpb3JpdHkgYW5kIHNob3VsZCBiZSBhdm9pZGVkIHVubGVzcyB5b3Uga25vdyB3aGF0IHlvdSdyZSBkb2luZyFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uUmVhZHkoZnVuY3Rpb25SZWZlcmVuY2UsIHByaW9yaXR5ID0gMTAwKSB7XG5cbiAgICBpZiAodHlwZW9mIGZ1bmN0aW9uUmVmZXJlbmNlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgaWYgKHJlYWR5U3RhdGUgJiYgcnVuQXV0b21hdGljYWxseSkge1xuICAgICAgICAgICAgZnVuY3Rpb25SZWZlcmVuY2UoKTtcbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgaWYgKHJ1bkF1dG9tYXRpY2FsbHkpIHtcbiAgICAgICAgICAgICAgICBiaW5kUmVhZHlFdmVudCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvblJlZmVyZW5jZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgZnVuYzogZnVuY3Rpb25SZWZlcmVuY2UsXG4gICAgICAgICAgICAgICAgcHJpb3JpdHksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQUE7QUFHQTs7Ozs7O0FBS0E7QUFJQTs7Ozs7OztBQU1BO0FBRUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBRUE7QUFJQTs7Ozs7OztBQUtBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFJQTs7Ozs7OztBQUtBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBOzs7OztBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUlBOzs7Ozs7QUFLQTtBQUFBO0FBQ0E7QUFDQTtBQUlBOzs7Ozs7O0FBTUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/events/onReady.js\n");

/***/ }),

/***/ "./static/src/js/utils/events/onWindowResize.js":
/*!******************************************************!*\
  !*** ./static/src/js/utils/events/onWindowResize.js ***!
  \******************************************************/
/*! exports provided: currentWindowWidth, currentWindowHeight, breakpointIndex, currentBreakpoint, currentBreakpointName, onWindowResize, breakpointMax, breakpointMin, removeCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentWindowWidth\", function() { return currentWindowWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentWindowHeight\", function() { return currentWindowHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"breakpointIndex\", function() { return breakpointIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentBreakpoint\", function() { return currentBreakpoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentBreakpointName\", function() { return currentBreakpointName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onWindowResize\", function() { return onWindowResize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"breakpointMax\", function() { return breakpointMax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"breakpointMin\", function() { return breakpointMin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeCallback\", function() { return removeCallback; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var lodash_es_throttle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash-es/throttle */ \"./node_modules/lodash-es/throttle.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../filter */ \"./static/src/js/utils/filter.js\");\n/* harmony import */ var _onReady__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onReady */ \"./static/src/js/utils/events/onReady.js\");\n/* harmony import */ var _setup_site_settings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../setup/site-settings */ \"./setup/site-settings.json\");\nvar _setup_site_settings__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../../../../setup/site-settings */ \"./setup/site-settings.json\", 1);\n/**\n * Responsive window handler to detect **window resizing**, **orientation changes** and **active breakpoints**.\n *\n * This module exposes a set of tools to detect when the window has been resized or the orientation has\n * changed. It also figures out which breakpoint is currently active, and provides a set of tools to compare\n * breakpoint sizes programmatically.\n *\n * All callbacks are throttled to avoid using too many CPU cycles.\n *\n * Breakpoints are imported from `src/site-settings.json` automatically. Please remember to add them in order.\n *\n *\n * @module utils/events/onWindowResize\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Basic usage</caption>\n * import { onWindowResize } from \"./utils/events/onWindowResize\";\n *\n * function resizeHasHappened() {}\n * onWindowResize(resizeHasHappened);\n *\n *\n * @example <caption>To figure out the active breakpoint, as well as some other stuff:</caption>\n * import { currentWindowWidth,\n *          currentWindowHeight,\n *          currentBreakpoint,\n *          breakpointIndex,\n *          onWindowResize\n *        } from \"./utils/events/onWindowResize\";\n *\n * function resizeHasHappened() {\n *     window.console.log(currentWindowWidth, currentWindowHeight);\n *\n *     if (currentBreakpoint >= breakpointIndex.md) {\n *         window.console.info(\"Breakpoint is at least 'md'.\");\n *     }\n * }\n *\n * onWindowResize(resizeHasHappened);\n *\n */\n\n\n\n\n\nvar functionQueue = [];\n/**\n * The current width of the window.\n *\n * @type {number}\n */\n\nvar currentWindowWidth = 0;\n/**\n * The current height of the window.\n *\n * @type {number}\n */\n\nvar currentWindowHeight = 0;\n/**\n * An array of screen sizes, in order to easily being able to identify the current breakpoint corresponding\n * to the active media query. Will be populated automatically from screen sizes set in \"site-settings.json\".\n */\n\nvar breakpointIndex = {\n  unknown: 0\n};\n/**\n * The timeout for the resize throttle. Set to \"0\" to disable (!) throttling.\n *\n * @type {number}\n * @private\n */\n\nvar resizeThrottleTimeoutMs = 500;\n/**\n * An object containing pre-parsed target screen sizes for our breakpoints. Will also be populated\n * automatically. Used internally only.\n *\n * @private\n */\n\nvar screenSizes = {\n  unknown: 0\n};\nvar sizeCounter = 1; // Run through the screen sizes in \"site-settings.json\", and populate our \"size objects\" with them.\n\nObject(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(_setup_site_settings__WEBPACK_IMPORTED_MODULE_4__.screensizes, function (size, sizeName) {\n  // This index allows us to perform simple size comparisons on the breakpoints.\n  breakpointIndex[sizeName] = sizeCounter; // This parses the breakpoint size as raw pixels for use in screen width detections later.\n\n  screenSizes[sizeName] = Number(size.replace(/[^0-9]/g, \"\")); // This increases the counter by one. Oh my, yes.\n\n  sizeCounter += 1;\n});\n/**\n * The current break point. This will correspond to one of the predefined breakpoints, as seen above, so you can\n * use it to compare breakpoints directly:\n *\n * if (currentBreakpoint >= breakpointIndex.md) { ... }\n *\n * @type {number}\n */\n\nvar currentBreakpoint = 0;\n/**\n * The name of the current break point, in case you need it.\n *\n * @type {string}\n */\n\nvar currentBreakpointName = \"unknown\";\n/**\n * Get various window sizes - width, height etc.\n * This function is fired automatically upon page load. and throttled each time the window changes size.\n *\n * @private\n */\n\nfunction getWindowSizes() {\n  currentWindowWidth = window.innerWidth;\n  currentWindowHeight = window.innerHeight; // Calculate which breakpoint is currently active, based on the screen width compared to the pre-parsed\n  // breakpoint definitions.\n\n  var lastFoundWidth = 0;\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(screenSizes, function (targetScreenWidth, associatedBreakpointName) {\n    if (currentWindowWidth >= targetScreenWidth && targetScreenWidth > lastFoundWidth) {\n      lastFoundWidth = targetScreenWidth;\n      currentBreakpoint = breakpointIndex[associatedBreakpointName];\n      currentBreakpointName = associatedBreakpointName;\n    }\n  });\n}\n/**\n * This function is run every time the window is resized. It's on a throttle, though, so it won't be fired too\n * often.\n *\n * @private\n */\n\n\nfunction performCalculationCallback() {\n  // Get our current window size(s)\n  getWindowSizes(); // Fire all queued functions that other scripts may have registered.\n\n  functionQueue.forEach(function (funcRef) {\n    funcRef({\n      currentWindowWidth: currentWindowWidth,\n      currentWindowHeight: currentWindowHeight,\n      currentBreakpoint: currentBreakpoint,\n      currentBreakpointName: currentBreakpointName\n    });\n  });\n} // Set up a throttle, so our callback function isn't fired too often.\n\n\nvar throttledCalculationCallback = resizeThrottleTimeoutMs ? Object(lodash_es_throttle__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(performCalculationCallback, resizeThrottleTimeoutMs) : performCalculationCallback; // Utilize our own \"onready\"-function to bind an event for handling window resizes and orientation changes.\n\nObject(_onReady__WEBPACK_IMPORTED_MODULE_3__[\"onReady\"])(function () {\n  window.addEventListener(\"resize\", throttledCalculationCallback);\n  window.addEventListener(\"orientationchange\", throttledCalculationCallback); // Get our current window size, because we might need the data at once.\n\n  getWindowSizes();\n}, // Set to priority \"25\", which will put it behind the DOM initiator, but still before all default functions.\n25);\n/**\n * Schedule a callback to fire each time the window changes shape (on a throttle, so don't worry).\n * Your function will be called every time the window is resized, or the window orientation changes.\n *\n * @param {Function} callback - The callback to fire when the window changes shape.\n */\n\nfunction onWindowResize(callback) {\n  if (typeof callback === \"function\") {\n    functionQueue.push(callback);\n  }\n}\n/**\n * Check if the current breakpoint is less than or equal to a specified breakpoint name\n * Similar to CSS's `@media (max-width: ...px)`\n *\n * @param {string} breakpointName - The breakpoint name to check for, ie. `md`.\n * @returns {boolean} `true` if the current breakpoint is less or equal to the given breakpoint name.\n */\n\nfunction breakpointMax(breakpointName) {\n  if (breakpointIndex.hasOwnProperty(breakpointName)) {\n    return breakpointIndex[breakpointName] >= currentBreakpoint;\n  }\n}\n/**\n * Check if the current breakpoint is greater than or equal to a specified breakpoint name\n * Similar to CSS's `@media (min-width: ...px)`\n *\n * @param {string} breakpointName - The breakpoint name to check for, ie. `md`.\n * @returns {boolean} `true` if the current breakpoint is above or equal to the given breakpoint name.\n */\n\nfunction breakpointMin(breakpointName) {\n  if (breakpointIndex.hasOwnProperty(breakpointName)) {\n    return breakpointIndex[breakpointName] <= currentBreakpoint;\n  }\n}\n/**\n * Remove callback function from callback stack.\n *\n * @param {function} callback - The callback to remove.\n */\n\nfunction removeCallback(callback) {\n  if (typeof callback === \"function\") {\n    functionQueue = Object(_filter__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(functionQueue, function (functionReference) {\n      return functionReference !== callback;\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/src/js/utils/events/onWindowResize.js\n");

/***/ }),

/***/ "./static/src/js/utils/events/triggerCustomEvent.js":
/*!**********************************************************!*\
  !*** ./static/src/js/utils/events/triggerCustomEvent.js ***!
  \**********************************************************/
/*! exports provided: triggerCustomEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerCustomEvent\", function() { return triggerCustomEvent; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../forEach */ \"./static/src/js/utils/forEach.js\");\n/**\n * Dispatch a **custom event** on the given HTML element. Similar to jQuery's `.trigger()`.\n *\n * @module utils/events/triggerCustomEvent\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Trigger an event on an element</caption>\n * import { triggerCustomEvent } from \"./utils/events/triggerCustomEvent\";\n *\n * const target = document.querySelector(\"button\");\n *\n * triggerCustomEvent(target, \"click\");\n *\n *\n * @example <caption>Trigger an event on an element and send along data as well.</caption>\n * import { triggerCustomEvent } from \"./utils/events/triggerCustomEvent\";\n *\n * const target = document.querySelector(\"button\");\n *\n * addEvent(target, \"my-own-event\", dataObject => { ... });\n * triggerCustomEvent(target, \"my-own-event\", { dataKey: \"data value\" });\n */\n\n\nif (document.documentMode && document.documentMode <= 11) {\n  // \"new CustomEvent()\" is broken in IE, apparently. However, this polyfill/hack works.\n  // See http://stackoverflow.com/a/26596324\n  (function () {\n    function CustomEvent(event, params) {\n      var useParams = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n      var customEvent = document.createEvent(\"CustomEvent\");\n      customEvent.initCustomEvent(event, useParams.bubbles, useParams.cancelable, useParams.detail);\n      return customEvent;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n  })();\n}\n/**\n * Trigger a custom event on an element.\n *\n * @param {Element|Element[]|Document|Window|NodeList} target - The element(s) to fire the event on.\n * @param {string} eventName - Name of the custom event, ie. `\"akqa:my-custom-event\"`.\n * @param {object} [eventData] - Optional object of data to send along to the event handler.\n */\n\n\nfunction triggerCustomEvent(target, eventName) {\n  var eventData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(target, function (element) {\n    var event;\n\n    if (window.CustomEvent) {\n      event = new CustomEvent(eventName, {\n        detail: eventData,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(eventName, true, true, eventData);\n    }\n\n    element.dispatchEvent(event);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2V2ZW50cy90cmlnZ2VyQ3VzdG9tRXZlbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2V2ZW50cy90cmlnZ2VyQ3VzdG9tRXZlbnQuanM/NzMyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERpc3BhdGNoIGEgKipjdXN0b20gZXZlbnQqKiBvbiB0aGUgZ2l2ZW4gSFRNTCBlbGVtZW50LiBTaW1pbGFyIHRvIGpRdWVyeSdzIGAudHJpZ2dlcigpYC5cbiAqXG4gKiBAbW9kdWxlIHV0aWxzL2V2ZW50cy90cmlnZ2VyQ3VzdG9tRXZlbnRcbiAqIEBhdXRob3IgQW5kZXJzIEdpc3NlbCA8YW5kZXJzLmdpc3NlbEBha3FhLmNvbT5cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5UcmlnZ2VyIGFuIGV2ZW50IG9uIGFuIGVsZW1lbnQ8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyB0cmlnZ2VyQ3VzdG9tRXZlbnQgfSBmcm9tIFwiLi91dGlscy9ldmVudHMvdHJpZ2dlckN1c3RvbUV2ZW50XCI7XG4gKlxuICogY29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJ1dHRvblwiKTtcbiAqXG4gKiB0cmlnZ2VyQ3VzdG9tRXZlbnQodGFyZ2V0LCBcImNsaWNrXCIpO1xuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5UcmlnZ2VyIGFuIGV2ZW50IG9uIGFuIGVsZW1lbnQgYW5kIHNlbmQgYWxvbmcgZGF0YSBhcyB3ZWxsLjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IHRyaWdnZXJDdXN0b21FdmVudCB9IGZyb20gXCIuL3V0aWxzL2V2ZW50cy90cmlnZ2VyQ3VzdG9tRXZlbnRcIjtcbiAqXG4gKiBjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYnV0dG9uXCIpO1xuICpcbiAqIGFkZEV2ZW50KHRhcmdldCwgXCJteS1vd24tZXZlbnRcIiwgZGF0YU9iamVjdCA9PiB7IC4uLiB9KTtcbiAqIHRyaWdnZXJDdXN0b21FdmVudCh0YXJnZXQsIFwibXktb3duLWV2ZW50XCIsIHsgZGF0YUtleTogXCJkYXRhIHZhbHVlXCIgfSk7XG4gKi9cblxuXG5cbmltcG9ydCB7IGZvckVhY2ggfSBmcm9tIFwiLi4vZm9yRWFjaFwiO1xuXG5cblxuaWYgKGRvY3VtZW50LmRvY3VtZW50TW9kZSAmJiBkb2N1bWVudC5kb2N1bWVudE1vZGUgPD0gMTEpIHtcbiAgICAvLyBcIm5ldyBDdXN0b21FdmVudCgpXCIgaXMgYnJva2VuIGluIElFLCBhcHBhcmVudGx5LiBIb3dldmVyLCB0aGlzIHBvbHlmaWxsL2hhY2sgd29ya3MuXG4gICAgLy8gU2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NTk2MzI0XG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gQ3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcykge1xuICAgICAgICAgICAgY29uc3QgdXNlUGFyYW1zID0gcGFyYW1zIHx8IHsgYnViYmxlczogZmFsc2UsIGNhbmNlbGFibGU6IGZhbHNlLCBkZXRhaWw6IHVuZGVmaW5lZCB9O1xuICAgICAgICAgICAgY29uc3QgY3VzdG9tRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO1xuICAgICAgICAgICAgY3VzdG9tRXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50LCB1c2VQYXJhbXMuYnViYmxlcywgdXNlUGFyYW1zLmNhbmNlbGFibGUsIHVzZVBhcmFtcy5kZXRhaWwpO1xuICAgICAgICAgICAgcmV0dXJuIGN1c3RvbUV2ZW50O1xuICAgICAgICB9XG5cblxuICAgICAgICBDdXN0b21FdmVudC5wcm90b3R5cGUgPSB3aW5kb3cuRXZlbnQucHJvdG90eXBlO1xuXG4gICAgICAgIHdpbmRvdy5DdXN0b21FdmVudCA9IEN1c3RvbUV2ZW50O1xuICAgIH0pKCk7XG59XG5cblxuXG4vKipcbiAqIFRyaWdnZXIgYSBjdXN0b20gZXZlbnQgb24gYW4gZWxlbWVudC5cbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR8RWxlbWVudFtdfERvY3VtZW50fFdpbmRvd3xOb2RlTGlzdH0gdGFyZ2V0IC0gVGhlIGVsZW1lbnQocykgdG8gZmlyZSB0aGUgZXZlbnQgb24uXG4gKiBAcGFyYW0ge3N0cmluZ30gZXZlbnROYW1lIC0gTmFtZSBvZiB0aGUgY3VzdG9tIGV2ZW50LCBpZS4gYFwiYWtxYTpteS1jdXN0b20tZXZlbnRcImAuXG4gKiBAcGFyYW0ge29iamVjdH0gW2V2ZW50RGF0YV0gLSBPcHRpb25hbCBvYmplY3Qgb2YgZGF0YSB0byBzZW5kIGFsb25nIHRvIHRoZSBldmVudCBoYW5kbGVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJpZ2dlckN1c3RvbUV2ZW50KHRhcmdldCwgZXZlbnROYW1lLCBldmVudERhdGEgPSB7fSkge1xuXG4gICAgZm9yRWFjaCh0YXJnZXQsIGVsZW1lbnQgPT4ge1xuICAgICAgICBsZXQgZXZlbnQ7XG5cbiAgICAgICAgaWYgKHdpbmRvdy5DdXN0b21FdmVudCkge1xuICAgICAgICAgICAgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7IGRldGFpbDogZXZlbnREYXRhLCBidWJibGVzOiB0cnVlLCBjYW5jZWxhYmxlOiB0cnVlIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO1xuICAgICAgICAgICAgZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgdHJ1ZSwgdHJ1ZSwgZXZlbnREYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgfSk7XG5cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBSUE7Ozs7Ozs7OztBQU9BO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/events/triggerCustomEvent.js\n");

/***/ }),

/***/ "./static/src/js/utils/filter.js":
/*!***************************************!*\
  !*** ./static/src/js/utils/filter.js ***!
  \***************************************/
/*! exports provided: filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Filter an array, an object or a NodeList based on a given predicate function.\n *\n * @module utils/filter\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Filtering an array:</caption>\n * import { filter } from \"./utils/filter\";\n *\n * const inputArray = [1,2,3,4,5];\n * const filteredArray = filter(inputArray, value => value % 2);\n * // Returns [1, 3, 5]\n *\n *\n * @example <caption>Filtering an object:</caption>\n * import { filter } from \"./utils/filter\";\n *\n * const inputObject = { a: 1, b: 2, c: 3, d: 4, e: 5 };\n * const filteredObject = filter(inputObject, (value, key) => value % 2 || key === \"d\");\n * // Returns { a: 1, c: 3, d: 4, e: 5 }\n *\n *\n * @example <caption>Filtering a NodeList:</caption>\n * import { filter } from \"./utils/filter\";\n *\n * const inputObject = document.querySelectorAll(\"button\");\n * const filteredObject = filter(inputObject, element => !element.disabled);\n * // Returns an array (!) of buttons that are not disabled.\n */\n\n\n/**\n *\n * @param {Array|object|NodeList} collection - Collection to filter. Can be an array, an object or a NodeList.\n * @param {function} predicateFunction - Predicate function. Must return a truthy value for filter to include option.\n * @returns {Array|Object} An object of the same type as the input collection, containing all entries that pass the predicate function. However, if you pass a NodeList, it will come back as an array instead.\n */\n\nfunction filter(collection, predicateFunction) {\n  if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(collection)) {\n    return collection.filter(predicateFunction);\n  } else if (_typeof(collection) === \"object\") {\n    var filteredObject = {};\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(collection, function (value, key) {\n      if (Boolean(predicateFunction(value, key)) === true) {\n        filteredObject[key] = value;\n      }\n    }); // If a NodeList was passed, return as an array. If not, just throw an object back instead.\n\n    return collection.constructor === NodeList ? Object.values(filteredObject) : filteredObject;\n  }\n\n  return collection;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2ZpbHRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3N0YXRpYy9zcmMvanMvdXRpbHMvZmlsdGVyLmpzP2MwYzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGaWx0ZXIgYW4gYXJyYXksIGFuIG9iamVjdCBvciBhIE5vZGVMaXN0IGJhc2VkIG9uIGEgZ2l2ZW4gcHJlZGljYXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZmlsdGVyXG4gKiBAYXV0aG9yIEFuZGVycyBHaXNzZWwgPGFuZGVycy5naXNzZWxAYWtxYS5jb20+XG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+RmlsdGVyaW5nIGFuIGFycmF5OjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IGZpbHRlciB9IGZyb20gXCIuL3V0aWxzL2ZpbHRlclwiO1xuICpcbiAqIGNvbnN0IGlucHV0QXJyYXkgPSBbMSwyLDMsNCw1XTtcbiAqIGNvbnN0IGZpbHRlcmVkQXJyYXkgPSBmaWx0ZXIoaW5wdXRBcnJheSwgdmFsdWUgPT4gdmFsdWUgJSAyKTtcbiAqIC8vIFJldHVybnMgWzEsIDMsIDVdXG4gKlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkZpbHRlcmluZyBhbiBvYmplY3Q6PC9jYXB0aW9uPlxuICogaW1wb3J0IHsgZmlsdGVyIH0gZnJvbSBcIi4vdXRpbHMvZmlsdGVyXCI7XG4gKlxuICogY29uc3QgaW5wdXRPYmplY3QgPSB7IGE6IDEsIGI6IDIsIGM6IDMsIGQ6IDQsIGU6IDUgfTtcbiAqIGNvbnN0IGZpbHRlcmVkT2JqZWN0ID0gZmlsdGVyKGlucHV0T2JqZWN0LCAodmFsdWUsIGtleSkgPT4gdmFsdWUgJSAyIHx8IGtleSA9PT0gXCJkXCIpO1xuICogLy8gUmV0dXJucyB7IGE6IDEsIGM6IDMsIGQ6IDQsIGU6IDUgfVxuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5GaWx0ZXJpbmcgYSBOb2RlTGlzdDo8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBmaWx0ZXIgfSBmcm9tIFwiLi91dGlscy9maWx0ZXJcIjtcbiAqXG4gKiBjb25zdCBpbnB1dE9iamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJidXR0b25cIik7XG4gKiBjb25zdCBmaWx0ZXJlZE9iamVjdCA9IGZpbHRlcihpbnB1dE9iamVjdCwgZWxlbWVudCA9PiAhZWxlbWVudC5kaXNhYmxlZCk7XG4gKiAvLyBSZXR1cm5zIGFuIGFycmF5ICghKSBvZiBidXR0b25zIHRoYXQgYXJlIG5vdCBkaXNhYmxlZC5cbiAqL1xuXG5cbmltcG9ydCB7IGZvckVhY2ggfSBmcm9tIFwiLi9mb3JFYWNoXCI7XG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcIi4vdHlwZUNoZWNrZXJzXCI7XG5cblxuXG4vKipcbiAqXG4gKiBAcGFyYW0ge0FycmF5fG9iamVjdHxOb2RlTGlzdH0gY29sbGVjdGlvbiAtIENvbGxlY3Rpb24gdG8gZmlsdGVyLiBDYW4gYmUgYW4gYXJyYXksIGFuIG9iamVjdCBvciBhIE5vZGVMaXN0LlxuICogQHBhcmFtIHtmdW5jdGlvbn0gcHJlZGljYXRlRnVuY3Rpb24gLSBQcmVkaWNhdGUgZnVuY3Rpb24uIE11c3QgcmV0dXJuIGEgdHJ1dGh5IHZhbHVlIGZvciBmaWx0ZXIgdG8gaW5jbHVkZSBvcHRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl8T2JqZWN0fSBBbiBvYmplY3Qgb2YgdGhlIHNhbWUgdHlwZSBhcyB0aGUgaW5wdXQgY29sbGVjdGlvbiwgY29udGFpbmluZyBhbGwgZW50cmllcyB0aGF0IHBhc3MgdGhlIHByZWRpY2F0ZSBmdW5jdGlvbi4gSG93ZXZlciwgaWYgeW91IHBhc3MgYSBOb2RlTGlzdCwgaXQgd2lsbCBjb21lIGJhY2sgYXMgYW4gYXJyYXkgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlcihjb2xsZWN0aW9uLCBwcmVkaWNhdGVGdW5jdGlvbikge1xuXG4gICAgaWYgKGlzQXJyYXkoY29sbGVjdGlvbikpIHtcbiAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb24uZmlsdGVyKHByZWRpY2F0ZUZ1bmN0aW9uKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb2xsZWN0aW9uID09PSBcIm9iamVjdFwiKSB7XG5cbiAgICAgICAgY29uc3QgZmlsdGVyZWRPYmplY3QgPSB7fTtcbiAgICAgICAgZm9yRWFjaChjb2xsZWN0aW9uLCAodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKEJvb2xlYW4ocHJlZGljYXRlRnVuY3Rpb24odmFsdWUsIGtleSkpID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyZWRPYmplY3Rba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBJZiBhIE5vZGVMaXN0IHdhcyBwYXNzZWQsIHJldHVybiBhcyBhbiBhcnJheS4gSWYgbm90LCBqdXN0IHRocm93IGFuIG9iamVjdCBiYWNrIGluc3RlYWQuXG4gICAgICAgIHJldHVybiBjb2xsZWN0aW9uLmNvbnN0cnVjdG9yID09PSBOb2RlTGlzdCA/IE9iamVjdC52YWx1ZXMoZmlsdGVyZWRPYmplY3QpIDogZmlsdGVyZWRPYmplY3Q7XG5cbiAgICB9XG5cbiAgICByZXR1cm4gY29sbGVjdGlvbjtcblxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkE7QUFDQTtBQUlBOzs7Ozs7O0FBTUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./static/src/js/utils/filter.js\n");

/***/ }),

/***/ "./static/src/js/utils/forEach.js":
/*!****************************************!*\
  !*** ./static/src/js/utils/forEach.js ***!
  \****************************************/
/*! exports provided: forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * **Iterate over just about any iterable object type** - primarily for node lists, arrays and objects, but will also\n * yield results for single elements such as elements (nodes), strings or numbers.\n *\n * @module utils/forEach\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n * @example <caption>Iterating through an array:</caption>\n * import { forEach } from \"./utils/forEach\";\n * forEach([value1, value2, value3], (value, index) => {\n *     // Loop through the values in the array\n * });\n *\n *\n * @example <caption>Iterating through an object:</caption>\n * import { forEach } from \"./utils/forEach\";\n * forEach({\"key1\": value1, \"key2\": value2}, (value, key) => {\n *     // Loop through the values in the object\n * });\n *\n *\n * @example <caption>Iterating through a DOM-collection:</caption>\n * import { forEach } from \"./utils/forEach\";\n *\n * const collection = document.querySelectorAll(\"div\");\n * forEach(collection, element => {\n *     // \"element\" is a reference to the current DOM-element.\n * });\n *\n */\n\n/**\n *\n * @param {Node|NodeList|Window|Document|Array|object|HTMLCollection|*} collection - Collection to iterate over. Can be a single element, too.\n * @param {function} iterator - Callback function for iterator. Will be called with (value, key) as arguments.\n * @param {boolean} [allowNullValues=false] Whether or not to allow the iterator to run if null/undefined is given as a collection.\n */\n\nfunction forEach(collection, iterator) {\n  var allowNullValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  // ** NODE LISTS\n  // If we're dealing with a node list (see document.querySelectorAll()) or HTMLCollections (see eg. document.getElementByClassName, node.children),\n  // we'll iterate through it the old fashioned way.\n  if (collection instanceof NodeList || collection instanceof HTMLCollection) {\n    for (var i = 0; i < collection.length; i += 1) {\n      iterator(collection.item(i), i);\n    }\n  } // ** ARRAYS\n  // Regular arrays are, you know, completely easy.\n  else if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(collection)) {\n      // Why not use `Array.prototype.forEach()`? Because for all the optimizations behind\n      // the scenes, it's still much slower than a simple for-loop.\n      for (var _i = 0; _i < collection.length; _i += 1) {\n        iterator(collection[_i], _i);\n      }\n    } // ** ITERATORS\n    // If we have an iterator object we'll use the \"for ... of\" method of iterating through it.\n    else if (collection && collection.constructor.name === \"Iterator\") {\n        var index = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = collection[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            iterator(item, index);\n            index += 1;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } // ** REGULAR OBJECTS\n      // Objects that are *NOT* HTML-elements of some kind get special treatment.\n      else if (collection && _typeof(collection) === \"object\" && !(collection instanceof Node || collection instanceof Window || collection instanceof Document)) {\n          forEach(Object.keys(collection), function (key) {\n            // We only want to deal with properties that exist on the object itself,\n            // not some prototyped stuff.\n            if (collection.hasOwnProperty(key)) {\n              iterator(collection[key], key);\n            }\n          });\n        } // ** SINGLE NODES OR ELEMENTS\n        // Anything that doesn't fit in the cases above will be handled here. We'll just fire the iterator once with the\n        // given collection argument, and 0 as the key, and hope that is enough for the use case.\n        else {\n            if (collection || allowNullValues) {\n              iterator(collection, 0);\n            }\n          }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2ZvckVhY2guanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2ZvckVhY2guanM/MjVhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqICoqSXRlcmF0ZSBvdmVyIGp1c3QgYWJvdXQgYW55IGl0ZXJhYmxlIG9iamVjdCB0eXBlKiogLSBwcmltYXJpbHkgZm9yIG5vZGUgbGlzdHMsIGFycmF5cyBhbmQgb2JqZWN0cywgYnV0IHdpbGwgYWxzb1xuICogeWllbGQgcmVzdWx0cyBmb3Igc2luZ2xlIGVsZW1lbnRzIHN1Y2ggYXMgZWxlbWVudHMgKG5vZGVzKSwgc3RyaW5ncyBvciBudW1iZXJzLlxuICpcbiAqIEBtb2R1bGUgdXRpbHMvZm9yRWFjaFxuICogQGF1dGhvciBBbmRlcnMgR2lzc2VsIDxhbmRlcnMuZ2lzc2VsQGFrcWEuY29tPlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkl0ZXJhdGluZyB0aHJvdWdoIGFuIGFycmF5OjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IGZvckVhY2ggfSBmcm9tIFwiLi91dGlscy9mb3JFYWNoXCI7XG4gKiBmb3JFYWNoKFt2YWx1ZTEsIHZhbHVlMiwgdmFsdWUzXSwgKHZhbHVlLCBpbmRleCkgPT4ge1xuICogICAgIC8vIExvb3AgdGhyb3VnaCB0aGUgdmFsdWVzIGluIHRoZSBhcnJheVxuICogfSk7XG4gKlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkl0ZXJhdGluZyB0aHJvdWdoIGFuIG9iamVjdDo8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSBcIi4vdXRpbHMvZm9yRWFjaFwiO1xuICogZm9yRWFjaCh7XCJrZXkxXCI6IHZhbHVlMSwgXCJrZXkyXCI6IHZhbHVlMn0sICh2YWx1ZSwga2V5KSA9PiB7XG4gKiAgICAgLy8gTG9vcCB0aHJvdWdoIHRoZSB2YWx1ZXMgaW4gdGhlIG9iamVjdFxuICogfSk7XG4gKlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkl0ZXJhdGluZyB0aHJvdWdoIGEgRE9NLWNvbGxlY3Rpb246PC9jYXB0aW9uPlxuICogaW1wb3J0IHsgZm9yRWFjaCB9IGZyb20gXCIuL3V0aWxzL2ZvckVhY2hcIjtcbiAqXG4gKiBjb25zdCBjb2xsZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdlwiKTtcbiAqIGZvckVhY2goY29sbGVjdGlvbiwgZWxlbWVudCA9PiB7XG4gKiAgICAgLy8gXCJlbGVtZW50XCIgaXMgYSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgRE9NLWVsZW1lbnQuXG4gKiB9KTtcbiAqXG4gKi9cblxuXG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcIi4vdHlwZUNoZWNrZXJzXCI7XG5cblxuXG4vKipcbiAqXG4gKiBAcGFyYW0ge05vZGV8Tm9kZUxpc3R8V2luZG93fERvY3VtZW50fEFycmF5fG9iamVjdHxIVE1MQ29sbGVjdGlvbnwqfSBjb2xsZWN0aW9uIC0gQ29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuIENhbiBiZSBhIHNpbmdsZSBlbGVtZW50LCB0b28uXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBpdGVyYXRvciAtIENhbGxiYWNrIGZ1bmN0aW9uIGZvciBpdGVyYXRvci4gV2lsbCBiZSBjYWxsZWQgd2l0aCAodmFsdWUsIGtleSkgYXMgYXJndW1lbnRzLlxuICogQHBhcmFtIHtib29sZWFufSBbYWxsb3dOdWxsVmFsdWVzPWZhbHNlXSBXaGV0aGVyIG9yIG5vdCB0byBhbGxvdyB0aGUgaXRlcmF0b3IgdG8gcnVuIGlmIG51bGwvdW5kZWZpbmVkIGlzIGdpdmVuIGFzIGEgY29sbGVjdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2goY29sbGVjdGlvbiwgaXRlcmF0b3IsIGFsbG93TnVsbFZhbHVlcyA9IGZhbHNlKSB7XG5cbiAgICAvLyAqKiBOT0RFIExJU1RTXG4gICAgLy8gSWYgd2UncmUgZGVhbGluZyB3aXRoIGEgbm9kZSBsaXN0IChzZWUgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgpKSBvciBIVE1MQ29sbGVjdGlvbnMgKHNlZSBlZy4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5Q2xhc3NOYW1lLCBub2RlLmNoaWxkcmVuKSxcbiAgICAvLyB3ZSdsbCBpdGVyYXRlIHRocm91Z2ggaXQgdGhlIG9sZCBmYXNoaW9uZWQgd2F5LlxuICAgIGlmIChjb2xsZWN0aW9uIGluc3RhbmNlb2YgTm9kZUxpc3QgfHwgY29sbGVjdGlvbiBpbnN0YW5jZW9mIEhUTUxDb2xsZWN0aW9uKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sbGVjdGlvbi5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgaXRlcmF0b3IoY29sbGVjdGlvbi5pdGVtKGkpLCBpKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgLy8gKiogQVJSQVlTXG4gICAgLy8gUmVndWxhciBhcnJheXMgYXJlLCB5b3Uga25vdywgY29tcGxldGVseSBlYXN5LlxuICAgIGVsc2UgaWYgKGlzQXJyYXkoY29sbGVjdGlvbikpIHtcbiAgICAgICAgLy8gV2h5IG5vdCB1c2UgYEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKClgPyBCZWNhdXNlIGZvciBhbGwgdGhlIG9wdGltaXphdGlvbnMgYmVoaW5kXG4gICAgICAgIC8vIHRoZSBzY2VuZXMsIGl0J3Mgc3RpbGwgbXVjaCBzbG93ZXIgdGhhbiBhIHNpbXBsZSBmb3ItbG9vcC5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xsZWN0aW9uLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBpdGVyYXRvcihjb2xsZWN0aW9uW2ldLCBpKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgLy8gKiogSVRFUkFUT1JTXG4gICAgLy8gSWYgd2UgaGF2ZSBhbiBpdGVyYXRvciBvYmplY3Qgd2UnbGwgdXNlIHRoZSBcImZvciAuLi4gb2ZcIiBtZXRob2Qgb2YgaXRlcmF0aW5nIHRocm91Z2ggaXQuXG4gICAgZWxzZSBpZiAoY29sbGVjdGlvbiAmJiBjb2xsZWN0aW9uLmNvbnN0cnVjdG9yLm5hbWUgPT09IFwiSXRlcmF0b3JcIikge1xuICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgY29sbGVjdGlvbikge1xuICAgICAgICAgICAgaXRlcmF0b3IoaXRlbSwgaW5kZXgpO1xuICAgICAgICAgICAgaW5kZXggKz0gMTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgLy8gKiogUkVHVUxBUiBPQkpFQ1RTXG4gICAgLy8gT2JqZWN0cyB0aGF0IGFyZSAqTk9UKiBIVE1MLWVsZW1lbnRzIG9mIHNvbWUga2luZCBnZXQgc3BlY2lhbCB0cmVhdG1lbnQuXG4gICAgZWxzZSBpZiAoY29sbGVjdGlvbiAmJiB0eXBlb2YgY29sbGVjdGlvbiA9PT0gXCJvYmplY3RcIiAmJiAhKGNvbGxlY3Rpb24gaW5zdGFuY2VvZiBOb2RlIHx8IGNvbGxlY3Rpb24gaW5zdGFuY2VvZiBXaW5kb3cgfHwgY29sbGVjdGlvbiBpbnN0YW5jZW9mIERvY3VtZW50KSkge1xuICAgICAgICBmb3JFYWNoKE9iamVjdC5rZXlzKGNvbGxlY3Rpb24pLCBrZXkgPT4ge1xuICAgICAgICAgICAgLy8gV2Ugb25seSB3YW50IHRvIGRlYWwgd2l0aCBwcm9wZXJ0aWVzIHRoYXQgZXhpc3Qgb24gdGhlIG9iamVjdCBpdHNlbGYsXG4gICAgICAgICAgICAvLyBub3Qgc29tZSBwcm90b3R5cGVkIHN0dWZmLlxuICAgICAgICAgICAgaWYgKGNvbGxlY3Rpb24uaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yKGNvbGxlY3Rpb25ba2V5XSwga2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICAvLyAqKiBTSU5HTEUgTk9ERVMgT1IgRUxFTUVOVFNcbiAgICAvLyBBbnl0aGluZyB0aGF0IGRvZXNuJ3QgZml0IGluIHRoZSBjYXNlcyBhYm92ZSB3aWxsIGJlIGhhbmRsZWQgaGVyZS4gV2UnbGwganVzdCBmaXJlIHRoZSBpdGVyYXRvciBvbmNlIHdpdGggdGhlXG4gICAgLy8gZ2l2ZW4gY29sbGVjdGlvbiBhcmd1bWVudCwgYW5kIDAgYXMgdGhlIGtleSwgYW5kIGhvcGUgdGhhdCBpcyBlbm91Z2ggZm9yIHRoZSB1c2UgY2FzZS5cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKGNvbGxlY3Rpb24gfHwgYWxsb3dOdWxsVmFsdWVzKSB7XG4gICAgICAgICAgICBpdGVyYXRvcihjb2xsZWN0aW9uLCAwKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0NBO0FBSUE7Ozs7Ozs7QUFNQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFSQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBVkE7QUFZQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU1BO0FBSUE7QUFWQTtBQVlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBYkE7QUFlQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/forEach.js\n");

/***/ }),

/***/ "./static/src/js/utils/interaction/modal.js":
/*!**************************************************!*\
  !*** ./static/src/js/utils/interaction/modal.js ***!
  \**************************************************/
/*! exports provided: Modal, confirm, alert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Modal\", function() { return Modal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"confirm\", function() { return confirm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alert\", function() { return alert; });\n/* harmony import */ var _dom_scrollLock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/scrollLock */ \"./static/src/js/utils/dom/scrollLock.js\");\n/* harmony import */ var _events_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/events */ \"./static/src/js/utils/events/events.js\");\n/* harmony import */ var _dom_classList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/classList */ \"./static/src/js/utils/dom/classList.js\");\n/* harmony import */ var _dom_createElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/createElement */ \"./static/src/js/utils/dom/createElement.js\");\n/* harmony import */ var _events_detectEventName__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events/detectEventName */ \"./static/src/js/utils/events/detectEventName.js\");\n/* harmony import */ var _dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/elementManipulation */ \"./static/src/js/utils/dom/elementManipulation.js\");\n/* harmony import */ var _dom_accessibility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom/accessibility */ \"./static/src/js/utils/dom/accessibility.js\");\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\n/* harmony import */ var _scss_components_js_modal_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ~/scss/components/js/modal.scss */ \"./static/src/scss/components/js/modal.scss\");\n/* harmony import */ var _scss_components_js_modal_scss__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_scss_components_js_modal_scss__WEBPACK_IMPORTED_MODULE_8__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\r\n * Modal dialog class\r\n *\r\n * This file contains a Modal class that can be used for dynamically spawning fully configurable\r\n * modal popup-boxes. The class itself can be set up in a lot of different ways, but there are\r\n * also two helper-functions for spawning simple dialog-popups: `confirm()` and `alert()`.\r\n *\r\n *\r\n * @since 3.6.6\r\n * @author Anders Gissel <anders.gissel@akqa.com>\r\n * @module utils/interaction/Modal\r\n *\r\n *\r\n * @example <caption>Basic usage:</caption>\r\n * import { Modal } from \"./utils/interaction/modal\";\r\n *\r\n * const newModal = new Modal();\r\n * newModal\r\n *     .setContent(\"<p>Demo-data</p>\")\r\n *     .setTitle(\"Demo-title\");\r\n *\r\n * // or:\r\n * // const newModal = new Modal({ content: \"<p>Demo-data</p>\", title: \"Demo-title\" });\r\n *\r\n * window.setTimeout(() => newModal.destroy(), 5000);\r\n *\r\n *\r\n * @example <caption>To use the shortcuts for alert- or confirmation dialogs:</caption>\r\n * import { alert as alertModal, confirm as confirmModal } from \"./utils/interaction/modal\";\r\n *\r\n * confirmModal(\"Please confirm this message!\", \"Please confirm\", \"Yes\", \"No\")\r\n *     .then(\r\n *         () => alertModal(\"You clicked yes!\", \"Wohoo!\", \"OK\"),\r\n *         () => alertModal(\"You clicked no!\", \"What?!\", \"Oh, man, sorry\")\r\n *     );\r\n *\r\n */\n\n\n\n\n\n\n\n // Import the styling we need.\n\n\n/**\r\n * An indication of how many modals are currently open. Used internally only.\r\n *\r\n * @private\r\n * @type {number}\r\n */\n\nvar modalCount = 0;\n/**\r\n * The \"active\" class-modifier\r\n *\r\n * @private\r\n * @type {string}\r\n */\n\nvar activeClassModifier = \"visible\";\n/**\r\n * The \"ready\" class-modifier\r\n *\r\n * @private\r\n * @type {string}\r\n */\n\nvar readyClassModifier = \"ready\";\n/**\r\n * The event name to listen for when waiting for transitions to finish. If you clear this, it's tantamount to setting\r\n * \"useTransitions\" to false in all instantiations. Otherwise, a utility will be used to detect the event name in the\r\n * current browser.\r\n *\r\n * @private\r\n * @type {string}\r\n */\n\nvar transitionEndEventName = Object(_events_detectEventName__WEBPACK_IMPORTED_MODULE_4__[\"detectTransitionEndEventName\"])();\n/**\r\n * An object containing the various element names that will be used while building the DOM for a modal.\r\n * * Block-level name is set using configuration for each modal (see \"blockClass\")\r\n * * Basic modifiers are set using configuration for each modal (see \"modifierClass\"); specific per-element modifier are hardcoded.\r\n *\r\n * So, basically (f*cking), if you want to change the class name of any auto-generated element, this is where you do it.\r\n *\r\n * @private\r\n * @type {object}\r\n */\n\nvar classNames = {\n  background: \"background\",\n  wrapper: \"wrapper\",\n  innerWrapper: \"inner-wrapper\",\n  header: \"header\",\n  titleWrapper: \"title-wrapper\",\n  title: \"title\",\n  content: \"content\",\n  closeButton: \"close\",\n  closeIcon: \"close-icon\",\n  closeLabel: \"close-label\"\n};\nvar Modal =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * The modal constructor itself. Used to build and display a modal dialog, although the displaying can be\r\n   * stopped if you so choose.\r\n   *\r\n   * @constructor\r\n   * @since 3.6.6\r\n   * @param {object} [options] The options for the modal you're about to spawn.\r\n   * @param {HTMLElement|Node|string|DocumentFragment} [options.content] The content of the modal. Can also be set using setContent() on the instantiation.\r\n   * @param {HTMLElement|Node|string} [options.title] The title of the modal. Can also be set using setTitle() on the instantiation.\r\n   * @param {string} [options.blockClass=\"modal\"] This is the block-identifier class (the \"B\" in \"BEM\")\r\n   * @param {string} [options.modifierClass=\"\"] All created DOM nodes will receive this modifier class (the \"M\" in \"BEM\")\r\n   * @param {string} [options.closeLabel=\"Close\"] The label for the \"Close\"-button.\r\n   * @param {boolean} [options.autoShow=true] Whether or not to show the modal upon creation (if disabled, you'll need to run show() at some point).\r\n   * @param {boolean} [options.closable=true] Whether or not this modal can be closed by the user (if not, you need to do it programmatically).\r\n   * @param {boolean} [options.destroyOnEscape=true] If `closable` is true, hitting ESC (you know, the Escape-key) will hide and destroy the modal.\r\n   * @param {boolean} [options.setScrollLock=true] Whether or not to enable/disable a scroll lock while the modal is open. If scroll lock is already activated, this defaults to false.\r\n   * @param {boolean} [options.useTransitions=true] If true, the script will listen for transitions to figure out when the modal is shown or hidden. If disabled, these listeners are not set, and events fire immediately.\r\n   * @param {boolean} [options.autoFocus=true] If true, the modal will find the first interactive element inside itself and focus on it once it's opened. If you disable this, you need to do this manually.\r\n   * @param {function|function[]} [options.beforeShow=[]] Optional callback(s) to fire before the modal is shown. Single function or array of functions.\r\n   * @param {function|function[]} [options.afterShow=[]] Optional callback(s) to fire after the modal is shown. Single function or array of functions.\r\n   * @param {function|function[]} [options.beforeHide=[]] Optional callback(s) to fire before the modal is destroyed. Single function or array of functions.\r\n   * @param {function|function[]} [options.afterHide=[]] Optional callback(s) to fire after the modal is destroyed. Single function or array of functions.\r\n   * @param {function|function[]} [options.beforeDestruct=[]] Optional callback(s) to fire just before the modal is destroyed. Single function or array of functions.\r\n   * @param {HTMLElement|HTMLBodyElement|Element} [options.parentNode=document.body] Where to put the generated DOM-nodes. Will default to the document body if not set.\r\n   *\r\n   * @example <caption>Basic usage:</caption>\r\n   * import { Modal } from \"./utils/interaction/modal\";\r\n   *\r\n   * const newModal = new Modal();\r\n   * newModal\r\n   *     .setContent(\"<p>Demo-data</p>\")\r\n   *     .setTitle(\"Demo-title\");\r\n   */\n  function Modal() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Modal);\n\n    _defineProperty(this, \"beforeShow\", function () {\n      return _this.fireCallbacks(\"beforeShow\");\n    });\n\n    _defineProperty(this, \"afterShow\", function () {\n      return _this.fireCallbacks(\"afterShow\");\n    });\n\n    _defineProperty(this, \"beforeHide\", function () {\n      return _this.fireCallbacks(\"beforeHide\");\n    });\n\n    _defineProperty(this, \"afterHide\", function () {\n      return _this.fireCallbacks(\"afterHide\");\n    });\n\n    _defineProperty(this, \"beforeDestruct\", function () {\n      return _this.fireCallbacks(\"beforeDestruct\");\n    });\n\n    _defineProperty(this, \"onBodyKeypress\", function (e) {\n      if (e.which === 27) {\n        _this.destroy();\n      }\n    });\n\n    this.dom = {};\n    this.configuration = {\n      blockClass: options.blockClass || \"modal\",\n      modifierClass: options.modifierClass || \"\",\n      autoShow: typeof options.autoShow === \"boolean\" ? options.autoShow : true,\n      closable: typeof options.closable === \"boolean\" ? options.closable : true,\n      destroyOnEscape: typeof options.destroyOnEscape === \"boolean\" ? options.destroyOnEscape : true,\n      autoFocus: typeof options.autoFocus === \"boolean\" ? options.autoFocus : true,\n      setScrollLock: typeof options.setScrollLock === \"boolean\" ? options.setScrollLock : !_dom_scrollLock__WEBPACK_IMPORTED_MODULE_0__[\"isScrollLocked\"],\n      useTransitions: typeof options.useTransitions === \"boolean\" ? options.useTransitions : transitionEndEventName.length > 0,\n      closeLabel: typeof options.closeLabel === \"string\" ? options.closeLabel : \"Close\",\n      // Callbacks, man!\n      beforeShow: this.sanitizeCallbacks(options.beforeShow),\n      afterShow: this.sanitizeCallbacks(options.afterShow),\n      beforeHide: this.sanitizeCallbacks(options.beforeHide),\n      afterHide: this.sanitizeCallbacks(options.afterHide),\n      beforeDestruct: this.sanitizeCallbacks(options.beforeDestruct),\n      // The parent node is neat! This is where we'll put all our stuff!\n      parentNode: options.parentNode || document.body\n    };\n    this.buildDOMNodes(); // Load title if set through the options.\n\n    if (typeof options.title !== \"undefined\") {\n      this.setTitle(options.title);\n    } // Load content if set through the options.\n\n\n    if (typeof options.content !== \"undefined\") {\n      this.setContent(options.content);\n    }\n\n    if (this.configuration.autoShow) {\n      window.setTimeout(function () {\n        return _this.show();\n      }, 100);\n    }\n\n    modalCount += 1;\n  }\n  /**\r\n   * Build the \"BE\"-part of a BEM-object class name.\r\n   *\r\n   * @private\r\n   * @param {string} elementIdentifier\r\n   * @returns {string}\r\n   */\n\n\n  _createClass(Modal, [{\n    key: \"buildBaseClass\",\n    value: function buildBaseClass(elementIdentifier) {\n      return \"\".concat(this.configuration.blockClass, \"__\").concat(elementIdentifier);\n    }\n    /**\r\n     * Build a string containing all relevant class names for the given element type.\r\n     *\r\n     * @private\r\n     * @param {string} elementIdentifier - This will become the \"E\" in the BEM-naming - in other words, the element name.\r\n     * @param {string} [modifier=\"\"] - Optional modifier class, that will be added in addition to the modifierClass from the configuration.\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"buildCompleteClassString\",\n    value: function buildCompleteClassString(elementIdentifier, modifier) {\n      var baseClass = this.buildBaseClass(elementIdentifier);\n      var className = baseClass;\n\n      if (typeof modifier === \"string\" && modifier.length > 0) {\n        className += \" \".concat(baseClass, \"--\").concat(modifier);\n      }\n\n      if (typeof this.configuration.modifierClass === \"string\" && this.configuration.modifierClass.length > 0) {\n        className += \" \".concat(baseClass, \"--\").concat(this.configuration.modifierClass);\n      }\n\n      return className;\n    }\n    /**\r\n     * Ensure that the callback lists are populated with nothing but arrays.\r\n     *\r\n     * @private\r\n     * @param {function|function[]} callbackList\r\n     * @returns {Array}\r\n     */\n\n  }, {\n    key: \"sanitizeCallbacks\",\n    value: function sanitizeCallbacks(callbackList) {\n      return callbackList instanceof Array ? callbackList : typeof callbackList === \"function\" ? [callbackList] : [];\n    }\n    /**\r\n     * Build all the DOM nodes for this particular instance.\r\n     *\r\n     * @private\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"buildDOMNodes\",\n    value: function buildDOMNodes() {\n      var _this2 = this;\n\n      if (this.configuration.parentNode instanceof Element) {\n        this.dom.parentNode = this.configuration.parentNode;\n      } else {\n        throw \"Modal instantiation failed: 'parentNode' must be an Element!\";\n      } // First we'll create the background and outer wrapper as \"real\" DOM elements,\n      // since that'll make it easier to reference them later.\n\n\n      var levelName = \"level\".concat(modalCount);\n      this.dom.background = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n        className: this.buildCompleteClassString(classNames.background, levelName)\n      });\n      this.dom.wrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"section\", {\n        className: this.buildCompleteClassString(classNames.wrapper, levelName)\n      });\n      Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])([this.dom.background, this.dom.wrapper], this.dom.parentNode); // Build the header\n\n      this.dom.header = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"header\", {\n        className: this.buildCompleteClassString(classNames.header)\n      }); // Build the close-button, if need be.\n\n      if (this.configuration.closable) {\n        this.dom.closeButton = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"button\", {\n          type: \"button\",\n          className: this.buildCompleteClassString(classNames.closeButton),\n          // The \"close-icon\" spans are not very important to us, so we'll just add them as strings.\n          html: \"<span class=\\\"\".concat(this.buildCompleteClassString(classNames.closeIcon, \"1\"), \"\\\"></span><span class=\\\"\").concat(this.buildCompleteClassString(classNames.closeIcon, \"2\"), \"\\\"></span>\")\n        }); // Make sure the popup closes when either the background or close-button is clicked.\n\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEvent\"])(this.dom.closeButton, \"click\", function () {\n          return _this2.destroy();\n        });\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEvent\"])(this.dom.background, \"click\", function () {\n          return _this2.destroy();\n        }); // The close-label is... neat.\n\n        this.dom.closeLabel = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"span\", {\n          className: this.buildCompleteClassString(classNames.closeLabel),\n          title: this.configuration.closeLabel,\n          text: this.configuration.closeLabel\n        });\n        Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(this.dom.closeLabel, this.dom.closeButton);\n        Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(this.dom.closeButton, this.dom.header);\n      } // Create and add the title wrapper to the header\n\n\n      this.dom.titleWrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n        className: this.buildCompleteClassString(classNames.titleWrapper)\n      });\n      Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(this.dom.titleWrapper, this.dom.header); // Create the content wrapper.\n\n      this.dom.contentWrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n        className: this.buildCompleteClassString(classNames.content)\n      }); // Create and insert the inner wrapper, which holds the content wrapper and the header.\n\n      this.dom.innerWrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n        className: this.buildCompleteClassString(classNames.innerWrapper),\n        html: [this.dom.header, this.dom.contentWrapper]\n      });\n      Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(this.dom.innerWrapper, this.dom.wrapper); // After a (very) short timeout, add the \"ready\"-class to the main elements so we can get transitions ready.\n\n      window.setTimeout(function () {\n        Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(_this2.dom.background, _this2.buildCompleteClassString(classNames.background, readyClassModifier));\n        Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(_this2.dom.wrapper, _this2.buildCompleteClassString(classNames.wrapper, readyClassModifier));\n      }, 60);\n      return this;\n    }\n    /**\r\n     * Fire all callbacks registered with the named type (ie. \"beforeDestruct\") or similar.\r\n     *\r\n     * @private\r\n     * @param {string} callbackType\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"fireCallbacks\",\n    value: function fireCallbacks(callbackType) {\n      var _this3 = this;\n\n      if (this && this.configuration) {\n        var callbackArray = this.configuration[callbackType];\n\n        if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_7__[\"isArray\"])(callbackArray) && callbackArray.length) {\n          callbackArray.forEach(function (funcRef) {\n            funcRef.call(_this3);\n          });\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"show\",\n\n    /**\r\n     * Show the modal.\r\n     *\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n    value: function show() {\n      var _this4 = this;\n\n      if (this.configuration.setScrollLock) {\n        // Scroll locks are nice. Let's do some of that.\n        Object(_dom_scrollLock__WEBPACK_IMPORTED_MODULE_0__[\"enableScrollLock\"])();\n      }\n\n      this.beforeShow();\n\n      if (this.configuration.useTransitions) {\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(this.dom.wrapper, transitionEndEventName, function () {\n          return _this4.afterShow();\n        });\n      }\n\n      Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(this.dom.background, \"\".concat(this.buildBaseClass(classNames.background), \"--\").concat(activeClassModifier));\n      Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(this.dom.wrapper, \"\".concat(this.buildBaseClass(classNames.wrapper), \"--\").concat(activeClassModifier));\n\n      if (this.configuration.autoFocus) {\n        // Move focus to the first interactive element inside the wrapper.\n        // If you want to focus on something else inside it, use the \"afterShow\" callback.\n        var firstInteractiveElement = Object(_dom_accessibility__WEBPACK_IMPORTED_MODULE_6__[\"getFirstInteractiveElementInContainer\"])(this.dom.contentWrapper) || Object(_dom_accessibility__WEBPACK_IMPORTED_MODULE_6__[\"getFirstInteractiveElementInContainer\"])(this.dom.wrapper);\n\n        if (firstInteractiveElement && firstInteractiveElement.focus) {\n          firstInteractiveElement.focus();\n        } else {\n          // This probably won't even work, but we need to try if there absolutely isn't anything inside the modal\n          // to grab onto.\n          this.dom.wrapper.focus();\n        }\n      }\n\n      if (!this.configuration.useTransitions) {\n        this.afterShow();\n      }\n\n      if (this.configuration.closable && this.configuration.destroyOnEscape) {\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEvent\"])(document.body, \"keyup\", this.onBodyKeypress);\n      }\n\n      return this;\n    }\n    /**\r\n     * Hide the modal.\r\n     *\r\n     * @param {boolean} [avoidEvents=false] - If true, the \"afterHide()\" functions will NOT be fired once the modal is hidden.\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this5 = this;\n\n      var avoidEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.configuration.setScrollLock) {\n        // Disable scroll lock\n        Object(_dom_scrollLock__WEBPACK_IMPORTED_MODULE_0__[\"disableScrollLock\"])();\n      }\n\n      this.beforeHide();\n\n      if (avoidEvents !== true) {\n        if (this.configuration.useTransitions) {\n          Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(this.dom.wrapper, transitionEndEventName, function () {\n            return _this5.afterHide();\n          });\n        } else {\n          this.afterHide();\n        }\n      }\n\n      Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"removeClass\"])(this.dom.background, \"\".concat(this.buildBaseClass(classNames.background), \"--\").concat(activeClassModifier));\n      Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"removeClass\"])(this.dom.wrapper, \"\".concat(this.buildBaseClass(classNames.wrapper), \"--\").concat(activeClassModifier));\n      Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeEvent\"])(document.body, \"keyup\", this.onBodyKeypress);\n\n      if (avoidEvents !== true && !this.configuration.useTransitions) {\n        this.afterHide();\n      }\n\n      return this;\n    }\n    /**\r\n     * Clear the content area completely.\r\n     *\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"clearContent\",\n    value: function clearContent() {\n      if (_typeof(this.dom) === \"object\" && this.dom.contentWrapper instanceof HTMLElement) {\n        Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"emptyElement\"])(this.dom.contentWrapper);\n      }\n\n      return this;\n    }\n    /**\r\n     * Load content into the modal container.\r\n     *\r\n     * @param {HTMLElement|Node|string|DocumentFragment} content\r\n     * @param {boolean} [clearFirst=true] - Should the contents be cleared out first?\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      var clearFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (clearFirst) {\n        this.clearContent();\n      }\n\n      Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(content, this.dom.contentWrapper);\n      return this;\n    }\n    /**\r\n     * An easy way of getting the content wrapper, in case you need it from the outside for further processing.\r\n     *\r\n     * @returns {HTMLElement} The HTML element containing the content.\r\n     */\n\n  }, {\n    key: \"getContentWrapper\",\n    value: function getContentWrapper() {\n      return this.dom.contentWrapper;\n    }\n    /**\r\n     * Add a raw text string to the content wrapper as a pretty, formatted title object.\r\n     *\r\n     * @param {Element|string} title - The title to add. Should be either an `Element` or a `string`.\r\n     * @param {boolean} [stringAsHTML=false] - If `title` is a string, and this argument is `true`, the content will be parsed as HTML and then injected. If not, the title will be added as pure text.\r\n     * @returns {Modal} The modal object, for function chaining.\r\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      var stringAsHTML = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.dom.titleElement) {\n        this.dom.titleElement = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"h2\", {\n          className: this.buildCompleteClassString(classNames.title)\n        });\n        Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(this.dom.titleElement, this.dom.titleWrapper);\n      } // Set the title\n\n\n      Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"emptyElement\"])(this.dom.titleElement);\n\n      if (title instanceof Element) {\n        Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(title, this.dom.titleElement);\n      } else if (typeof title === \"string\") {\n        if (stringAsHTML) {\n          Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])(title, this.dom.titleElement);\n        } else {\n          this.dom.titleElement.textContent = title;\n        }\n      }\n\n      return this;\n    }\n    /**\r\n     * An easy way of getting the title wrapper, because we care.\r\n     *\r\n     * @returns {HTMLElement} The HTML element containing the title.\r\n     */\n\n  }, {\n    key: \"getTitleWrapper\",\n    value: function getTitleWrapper() {\n      return this.dom.titleWrapper;\n    }\n    /**\r\n     * Destroy the modal. This will remove event handlers and remove the DOM as best we can.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this6 = this;\n\n      this.beforeDestruct(); // Remove all regular event listeners, because that's just a nice thing to to.\n\n      Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeAllEvents\"])(this.dom.closeButton);\n      Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeAllEvents\"])(this.dom.background);\n      /**\r\n       * Callback function for cleaning up after ourselves.\r\n       */\n\n      var afterHideCallback = function afterHideCallback() {\n        // Fire the \"afterHide\" callbacks (if any) manually, because we've disabled the event listener that would've\n        // done this automatically.\n        _this6.afterHide(); // Remove all content nodes.\n\n\n        _this6.clearContent();\n\n        if (_this6.dom) {\n          Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"deleteElement\"])([_this6.dom.background, _this6.dom.wrapper]);\n        }\n\n        delete _this6.dom;\n        delete _this6.configuration;\n      }; // Set up a callback function to clean up the DOM once we're done hiding the modal\n\n\n      if (this.configuration.useTransitions) {\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(this.dom.wrapper, transitionEndEventName, afterHideCallback);\n      }\n\n      this.hide(); // If we're not listening for transitions, let's just clear out immediately.\n\n      if (!this.configuration.useTransitions) {\n        afterHideCallback();\n      }\n\n      modalCount -= 1;\n    }\n  }]);\n\n  return Modal;\n}();\n/**\r\n * Display a confirm-message to the user. Will return a promise that is resolved on \"Yes\" and rejected on \"No\". Remember to include\r\n * a handler for __both__ cases, or your code will break!\r\n *\r\n * @since 3.6.6\r\n * @param {string|Element|DocumentFragment} message - The message inside the box. If a `string` is given, it will be set **as a text node**! If you want HTML, use an `Element` instead.\r\n * @param {string|Element} title - The title inside the box. If a `string` is given, it will be set **as a text node**! If you want HTML, use an `Element` instead.\r\n * @param {string} [yesLabel=\"Yes\"] - The \"Yes\" label\r\n * @param {string} [noLabel=\"No\"] - The \"No\" label\r\n * @returns {Promise} A promise that is resolved on \"Yes\" and rejected on \"No\". Remember to handle __both__ scenarios in your code!\r\n */\n\nfunction confirm(message, title) {\n  var yesLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Yes\";\n  var noLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"No\";\n  return new Promise(function (onYes, onNo) {\n    var yesWasSelected = false;\n    var content = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n      className: \"modal__content-inner text-center\"\n    });\n    var contentParagraph = typeof message === \"string\" ? Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"p\", {\n      text: message\n    }) : message;\n    var yesButton = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"button\", {\n      className: \"btn btn--primary btn--accept\",\n      text: yesLabel || \"\"\n    });\n    var noButton = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"button\", {\n      className: \"btn btn--secondary btn--decline\",\n      text: noLabel || \"\"\n    });\n    var buttonWrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n      className: \"modal__buttons\"\n    }); // Finalize the contents.\n\n    Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])([yesButton, noButton], buttonWrapper);\n    Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])([contentParagraph, buttonWrapper], content); // Spawn the confirmation box.\n\n    var confirmModal = new Modal({\n      title: title,\n      content: content,\n      beforeDestruct: function beforeDestruct() {\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeAllEvents\"])(yesButton);\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeAllEvents\"])(noButton);\n\n        if (!yesWasSelected) {\n          onNo();\n        }\n      }\n    });\n    Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(confirmModal.getTitleWrapper(), \"text--center\"); // Set some button events for later.\n\n    Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(yesButton, \"click\", function () {\n      yesWasSelected = true;\n      confirmModal.destroy();\n      onYes();\n    });\n    Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(noButton, \"click\", function () {\n      return confirmModal.destroy();\n    });\n  });\n}\n/**\r\n * Display an alert box to the user. Returns a promise that resolves when the user clicks \"OK\".\r\n *\r\n * @since 3.6.6\r\n * @param {string|Element|DocumentFragment} message - The message inside the box. If a `string` is given, it will be set **as a text node**! If you want HTML, use an `Element` instead.\r\n * @param {string|Element} title - The title inside the box. If a string is given, it will be set **as a text node**! If you want HTML, use an `Element` instead.\r\n * @param {string} [okLabel=\"OK\"] - The OK label.\r\n * @returns {Promise} Promise that resolves when the user clicks \"OK\".\r\n */\n\nfunction alert(message, title) {\n  var okLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"OK\";\n  return new Promise(function (onOK) {\n    var content = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n      className: \"modal__content-inner text-center\"\n    });\n    var contentParagraph = typeof message === \"string\" ? Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"p\", {\n      text: message\n    }) : message;\n    var button = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"button\", {\n      className: \"btn btn--primary btn--ok\",\n      text: okLabel || \"\"\n    });\n    var buttonWrapper = Object(_dom_createElement__WEBPACK_IMPORTED_MODULE_3__[\"createElement\"])(\"div\", {\n      className: \"modal__buttons\",\n      html: button\n    }); // Finalize the contents.\n\n    Object(_dom_elementManipulation__WEBPACK_IMPORTED_MODULE_5__[\"appendElement\"])([contentParagraph, buttonWrapper], content); // Spawn the alert box.\n\n    var alertModal = new Modal({\n      title: title,\n      content: content,\n      beforeDestruct: function beforeDestruct() {\n        Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"removeAllEvents\"])(button);\n        onOK();\n      }\n    });\n    Object(_dom_classList__WEBPACK_IMPORTED_MODULE_2__[\"addClass\"])(alertModal.getTitleWrapper(), \"text--center\");\n    Object(_events_events__WEBPACK_IMPORTED_MODULE_1__[\"addEventOnce\"])(button, \"click\", function () {\n      return alertModal.destroy();\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL2ludGVyYWN0aW9uL21vZGFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9pbnRlcmFjdGlvbi9tb2RhbC5qcz83MGJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNb2RhbCBkaWFsb2cgY2xhc3NcclxuICpcclxuICogVGhpcyBmaWxlIGNvbnRhaW5zIGEgTW9kYWwgY2xhc3MgdGhhdCBjYW4gYmUgdXNlZCBmb3IgZHluYW1pY2FsbHkgc3Bhd25pbmcgZnVsbHkgY29uZmlndXJhYmxlXHJcbiAqIG1vZGFsIHBvcHVwLWJveGVzLiBUaGUgY2xhc3MgaXRzZWxmIGNhbiBiZSBzZXQgdXAgaW4gYSBsb3Qgb2YgZGlmZmVyZW50IHdheXMsIGJ1dCB0aGVyZSBhcmVcclxuICogYWxzbyB0d28gaGVscGVyLWZ1bmN0aW9ucyBmb3Igc3Bhd25pbmcgc2ltcGxlIGRpYWxvZy1wb3B1cHM6IGBjb25maXJtKClgIGFuZCBgYWxlcnQoKWAuXHJcbiAqXHJcbiAqXHJcbiAqIEBzaW5jZSAzLjYuNlxyXG4gKiBAYXV0aG9yIEFuZGVycyBHaXNzZWwgPGFuZGVycy5naXNzZWxAYWtxYS5jb20+XHJcbiAqIEBtb2R1bGUgdXRpbHMvaW50ZXJhY3Rpb24vTW9kYWxcclxuICpcclxuICpcclxuICogQGV4YW1wbGUgPGNhcHRpb24+QmFzaWMgdXNhZ2U6PC9jYXB0aW9uPlxyXG4gKiBpbXBvcnQgeyBNb2RhbCB9IGZyb20gXCIuL3V0aWxzL2ludGVyYWN0aW9uL21vZGFsXCI7XHJcbiAqXHJcbiAqIGNvbnN0IG5ld01vZGFsID0gbmV3IE1vZGFsKCk7XHJcbiAqIG5ld01vZGFsXHJcbiAqICAgICAuc2V0Q29udGVudChcIjxwPkRlbW8tZGF0YTwvcD5cIilcclxuICogICAgIC5zZXRUaXRsZShcIkRlbW8tdGl0bGVcIik7XHJcbiAqXHJcbiAqIC8vIG9yOlxyXG4gKiAvLyBjb25zdCBuZXdNb2RhbCA9IG5ldyBNb2RhbCh7IGNvbnRlbnQ6IFwiPHA+RGVtby1kYXRhPC9wPlwiLCB0aXRsZTogXCJEZW1vLXRpdGxlXCIgfSk7XHJcbiAqXHJcbiAqIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IG5ld01vZGFsLmRlc3Ryb3koKSwgNTAwMCk7XHJcbiAqXHJcbiAqXHJcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlRvIHVzZSB0aGUgc2hvcnRjdXRzIGZvciBhbGVydC0gb3IgY29uZmlybWF0aW9uIGRpYWxvZ3M6PC9jYXB0aW9uPlxyXG4gKiBpbXBvcnQgeyBhbGVydCBhcyBhbGVydE1vZGFsLCBjb25maXJtIGFzIGNvbmZpcm1Nb2RhbCB9IGZyb20gXCIuL3V0aWxzL2ludGVyYWN0aW9uL21vZGFsXCI7XHJcbiAqXHJcbiAqIGNvbmZpcm1Nb2RhbChcIlBsZWFzZSBjb25maXJtIHRoaXMgbWVzc2FnZSFcIiwgXCJQbGVhc2UgY29uZmlybVwiLCBcIlllc1wiLCBcIk5vXCIpXHJcbiAqICAgICAudGhlbihcclxuICogICAgICAgICAoKSA9PiBhbGVydE1vZGFsKFwiWW91IGNsaWNrZWQgeWVzIVwiLCBcIldvaG9vIVwiLCBcIk9LXCIpLFxyXG4gKiAgICAgICAgICgpID0+IGFsZXJ0TW9kYWwoXCJZb3UgY2xpY2tlZCBubyFcIiwgXCJXaGF0PyFcIiwgXCJPaCwgbWFuLCBzb3JyeVwiKVxyXG4gKiAgICAgKTtcclxuICpcclxuICovXHJcblxyXG5cclxuaW1wb3J0IHsgZW5hYmxlU2Nyb2xsTG9jaywgZGlzYWJsZVNjcm9sbExvY2ssIGlzU2Nyb2xsTG9ja2VkIH0gZnJvbSBcIi4uL2RvbS9zY3JvbGxMb2NrXCI7XHJcbmltcG9ydCB7IGFkZEV2ZW50LCByZW1vdmVBbGxFdmVudHMsIGFkZEV2ZW50T25jZSwgcmVtb3ZlRXZlbnQgfSBmcm9tIFwiLi4vZXZlbnRzL2V2ZW50c1wiO1xyXG5pbXBvcnQgeyBhZGRDbGFzcywgcmVtb3ZlQ2xhc3MgfSBmcm9tIFwiLi4vZG9tL2NsYXNzTGlzdFwiO1xyXG5pbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS9jcmVhdGVFbGVtZW50XCI7XHJcbmltcG9ydCB7IGRldGVjdFRyYW5zaXRpb25FbmRFdmVudE5hbWUgfSBmcm9tIFwiLi4vZXZlbnRzL2RldGVjdEV2ZW50TmFtZVwiO1xyXG5pbXBvcnQgeyBhcHBlbmRFbGVtZW50LCBkZWxldGVFbGVtZW50LCBlbXB0eUVsZW1lbnQgfSBmcm9tIFwiLi4vZG9tL2VsZW1lbnRNYW5pcHVsYXRpb25cIjtcclxuaW1wb3J0IHsgZ2V0Rmlyc3RJbnRlcmFjdGl2ZUVsZW1lbnRJbkNvbnRhaW5lciB9IGZyb20gXCIuLi9kb20vYWNjZXNzaWJpbGl0eVwiO1xyXG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcIi4uL3R5cGVDaGVja2Vyc1wiO1xyXG5cclxuLy8gSW1wb3J0IHRoZSBzdHlsaW5nIHdlIG5lZWQuXHJcbmltcG9ydCBcIn4vc2Nzcy9jb21wb25lbnRzL2pzL21vZGFsLnNjc3NcIjtcclxuXHJcblxyXG5cclxuLyoqXHJcbiAqIEFuIGluZGljYXRpb24gb2YgaG93IG1hbnkgbW9kYWxzIGFyZSBjdXJyZW50bHkgb3Blbi4gVXNlZCBpbnRlcm5hbGx5IG9ubHkuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEB0eXBlIHtudW1iZXJ9XHJcbiAqL1xyXG5sZXQgbW9kYWxDb3VudCA9IDA7XHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSBcImFjdGl2ZVwiIGNsYXNzLW1vZGlmaWVyXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEB0eXBlIHtzdHJpbmd9XHJcbiAqL1xyXG5jb25zdCBhY3RpdmVDbGFzc01vZGlmaWVyID0gXCJ2aXNpYmxlXCI7XHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSBcInJlYWR5XCIgY2xhc3MtbW9kaWZpZXJcclxuICpcclxuICogQHByaXZhdGVcclxuICogQHR5cGUge3N0cmluZ31cclxuICovXHJcbmNvbnN0IHJlYWR5Q2xhc3NNb2RpZmllciA9IFwicmVhZHlcIjtcclxuXHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSBldmVudCBuYW1lIHRvIGxpc3RlbiBmb3Igd2hlbiB3YWl0aW5nIGZvciB0cmFuc2l0aW9ucyB0byBmaW5pc2guIElmIHlvdSBjbGVhciB0aGlzLCBpdCdzIHRhbnRhbW91bnQgdG8gc2V0dGluZ1xyXG4gKiBcInVzZVRyYW5zaXRpb25zXCIgdG8gZmFsc2UgaW4gYWxsIGluc3RhbnRpYXRpb25zLiBPdGhlcndpc2UsIGEgdXRpbGl0eSB3aWxsIGJlIHVzZWQgdG8gZGV0ZWN0IHRoZSBldmVudCBuYW1lIGluIHRoZVxyXG4gKiBjdXJyZW50IGJyb3dzZXIuXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEB0eXBlIHtzdHJpbmd9XHJcbiAqL1xyXG5jb25zdCB0cmFuc2l0aW9uRW5kRXZlbnROYW1lID0gZGV0ZWN0VHJhbnNpdGlvbkVuZEV2ZW50TmFtZSgpO1xyXG5cclxuXHJcbi8qKlxyXG4gKiBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgdmFyaW91cyBlbGVtZW50IG5hbWVzIHRoYXQgd2lsbCBiZSB1c2VkIHdoaWxlIGJ1aWxkaW5nIHRoZSBET00gZm9yIGEgbW9kYWwuXHJcbiAqICogQmxvY2stbGV2ZWwgbmFtZSBpcyBzZXQgdXNpbmcgY29uZmlndXJhdGlvbiBmb3IgZWFjaCBtb2RhbCAoc2VlIFwiYmxvY2tDbGFzc1wiKVxyXG4gKiAqIEJhc2ljIG1vZGlmaWVycyBhcmUgc2V0IHVzaW5nIGNvbmZpZ3VyYXRpb24gZm9yIGVhY2ggbW9kYWwgKHNlZSBcIm1vZGlmaWVyQ2xhc3NcIik7IHNwZWNpZmljIHBlci1lbGVtZW50IG1vZGlmaWVyIGFyZSBoYXJkY29kZWQuXHJcbiAqXHJcbiAqIFNvLCBiYXNpY2FsbHkgKGYqY2tpbmcpLCBpZiB5b3Ugd2FudCB0byBjaGFuZ2UgdGhlIGNsYXNzIG5hbWUgb2YgYW55IGF1dG8tZ2VuZXJhdGVkIGVsZW1lbnQsIHRoaXMgaXMgd2hlcmUgeW91IGRvIGl0LlxyXG4gKlxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBAdHlwZSB7b2JqZWN0fVxyXG4gKi9cclxuY29uc3QgY2xhc3NOYW1lcyA9IHtcclxuICAgIGJhY2tncm91bmQ6IFwiYmFja2dyb3VuZFwiLFxyXG4gICAgd3JhcHBlcjogXCJ3cmFwcGVyXCIsXHJcbiAgICBpbm5lcldyYXBwZXI6IFwiaW5uZXItd3JhcHBlclwiLFxyXG4gICAgaGVhZGVyOiBcImhlYWRlclwiLFxyXG5cclxuICAgIHRpdGxlV3JhcHBlcjogXCJ0aXRsZS13cmFwcGVyXCIsXHJcbiAgICB0aXRsZTogXCJ0aXRsZVwiLFxyXG5cclxuICAgIGNvbnRlbnQ6IFwiY29udGVudFwiLFxyXG5cclxuICAgIGNsb3NlQnV0dG9uOiBcImNsb3NlXCIsXHJcbiAgICBjbG9zZUljb246IFwiY2xvc2UtaWNvblwiLFxyXG4gICAgY2xvc2VMYWJlbDogXCJjbG9zZS1sYWJlbFwiLFxyXG59O1xyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgTW9kYWwge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1vZGFsIGNvbnN0cnVjdG9yIGl0c2VsZi4gVXNlZCB0byBidWlsZCBhbmQgZGlzcGxheSBhIG1vZGFsIGRpYWxvZywgYWx0aG91Z2ggdGhlIGRpc3BsYXlpbmcgY2FuIGJlXHJcbiAgICAgKiBzdG9wcGVkIGlmIHlvdSBzbyBjaG9vc2UuXHJcbiAgICAgKlxyXG4gICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAgKiBAc2luY2UgMy42LjZcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc10gVGhlIG9wdGlvbnMgZm9yIHRoZSBtb2RhbCB5b3UncmUgYWJvdXQgdG8gc3Bhd24uXHJcbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fE5vZGV8c3RyaW5nfERvY3VtZW50RnJhZ21lbnR9IFtvcHRpb25zLmNvbnRlbnRdIFRoZSBjb250ZW50IG9mIHRoZSBtb2RhbC4gQ2FuIGFsc28gYmUgc2V0IHVzaW5nIHNldENvbnRlbnQoKSBvbiB0aGUgaW5zdGFudGlhdGlvbi5cclxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR8Tm9kZXxzdHJpbmd9IFtvcHRpb25zLnRpdGxlXSBUaGUgdGl0bGUgb2YgdGhlIG1vZGFsLiBDYW4gYWxzbyBiZSBzZXQgdXNpbmcgc2V0VGl0bGUoKSBvbiB0aGUgaW5zdGFudGlhdGlvbi5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ibG9ja0NsYXNzPVwibW9kYWxcIl0gVGhpcyBpcyB0aGUgYmxvY2staWRlbnRpZmllciBjbGFzcyAodGhlIFwiQlwiIGluIFwiQkVNXCIpXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubW9kaWZpZXJDbGFzcz1cIlwiXSBBbGwgY3JlYXRlZCBET00gbm9kZXMgd2lsbCByZWNlaXZlIHRoaXMgbW9kaWZpZXIgY2xhc3MgKHRoZSBcIk1cIiBpbiBcIkJFTVwiKVxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmNsb3NlTGFiZWw9XCJDbG9zZVwiXSBUaGUgbGFiZWwgZm9yIHRoZSBcIkNsb3NlXCItYnV0dG9uLlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5hdXRvU2hvdz10cnVlXSBXaGV0aGVyIG9yIG5vdCB0byBzaG93IHRoZSBtb2RhbCB1cG9uIGNyZWF0aW9uIChpZiBkaXNhYmxlZCwgeW91J2xsIG5lZWQgdG8gcnVuIHNob3coKSBhdCBzb21lIHBvaW50KS5cclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuY2xvc2FibGU9dHJ1ZV0gV2hldGhlciBvciBub3QgdGhpcyBtb2RhbCBjYW4gYmUgY2xvc2VkIGJ5IHRoZSB1c2VyIChpZiBub3QsIHlvdSBuZWVkIHRvIGRvIGl0IHByb2dyYW1tYXRpY2FsbHkpLlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5kZXN0cm95T25Fc2NhcGU9dHJ1ZV0gSWYgYGNsb3NhYmxlYCBpcyB0cnVlLCBoaXR0aW5nIEVTQyAoeW91IGtub3csIHRoZSBFc2NhcGUta2V5KSB3aWxsIGhpZGUgYW5kIGRlc3Ryb3kgdGhlIG1vZGFsLlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5zZXRTY3JvbGxMb2NrPXRydWVdIFdoZXRoZXIgb3Igbm90IHRvIGVuYWJsZS9kaXNhYmxlIGEgc2Nyb2xsIGxvY2sgd2hpbGUgdGhlIG1vZGFsIGlzIG9wZW4uIElmIHNjcm9sbCBsb2NrIGlzIGFscmVhZHkgYWN0aXZhdGVkLCB0aGlzIGRlZmF1bHRzIHRvIGZhbHNlLlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy51c2VUcmFuc2l0aW9ucz10cnVlXSBJZiB0cnVlLCB0aGUgc2NyaXB0IHdpbGwgbGlzdGVuIGZvciB0cmFuc2l0aW9ucyB0byBmaWd1cmUgb3V0IHdoZW4gdGhlIG1vZGFsIGlzIHNob3duIG9yIGhpZGRlbi4gSWYgZGlzYWJsZWQsIHRoZXNlIGxpc3RlbmVycyBhcmUgbm90IHNldCwgYW5kIGV2ZW50cyBmaXJlIGltbWVkaWF0ZWx5LlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5hdXRvRm9jdXM9dHJ1ZV0gSWYgdHJ1ZSwgdGhlIG1vZGFsIHdpbGwgZmluZCB0aGUgZmlyc3QgaW50ZXJhY3RpdmUgZWxlbWVudCBpbnNpZGUgaXRzZWxmIGFuZCBmb2N1cyBvbiBpdCBvbmNlIGl0J3Mgb3BlbmVkLiBJZiB5b3UgZGlzYWJsZSB0aGlzLCB5b3UgbmVlZCB0byBkbyB0aGlzIG1hbnVhbGx5LlxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbnxmdW5jdGlvbltdfSBbb3B0aW9ucy5iZWZvcmVTaG93PVtdXSBPcHRpb25hbCBjYWxsYmFjayhzKSB0byBmaXJlIGJlZm9yZSB0aGUgbW9kYWwgaXMgc2hvd24uIFNpbmdsZSBmdW5jdGlvbiBvciBhcnJheSBvZiBmdW5jdGlvbnMuXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufGZ1bmN0aW9uW119IFtvcHRpb25zLmFmdGVyU2hvdz1bXV0gT3B0aW9uYWwgY2FsbGJhY2socykgdG8gZmlyZSBhZnRlciB0aGUgbW9kYWwgaXMgc2hvd24uIFNpbmdsZSBmdW5jdGlvbiBvciBhcnJheSBvZiBmdW5jdGlvbnMuXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufGZ1bmN0aW9uW119IFtvcHRpb25zLmJlZm9yZUhpZGU9W11dIE9wdGlvbmFsIGNhbGxiYWNrKHMpIHRvIGZpcmUgYmVmb3JlIHRoZSBtb2RhbCBpcyBkZXN0cm95ZWQuIFNpbmdsZSBmdW5jdGlvbiBvciBhcnJheSBvZiBmdW5jdGlvbnMuXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufGZ1bmN0aW9uW119IFtvcHRpb25zLmFmdGVySGlkZT1bXV0gT3B0aW9uYWwgY2FsbGJhY2socykgdG8gZmlyZSBhZnRlciB0aGUgbW9kYWwgaXMgZGVzdHJveWVkLiBTaW5nbGUgZnVuY3Rpb24gb3IgYXJyYXkgb2YgZnVuY3Rpb25zLlxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbnxmdW5jdGlvbltdfSBbb3B0aW9ucy5iZWZvcmVEZXN0cnVjdD1bXV0gT3B0aW9uYWwgY2FsbGJhY2socykgdG8gZmlyZSBqdXN0IGJlZm9yZSB0aGUgbW9kYWwgaXMgZGVzdHJveWVkLiBTaW5nbGUgZnVuY3Rpb24gb3IgYXJyYXkgb2YgZnVuY3Rpb25zLlxyXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudHxIVE1MQm9keUVsZW1lbnR8RWxlbWVudH0gW29wdGlvbnMucGFyZW50Tm9kZT1kb2N1bWVudC5ib2R5XSBXaGVyZSB0byBwdXQgdGhlIGdlbmVyYXRlZCBET00tbm9kZXMuIFdpbGwgZGVmYXVsdCB0byB0aGUgZG9jdW1lbnQgYm9keSBpZiBub3Qgc2V0LlxyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlIDxjYXB0aW9uPkJhc2ljIHVzYWdlOjwvY2FwdGlvbj5cclxuICAgICAqIGltcG9ydCB7IE1vZGFsIH0gZnJvbSBcIi4vdXRpbHMvaW50ZXJhY3Rpb24vbW9kYWxcIjtcclxuICAgICAqXHJcbiAgICAgKiBjb25zdCBuZXdNb2RhbCA9IG5ldyBNb2RhbCgpO1xyXG4gICAgICogbmV3TW9kYWxcclxuICAgICAqICAgICAuc2V0Q29udGVudChcIjxwPkRlbW8tZGF0YTwvcD5cIilcclxuICAgICAqICAgICAuc2V0VGl0bGUoXCJEZW1vLXRpdGxlXCIpO1xyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcclxuICAgICAgICB0aGlzLmRvbSA9IHt9O1xyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb24gPSB7XHJcbiAgICAgICAgICAgIGJsb2NrQ2xhc3M6IG9wdGlvbnMuYmxvY2tDbGFzcyB8fCBcIm1vZGFsXCIsXHJcbiAgICAgICAgICAgIG1vZGlmaWVyQ2xhc3M6IG9wdGlvbnMubW9kaWZpZXJDbGFzcyB8fCBcIlwiLFxyXG5cclxuICAgICAgICAgICAgYXV0b1Nob3c6IHR5cGVvZiBvcHRpb25zLmF1dG9TaG93ID09PSBcImJvb2xlYW5cIiA/IG9wdGlvbnMuYXV0b1Nob3cgOiB0cnVlLFxyXG4gICAgICAgICAgICBjbG9zYWJsZTogdHlwZW9mIG9wdGlvbnMuY2xvc2FibGUgPT09IFwiYm9vbGVhblwiID8gb3B0aW9ucy5jbG9zYWJsZSA6IHRydWUsXHJcbiAgICAgICAgICAgIGRlc3Ryb3lPbkVzY2FwZTogdHlwZW9mIG9wdGlvbnMuZGVzdHJveU9uRXNjYXBlID09PSBcImJvb2xlYW5cIiA/IG9wdGlvbnMuZGVzdHJveU9uRXNjYXBlIDogdHJ1ZSxcclxuICAgICAgICAgICAgYXV0b0ZvY3VzOiB0eXBlb2Ygb3B0aW9ucy5hdXRvRm9jdXMgPT09IFwiYm9vbGVhblwiID8gb3B0aW9ucy5hdXRvRm9jdXMgOiB0cnVlLFxyXG5cclxuICAgICAgICAgICAgc2V0U2Nyb2xsTG9jazogdHlwZW9mIG9wdGlvbnMuc2V0U2Nyb2xsTG9jayA9PT0gXCJib29sZWFuXCIgPyBvcHRpb25zLnNldFNjcm9sbExvY2sgOiAhaXNTY3JvbGxMb2NrZWQsXHJcblxyXG4gICAgICAgICAgICB1c2VUcmFuc2l0aW9uczogdHlwZW9mIG9wdGlvbnMudXNlVHJhbnNpdGlvbnMgPT09IFwiYm9vbGVhblwiID8gb3B0aW9ucy51c2VUcmFuc2l0aW9ucyA6IHRyYW5zaXRpb25FbmRFdmVudE5hbWUubGVuZ3RoID4gMCxcclxuXHJcbiAgICAgICAgICAgIGNsb3NlTGFiZWw6IHR5cGVvZiBvcHRpb25zLmNsb3NlTGFiZWwgPT09IFwic3RyaW5nXCIgPyBvcHRpb25zLmNsb3NlTGFiZWwgOiBcIkNsb3NlXCIsXHJcblxyXG4gICAgICAgICAgICAvLyBDYWxsYmFja3MsIG1hbiFcclxuICAgICAgICAgICAgYmVmb3JlU2hvdzogdGhpcy5zYW5pdGl6ZUNhbGxiYWNrcyhvcHRpb25zLmJlZm9yZVNob3cpLFxyXG4gICAgICAgICAgICBhZnRlclNob3c6IHRoaXMuc2FuaXRpemVDYWxsYmFja3Mob3B0aW9ucy5hZnRlclNob3cpLFxyXG4gICAgICAgICAgICBiZWZvcmVIaWRlOiB0aGlzLnNhbml0aXplQ2FsbGJhY2tzKG9wdGlvbnMuYmVmb3JlSGlkZSksXHJcbiAgICAgICAgICAgIGFmdGVySGlkZTogdGhpcy5zYW5pdGl6ZUNhbGxiYWNrcyhvcHRpb25zLmFmdGVySGlkZSksXHJcbiAgICAgICAgICAgIGJlZm9yZURlc3RydWN0OiB0aGlzLnNhbml0aXplQ2FsbGJhY2tzKG9wdGlvbnMuYmVmb3JlRGVzdHJ1Y3QpLFxyXG5cclxuICAgICAgICAgICAgLy8gVGhlIHBhcmVudCBub2RlIGlzIG5lYXQhIFRoaXMgaXMgd2hlcmUgd2UnbGwgcHV0IGFsbCBvdXIgc3R1ZmYhXHJcbiAgICAgICAgICAgIHBhcmVudE5vZGU6IG9wdGlvbnMucGFyZW50Tm9kZSB8fCBkb2N1bWVudC5ib2R5LFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuYnVpbGRET01Ob2RlcygpO1xyXG5cclxuICAgICAgICAvLyBMb2FkIHRpdGxlIGlmIHNldCB0aHJvdWdoIHRoZSBvcHRpb25zLlxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy50aXRsZSAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICB0aGlzLnNldFRpdGxlKG9wdGlvbnMudGl0bGUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gTG9hZCBjb250ZW50IGlmIHNldCB0aHJvdWdoIHRoZSBvcHRpb25zLlxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5jb250ZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0Q29udGVudChvcHRpb25zLmNvbnRlbnQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlndXJhdGlvbi5hdXRvU2hvdykge1xyXG4gICAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB0aGlzLnNob3coKSwgMTAwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG1vZGFsQ291bnQgKz0gMTtcclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIEJ1aWxkIHRoZSBcIkJFXCItcGFydCBvZiBhIEJFTS1vYmplY3QgY2xhc3MgbmFtZS5cclxuICAgICAqXHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVsZW1lbnRJZGVudGlmaWVyXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gICAgICovXHJcbiAgICBidWlsZEJhc2VDbGFzcyhlbGVtZW50SWRlbnRpZmllcikge1xyXG4gICAgICAgIHJldHVybiBgJHt0aGlzLmNvbmZpZ3VyYXRpb24uYmxvY2tDbGFzc31fXyR7ZWxlbWVudElkZW50aWZpZXJ9YDtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQnVpbGQgYSBzdHJpbmcgY29udGFpbmluZyBhbGwgcmVsZXZhbnQgY2xhc3MgbmFtZXMgZm9yIHRoZSBnaXZlbiBlbGVtZW50IHR5cGUuXHJcbiAgICAgKlxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlbGVtZW50SWRlbnRpZmllciAtIFRoaXMgd2lsbCBiZWNvbWUgdGhlIFwiRVwiIGluIHRoZSBCRU0tbmFtaW5nIC0gaW4gb3RoZXIgd29yZHMsIHRoZSBlbGVtZW50IG5hbWUuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW21vZGlmaWVyPVwiXCJdIC0gT3B0aW9uYWwgbW9kaWZpZXIgY2xhc3MsIHRoYXQgd2lsbCBiZSBhZGRlZCBpbiBhZGRpdGlvbiB0byB0aGUgbW9kaWZpZXJDbGFzcyBmcm9tIHRoZSBjb25maWd1cmF0aW9uLlxyXG4gICAgICogQHJldHVybnMge3N0cmluZ31cclxuICAgICAqL1xyXG4gICAgYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGVsZW1lbnRJZGVudGlmaWVyLCBtb2RpZmllcikge1xyXG5cclxuICAgICAgICBjb25zdCBiYXNlQ2xhc3MgPSB0aGlzLmJ1aWxkQmFzZUNsYXNzKGVsZW1lbnRJZGVudGlmaWVyKTtcclxuICAgICAgICBsZXQgY2xhc3NOYW1lID0gYmFzZUNsYXNzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG1vZGlmaWVyID09PSBcInN0cmluZ1wiICYmIG1vZGlmaWVyLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgY2xhc3NOYW1lICs9IGAgJHtiYXNlQ2xhc3N9LS0ke21vZGlmaWVyfWA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIHRoaXMuY29uZmlndXJhdGlvbi5tb2RpZmllckNsYXNzID09PSBcInN0cmluZ1wiICYmIHRoaXMuY29uZmlndXJhdGlvbi5tb2RpZmllckNsYXNzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgY2xhc3NOYW1lICs9IGAgJHtiYXNlQ2xhc3N9LS0ke3RoaXMuY29uZmlndXJhdGlvbi5tb2RpZmllckNsYXNzfWA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY2xhc3NOYW1lO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFbnN1cmUgdGhhdCB0aGUgY2FsbGJhY2sgbGlzdHMgYXJlIHBvcHVsYXRlZCB3aXRoIG5vdGhpbmcgYnV0IGFycmF5cy5cclxuICAgICAqXHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbnxmdW5jdGlvbltdfSBjYWxsYmFja0xpc3RcclxuICAgICAqIEByZXR1cm5zIHtBcnJheX1cclxuICAgICAqL1xyXG4gICAgc2FuaXRpemVDYWxsYmFja3MoY2FsbGJhY2tMaXN0KSB7XHJcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrTGlzdCBpbnN0YW5jZW9mIEFycmF5ID8gY2FsbGJhY2tMaXN0IDogdHlwZW9mIGNhbGxiYWNrTGlzdCA9PT0gXCJmdW5jdGlvblwiID8gW2NhbGxiYWNrTGlzdF0gOiBbXTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQnVpbGQgYWxsIHRoZSBET00gbm9kZXMgZm9yIHRoaXMgcGFydGljdWxhciBpbnN0YW5jZS5cclxuICAgICAqXHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICogQHJldHVybnMge01vZGFsfSBUaGUgbW9kYWwgb2JqZWN0LCBmb3IgZnVuY3Rpb24gY2hhaW5pbmcuXHJcbiAgICAgKi9cclxuICAgIGJ1aWxkRE9NTm9kZXMoKSB7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNvbmZpZ3VyYXRpb24ucGFyZW50Tm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20ucGFyZW50Tm9kZSA9IHRoaXMuY29uZmlndXJhdGlvbi5wYXJlbnROb2RlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IGBNb2RhbCBpbnN0YW50aWF0aW9uIGZhaWxlZDogJ3BhcmVudE5vZGUnIG11c3QgYmUgYW4gRWxlbWVudCFgO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gRmlyc3Qgd2UnbGwgY3JlYXRlIHRoZSBiYWNrZ3JvdW5kIGFuZCBvdXRlciB3cmFwcGVyIGFzIFwicmVhbFwiIERPTSBlbGVtZW50cyxcclxuICAgICAgICAvLyBzaW5jZSB0aGF0J2xsIG1ha2UgaXQgZWFzaWVyIHRvIHJlZmVyZW5jZSB0aGVtIGxhdGVyLlxyXG4gICAgICAgIGNvbnN0IGxldmVsTmFtZSA9IGBsZXZlbCR7bW9kYWxDb3VudH1gO1xyXG4gICAgICAgIHRoaXMuZG9tLmJhY2tncm91bmQgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLmJhY2tncm91bmQsIGxldmVsTmFtZSkgfSk7XHJcbiAgICAgICAgdGhpcy5kb20ud3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIsIHsgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLndyYXBwZXIsIGxldmVsTmFtZSkgfSk7XHJcbiAgICAgICAgYXBwZW5kRWxlbWVudChbdGhpcy5kb20uYmFja2dyb3VuZCwgdGhpcy5kb20ud3JhcHBlcl0sIHRoaXMuZG9tLnBhcmVudE5vZGUpO1xyXG5cclxuXHJcbiAgICAgICAgLy8gQnVpbGQgdGhlIGhlYWRlclxyXG4gICAgICAgIHRoaXMuZG9tLmhlYWRlciA9IGNyZWF0ZUVsZW1lbnQoXCJoZWFkZXJcIiwgeyBjbGFzc05hbWU6IHRoaXMuYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGNsYXNzTmFtZXMuaGVhZGVyKSB9KTtcclxuXHJcbiAgICAgICAgLy8gQnVpbGQgdGhlIGNsb3NlLWJ1dHRvbiwgaWYgbmVlZCBiZS5cclxuICAgICAgICBpZiAodGhpcy5jb25maWd1cmF0aW9uLmNsb3NhYmxlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG9tLmNsb3NlQnV0dG9uID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLmNsb3NlQnV0dG9uKSxcclxuICAgICAgICAgICAgICAgIC8vIFRoZSBcImNsb3NlLWljb25cIiBzcGFucyBhcmUgbm90IHZlcnkgaW1wb3J0YW50IHRvIHVzLCBzbyB3ZSdsbCBqdXN0IGFkZCB0aGVtIGFzIHN0cmluZ3MuXHJcbiAgICAgICAgICAgICAgICBodG1sOiBgPHNwYW4gY2xhc3M9XCIke3RoaXMuYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGNsYXNzTmFtZXMuY2xvc2VJY29uLCBcIjFcIil9XCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiJHt0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLmNsb3NlSWNvbiwgXCIyXCIpfVwiPjwvc3Bhbj5gLFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB0aGUgcG9wdXAgY2xvc2VzIHdoZW4gZWl0aGVyIHRoZSBiYWNrZ3JvdW5kIG9yIGNsb3NlLWJ1dHRvbiBpcyBjbGlja2VkLlxyXG4gICAgICAgICAgICBhZGRFdmVudCh0aGlzLmRvbS5jbG9zZUJ1dHRvbiwgXCJjbGlja1wiLCAoKSA9PiB0aGlzLmRlc3Ryb3koKSk7XHJcbiAgICAgICAgICAgIGFkZEV2ZW50KHRoaXMuZG9tLmJhY2tncm91bmQsIFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5kZXN0cm95KCkpO1xyXG5cclxuICAgICAgICAgICAgLy8gVGhlIGNsb3NlLWxhYmVsIGlzLi4uIG5lYXQuXHJcbiAgICAgICAgICAgIHRoaXMuZG9tLmNsb3NlTGFiZWwgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IHRoaXMuYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGNsYXNzTmFtZXMuY2xvc2VMYWJlbCksXHJcbiAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy5jb25maWd1cmF0aW9uLmNsb3NlTGFiZWwsXHJcbiAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLmNvbmZpZ3VyYXRpb24uY2xvc2VMYWJlbCxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGFwcGVuZEVsZW1lbnQodGhpcy5kb20uY2xvc2VMYWJlbCwgdGhpcy5kb20uY2xvc2VCdXR0b24pO1xyXG4gICAgICAgICAgICBhcHBlbmRFbGVtZW50KHRoaXMuZG9tLmNsb3NlQnV0dG9uLCB0aGlzLmRvbS5oZWFkZXIpO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIC8vIENyZWF0ZSBhbmQgYWRkIHRoZSB0aXRsZSB3cmFwcGVyIHRvIHRoZSBoZWFkZXJcclxuICAgICAgICB0aGlzLmRvbS50aXRsZVdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLnRpdGxlV3JhcHBlcikgfSk7XHJcbiAgICAgICAgYXBwZW5kRWxlbWVudCh0aGlzLmRvbS50aXRsZVdyYXBwZXIsIHRoaXMuZG9tLmhlYWRlcik7XHJcblxyXG5cclxuICAgICAgICAvLyBDcmVhdGUgdGhlIGNvbnRlbnQgd3JhcHBlci5cclxuICAgICAgICB0aGlzLmRvbS5jb250ZW50V3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHRoaXMuYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGNsYXNzTmFtZXMuY29udGVudCkgfSk7XHJcblxyXG5cclxuICAgICAgICAvLyBDcmVhdGUgYW5kIGluc2VydCB0aGUgaW5uZXIgd3JhcHBlciwgd2hpY2ggaG9sZHMgdGhlIGNvbnRlbnQgd3JhcHBlciBhbmQgdGhlIGhlYWRlci5cclxuICAgICAgICB0aGlzLmRvbS5pbm5lcldyYXBwZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcclxuICAgICAgICAgICAgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ29tcGxldGVDbGFzc1N0cmluZyhjbGFzc05hbWVzLmlubmVyV3JhcHBlciksXHJcbiAgICAgICAgICAgIGh0bWw6IFtcclxuICAgICAgICAgICAgICAgIHRoaXMuZG9tLmhlYWRlcixcclxuICAgICAgICAgICAgICAgIHRoaXMuZG9tLmNvbnRlbnRXcmFwcGVyLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBhcHBlbmRFbGVtZW50KHRoaXMuZG9tLmlubmVyV3JhcHBlciwgdGhpcy5kb20ud3JhcHBlcik7XHJcblxyXG5cclxuICAgICAgICAvLyBBZnRlciBhICh2ZXJ5KSBzaG9ydCB0aW1lb3V0LCBhZGQgdGhlIFwicmVhZHlcIi1jbGFzcyB0byB0aGUgbWFpbiBlbGVtZW50cyBzbyB3ZSBjYW4gZ2V0IHRyYW5zaXRpb25zIHJlYWR5LlxyXG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgYWRkQ2xhc3ModGhpcy5kb20uYmFja2dyb3VuZCwgdGhpcy5idWlsZENvbXBsZXRlQ2xhc3NTdHJpbmcoY2xhc3NOYW1lcy5iYWNrZ3JvdW5kLCByZWFkeUNsYXNzTW9kaWZpZXIpKTtcclxuICAgICAgICAgICAgYWRkQ2xhc3ModGhpcy5kb20ud3JhcHBlciwgdGhpcy5idWlsZENvbXBsZXRlQ2xhc3NTdHJpbmcoY2xhc3NOYW1lcy53cmFwcGVyLCByZWFkeUNsYXNzTW9kaWZpZXIpKTtcclxuICAgICAgICB9LCA2MCk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGaXJlIGFsbCBjYWxsYmFja3MgcmVnaXN0ZXJlZCB3aXRoIHRoZSBuYW1lZCB0eXBlIChpZS4gXCJiZWZvcmVEZXN0cnVjdFwiKSBvciBzaW1pbGFyLlxyXG4gICAgICpcclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2FsbGJhY2tUeXBlXHJcbiAgICAgKiBAcmV0dXJucyB7TW9kYWx9IFRoZSBtb2RhbCBvYmplY3QsIGZvciBmdW5jdGlvbiBjaGFpbmluZy5cclxuICAgICAqL1xyXG4gICAgZmlyZUNhbGxiYWNrcyhjYWxsYmFja1R5cGUpIHtcclxuICAgICAgICBpZiAodGhpcyAmJiB0aGlzLmNvbmZpZ3VyYXRpb24pIHtcclxuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tBcnJheSA9IHRoaXMuY29uZmlndXJhdGlvbltjYWxsYmFja1R5cGVdO1xyXG4gICAgICAgICAgICBpZiAoaXNBcnJheShjYWxsYmFja0FycmF5KSAmJiBjYWxsYmFja0FycmF5Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tBcnJheS5mb3JFYWNoKGZ1bmNSZWYgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGZ1bmNSZWYuY2FsbCh0aGlzKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgYmVmb3JlU2hvdyAgICAgPSAoKSA9PiB0aGlzLmZpcmVDYWxsYmFja3MoXCJiZWZvcmVTaG93XCIpO1xyXG4gICAgYWZ0ZXJTaG93ICAgICAgPSAoKSA9PiB0aGlzLmZpcmVDYWxsYmFja3MoXCJhZnRlclNob3dcIik7XHJcbiAgICBiZWZvcmVIaWRlICAgICA9ICgpID0+IHRoaXMuZmlyZUNhbGxiYWNrcyhcImJlZm9yZUhpZGVcIik7XHJcbiAgICBhZnRlckhpZGUgICAgICA9ICgpID0+IHRoaXMuZmlyZUNhbGxiYWNrcyhcImFmdGVySGlkZVwiKTtcclxuICAgIGJlZm9yZURlc3RydWN0ID0gKCkgPT4gdGhpcy5maXJlQ2FsbGJhY2tzKFwiYmVmb3JlRGVzdHJ1Y3RcIik7XHJcblxyXG4gICAgb25Cb2R5S2V5cHJlc3MgPSBlID0+IHtcclxuICAgICAgICBpZiAoZS53aGljaCA9PT0gMjcpIHtcclxuICAgICAgICAgICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2hvdyB0aGUgbW9kYWwuXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge01vZGFsfSBUaGUgbW9kYWwgb2JqZWN0LCBmb3IgZnVuY3Rpb24gY2hhaW5pbmcuXHJcbiAgICAgKi9cclxuICAgIHNob3coKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlndXJhdGlvbi5zZXRTY3JvbGxMb2NrKSB7XHJcbiAgICAgICAgICAgIC8vIFNjcm9sbCBsb2NrcyBhcmUgbmljZS4gTGV0J3MgZG8gc29tZSBvZiB0aGF0LlxyXG4gICAgICAgICAgICBlbmFibGVTY3JvbGxMb2NrKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJlZm9yZVNob3coKTtcclxuICAgICAgICBpZiAodGhpcy5jb25maWd1cmF0aW9uLnVzZVRyYW5zaXRpb25zKSB7XHJcbiAgICAgICAgICAgIGFkZEV2ZW50T25jZSh0aGlzLmRvbS53cmFwcGVyLCB0cmFuc2l0aW9uRW5kRXZlbnROYW1lLCAoKSA9PiB0aGlzLmFmdGVyU2hvdygpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGFkZENsYXNzKHRoaXMuZG9tLmJhY2tncm91bmQsIGAke3RoaXMuYnVpbGRCYXNlQ2xhc3MoY2xhc3NOYW1lcy5iYWNrZ3JvdW5kKX0tLSR7YWN0aXZlQ2xhc3NNb2RpZmllcn1gKTtcclxuICAgICAgICBhZGRDbGFzcyh0aGlzLmRvbS53cmFwcGVyLCBgJHt0aGlzLmJ1aWxkQmFzZUNsYXNzKGNsYXNzTmFtZXMud3JhcHBlcil9LS0ke2FjdGl2ZUNsYXNzTW9kaWZpZXJ9YCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNvbmZpZ3VyYXRpb24uYXV0b0ZvY3VzKSB7XHJcbiAgICAgICAgICAgIC8vIE1vdmUgZm9jdXMgdG8gdGhlIGZpcnN0IGludGVyYWN0aXZlIGVsZW1lbnQgaW5zaWRlIHRoZSB3cmFwcGVyLlxyXG4gICAgICAgICAgICAvLyBJZiB5b3Ugd2FudCB0byBmb2N1cyBvbiBzb21ldGhpbmcgZWxzZSBpbnNpZGUgaXQsIHVzZSB0aGUgXCJhZnRlclNob3dcIiBjYWxsYmFjay5cclxuICAgICAgICAgICAgY29uc3QgZmlyc3RJbnRlcmFjdGl2ZUVsZW1lbnQgPSBnZXRGaXJzdEludGVyYWN0aXZlRWxlbWVudEluQ29udGFpbmVyKHRoaXMuZG9tLmNvbnRlbnRXcmFwcGVyKSB8fCBnZXRGaXJzdEludGVyYWN0aXZlRWxlbWVudEluQ29udGFpbmVyKHRoaXMuZG9tLndyYXBwZXIpO1xyXG4gICAgICAgICAgICBpZiAoZmlyc3RJbnRlcmFjdGl2ZUVsZW1lbnQgJiYgZmlyc3RJbnRlcmFjdGl2ZUVsZW1lbnQuZm9jdXMpIHtcclxuICAgICAgICAgICAgICAgIGZpcnN0SW50ZXJhY3RpdmVFbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBUaGlzIHByb2JhYmx5IHdvbid0IGV2ZW4gd29yaywgYnV0IHdlIG5lZWQgdG8gdHJ5IGlmIHRoZXJlIGFic29sdXRlbHkgaXNuJ3QgYW55dGhpbmcgaW5zaWRlIHRoZSBtb2RhbFxyXG4gICAgICAgICAgICAgICAgLy8gdG8gZ3JhYiBvbnRvLlxyXG4gICAgICAgICAgICAgICAgdGhpcy5kb20ud3JhcHBlci5mb2N1cygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMuY29uZmlndXJhdGlvbi51c2VUcmFuc2l0aW9ucykge1xyXG4gICAgICAgICAgICB0aGlzLmFmdGVyU2hvdygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlndXJhdGlvbi5jbG9zYWJsZSAmJiB0aGlzLmNvbmZpZ3VyYXRpb24uZGVzdHJveU9uRXNjYXBlKSB7XHJcbiAgICAgICAgICAgIGFkZEV2ZW50KGRvY3VtZW50LmJvZHksIFwia2V5dXBcIiwgdGhpcy5vbkJvZHlLZXlwcmVzcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGlkZSB0aGUgbW9kYWwuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbYXZvaWRFdmVudHM9ZmFsc2VdIC0gSWYgdHJ1ZSwgdGhlIFwiYWZ0ZXJIaWRlKClcIiBmdW5jdGlvbnMgd2lsbCBOT1QgYmUgZmlyZWQgb25jZSB0aGUgbW9kYWwgaXMgaGlkZGVuLlxyXG4gICAgICogQHJldHVybnMge01vZGFsfSBUaGUgbW9kYWwgb2JqZWN0LCBmb3IgZnVuY3Rpb24gY2hhaW5pbmcuXHJcbiAgICAgKi9cclxuICAgIGhpZGUoYXZvaWRFdmVudHMgPSBmYWxzZSkge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbmZpZ3VyYXRpb24uc2V0U2Nyb2xsTG9jaykge1xyXG4gICAgICAgICAgICAvLyBEaXNhYmxlIHNjcm9sbCBsb2NrXHJcbiAgICAgICAgICAgIGRpc2FibGVTY3JvbGxMb2NrKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJlZm9yZUhpZGUoKTtcclxuXHJcbiAgICAgICAgaWYgKGF2b2lkRXZlbnRzICE9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZ3VyYXRpb24udXNlVHJhbnNpdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgIGFkZEV2ZW50T25jZSh0aGlzLmRvbS53cmFwcGVyLCB0cmFuc2l0aW9uRW5kRXZlbnROYW1lLCAoKSA9PiB0aGlzLmFmdGVySGlkZSgpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWZ0ZXJIaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmVtb3ZlQ2xhc3ModGhpcy5kb20uYmFja2dyb3VuZCwgYCR7dGhpcy5idWlsZEJhc2VDbGFzcyhjbGFzc05hbWVzLmJhY2tncm91bmQpfS0tJHthY3RpdmVDbGFzc01vZGlmaWVyfWApO1xyXG4gICAgICAgIHJlbW92ZUNsYXNzKHRoaXMuZG9tLndyYXBwZXIsIGAke3RoaXMuYnVpbGRCYXNlQ2xhc3MoY2xhc3NOYW1lcy53cmFwcGVyKX0tLSR7YWN0aXZlQ2xhc3NNb2RpZmllcn1gKTtcclxuICAgICAgICByZW1vdmVFdmVudChkb2N1bWVudC5ib2R5LCBcImtleXVwXCIsIHRoaXMub25Cb2R5S2V5cHJlc3MpO1xyXG5cclxuICAgICAgICBpZiAoYXZvaWRFdmVudHMgIT09IHRydWUgJiYgIXRoaXMuY29uZmlndXJhdGlvbi51c2VUcmFuc2l0aW9ucykge1xyXG4gICAgICAgICAgICB0aGlzLmFmdGVySGlkZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIENsZWFyIHRoZSBjb250ZW50IGFyZWEgY29tcGxldGVseS5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7TW9kYWx9IFRoZSBtb2RhbCBvYmplY3QsIGZvciBmdW5jdGlvbiBjaGFpbmluZy5cclxuICAgICAqL1xyXG4gICAgY2xlYXJDb250ZW50KCkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5kb20gPT09IFwib2JqZWN0XCIgJiYgdGhpcy5kb20uY29udGVudFdyYXBwZXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgICAgICBlbXB0eUVsZW1lbnQodGhpcy5kb20uY29udGVudFdyYXBwZXIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWQgY29udGVudCBpbnRvIHRoZSBtb2RhbCBjb250YWluZXIuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudHxOb2RlfHN0cmluZ3xEb2N1bWVudEZyYWdtZW50fSBjb250ZW50XHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtjbGVhckZpcnN0PXRydWVdIC0gU2hvdWxkIHRoZSBjb250ZW50cyBiZSBjbGVhcmVkIG91dCBmaXJzdD9cclxuICAgICAqIEByZXR1cm5zIHtNb2RhbH0gVGhlIG1vZGFsIG9iamVjdCwgZm9yIGZ1bmN0aW9uIGNoYWluaW5nLlxyXG4gICAgICovXHJcbiAgICBzZXRDb250ZW50KGNvbnRlbnQsIGNsZWFyRmlyc3QgPSB0cnVlKSB7XHJcblxyXG4gICAgICAgIGlmIChjbGVhckZpcnN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xlYXJDb250ZW50KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhcHBlbmRFbGVtZW50KGNvbnRlbnQsIHRoaXMuZG9tLmNvbnRlbnRXcmFwcGVyKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBbiBlYXN5IHdheSBvZiBnZXR0aW5nIHRoZSBjb250ZW50IHdyYXBwZXIsIGluIGNhc2UgeW91IG5lZWQgaXQgZnJvbSB0aGUgb3V0c2lkZSBmb3IgZnVydGhlciBwcm9jZXNzaW5nLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHtIVE1MRWxlbWVudH0gVGhlIEhUTUwgZWxlbWVudCBjb250YWluaW5nIHRoZSBjb250ZW50LlxyXG4gICAgICovXHJcbiAgICBnZXRDb250ZW50V3JhcHBlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kb20uY29udGVudFdyYXBwZXI7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIHJhdyB0ZXh0IHN0cmluZyB0byB0aGUgY29udGVudCB3cmFwcGVyIGFzIGEgcHJldHR5LCBmb3JtYXR0ZWQgdGl0bGUgb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7RWxlbWVudHxzdHJpbmd9IHRpdGxlIC0gVGhlIHRpdGxlIHRvIGFkZC4gU2hvdWxkIGJlIGVpdGhlciBhbiBgRWxlbWVudGAgb3IgYSBgc3RyaW5nYC5cclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3N0cmluZ0FzSFRNTD1mYWxzZV0gLSBJZiBgdGl0bGVgIGlzIGEgc3RyaW5nLCBhbmQgdGhpcyBhcmd1bWVudCBpcyBgdHJ1ZWAsIHRoZSBjb250ZW50IHdpbGwgYmUgcGFyc2VkIGFzIEhUTUwgYW5kIHRoZW4gaW5qZWN0ZWQuIElmIG5vdCwgdGhlIHRpdGxlIHdpbGwgYmUgYWRkZWQgYXMgcHVyZSB0ZXh0LlxyXG4gICAgICogQHJldHVybnMge01vZGFsfSBUaGUgbW9kYWwgb2JqZWN0LCBmb3IgZnVuY3Rpb24gY2hhaW5pbmcuXHJcbiAgICAgKi9cclxuICAgIHNldFRpdGxlKHRpdGxlLCBzdHJpbmdBc0hUTUwgPSBmYWxzZSkge1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuZG9tLnRpdGxlRWxlbWVudCkge1xyXG4gICAgICAgICAgICB0aGlzLmRvbS50aXRsZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50KFwiaDJcIiwgeyBjbGFzc05hbWU6IHRoaXMuYnVpbGRDb21wbGV0ZUNsYXNzU3RyaW5nKGNsYXNzTmFtZXMudGl0bGUpIH0pO1xyXG4gICAgICAgICAgICBhcHBlbmRFbGVtZW50KHRoaXMuZG9tLnRpdGxlRWxlbWVudCwgdGhpcy5kb20udGl0bGVXcmFwcGVyKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNldCB0aGUgdGl0bGVcclxuICAgICAgICBlbXB0eUVsZW1lbnQodGhpcy5kb20udGl0bGVFbGVtZW50KTtcclxuXHJcbiAgICAgICAgaWYgKHRpdGxlIGluc3RhbmNlb2YgRWxlbWVudCkge1xyXG4gICAgICAgICAgICBhcHBlbmRFbGVtZW50KHRpdGxlLCB0aGlzLmRvbS50aXRsZUVsZW1lbnQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRpdGxlID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIGlmIChzdHJpbmdBc0hUTUwpIHtcclxuICAgICAgICAgICAgICAgIGFwcGVuZEVsZW1lbnQodGl0bGUsIHRoaXMuZG9tLnRpdGxlRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRvbS50aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFuIGVhc3kgd2F5IG9mIGdldHRpbmcgdGhlIHRpdGxlIHdyYXBwZXIsIGJlY2F1c2Ugd2UgY2FyZS5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR9IFRoZSBIVE1MIGVsZW1lbnQgY29udGFpbmluZyB0aGUgdGl0bGUuXHJcbiAgICAgKi9cclxuICAgIGdldFRpdGxlV3JhcHBlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kb20udGl0bGVXcmFwcGVyO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZXN0cm95IHRoZSBtb2RhbC4gVGhpcyB3aWxsIHJlbW92ZSBldmVudCBoYW5kbGVycyBhbmQgcmVtb3ZlIHRoZSBET00gYXMgYmVzdCB3ZSBjYW4uXHJcbiAgICAgKi9cclxuICAgIGRlc3Ryb3koKSB7XHJcblxyXG4gICAgICAgIHRoaXMuYmVmb3JlRGVzdHJ1Y3QoKTtcclxuXHJcbiAgICAgICAgLy8gUmVtb3ZlIGFsbCByZWd1bGFyIGV2ZW50IGxpc3RlbmVycywgYmVjYXVzZSB0aGF0J3MganVzdCBhIG5pY2UgdGhpbmcgdG8gdG8uXHJcbiAgICAgICAgcmVtb3ZlQWxsRXZlbnRzKHRoaXMuZG9tLmNsb3NlQnV0dG9uKTtcclxuICAgICAgICByZW1vdmVBbGxFdmVudHModGhpcy5kb20uYmFja2dyb3VuZCk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENhbGxiYWNrIGZ1bmN0aW9uIGZvciBjbGVhbmluZyB1cCBhZnRlciBvdXJzZWx2ZXMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgYWZ0ZXJIaWRlQ2FsbGJhY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vIEZpcmUgdGhlIFwiYWZ0ZXJIaWRlXCIgY2FsbGJhY2tzIChpZiBhbnkpIG1hbnVhbGx5LCBiZWNhdXNlIHdlJ3ZlIGRpc2FibGVkIHRoZSBldmVudCBsaXN0ZW5lciB0aGF0IHdvdWxkJ3ZlXHJcbiAgICAgICAgICAgIC8vIGRvbmUgdGhpcyBhdXRvbWF0aWNhbGx5LlxyXG4gICAgICAgICAgICB0aGlzLmFmdGVySGlkZSgpO1xyXG5cclxuICAgICAgICAgICAgLy8gUmVtb3ZlIGFsbCBjb250ZW50IG5vZGVzLlxyXG4gICAgICAgICAgICB0aGlzLmNsZWFyQ29udGVudCgpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5kb20pIHtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZUVsZW1lbnQoW3RoaXMuZG9tLmJhY2tncm91bmQsIHRoaXMuZG9tLndyYXBwZXJdKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmRvbTtcclxuICAgICAgICAgICAgZGVsZXRlIHRoaXMuY29uZmlndXJhdGlvbjtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAvLyBTZXQgdXAgYSBjYWxsYmFjayBmdW5jdGlvbiB0byBjbGVhbiB1cCB0aGUgRE9NIG9uY2Ugd2UncmUgZG9uZSBoaWRpbmcgdGhlIG1vZGFsXHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlndXJhdGlvbi51c2VUcmFuc2l0aW9ucykge1xyXG4gICAgICAgICAgICBhZGRFdmVudE9uY2UodGhpcy5kb20ud3JhcHBlciwgdHJhbnNpdGlvbkVuZEV2ZW50TmFtZSwgYWZ0ZXJIaWRlQ2FsbGJhY2spO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5oaWRlKCk7XHJcblxyXG4gICAgICAgIC8vIElmIHdlJ3JlIG5vdCBsaXN0ZW5pbmcgZm9yIHRyYW5zaXRpb25zLCBsZXQncyBqdXN0IGNsZWFyIG91dCBpbW1lZGlhdGVseS5cclxuICAgICAgICBpZiAoIXRoaXMuY29uZmlndXJhdGlvbi51c2VUcmFuc2l0aW9ucykge1xyXG4gICAgICAgICAgICBhZnRlckhpZGVDYWxsYmFjaygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbW9kYWxDb3VudCAtPSAxO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcblxyXG5cclxuLyoqXHJcbiAqIERpc3BsYXkgYSBjb25maXJtLW1lc3NhZ2UgdG8gdGhlIHVzZXIuIFdpbGwgcmV0dXJuIGEgcHJvbWlzZSB0aGF0IGlzIHJlc29sdmVkIG9uIFwiWWVzXCIgYW5kIHJlamVjdGVkIG9uIFwiTm9cIi4gUmVtZW1iZXIgdG8gaW5jbHVkZVxyXG4gKiBhIGhhbmRsZXIgZm9yIF9fYm90aF9fIGNhc2VzLCBvciB5b3VyIGNvZGUgd2lsbCBicmVhayFcclxuICpcclxuICogQHNpbmNlIDMuNi42XHJcbiAqIEBwYXJhbSB7c3RyaW5nfEVsZW1lbnR8RG9jdW1lbnRGcmFnbWVudH0gbWVzc2FnZSAtIFRoZSBtZXNzYWdlIGluc2lkZSB0aGUgYm94LiBJZiBhIGBzdHJpbmdgIGlzIGdpdmVuLCBpdCB3aWxsIGJlIHNldCAqKmFzIGEgdGV4dCBub2RlKiohIElmIHlvdSB3YW50IEhUTUwsIHVzZSBhbiBgRWxlbWVudGAgaW5zdGVhZC5cclxuICogQHBhcmFtIHtzdHJpbmd8RWxlbWVudH0gdGl0bGUgLSBUaGUgdGl0bGUgaW5zaWRlIHRoZSBib3guIElmIGEgYHN0cmluZ2AgaXMgZ2l2ZW4sIGl0IHdpbGwgYmUgc2V0ICoqYXMgYSB0ZXh0IG5vZGUqKiEgSWYgeW91IHdhbnQgSFRNTCwgdXNlIGFuIGBFbGVtZW50YCBpbnN0ZWFkLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gW3llc0xhYmVsPVwiWWVzXCJdIC0gVGhlIFwiWWVzXCIgbGFiZWxcclxuICogQHBhcmFtIHtzdHJpbmd9IFtub0xhYmVsPVwiTm9cIl0gLSBUaGUgXCJOb1wiIGxhYmVsXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBBIHByb21pc2UgdGhhdCBpcyByZXNvbHZlZCBvbiBcIlllc1wiIGFuZCByZWplY3RlZCBvbiBcIk5vXCIuIFJlbWVtYmVyIHRvIGhhbmRsZSBfX2JvdGhfXyBzY2VuYXJpb3MgaW4geW91ciBjb2RlIVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpcm0obWVzc2FnZSwgdGl0bGUsIHllc0xhYmVsID0gXCJZZXNcIiwgbm9MYWJlbCA9IFwiTm9cIikge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChvblllcywgb25ObykgPT4ge1xyXG5cclxuICAgICAgICBsZXQgeWVzV2FzU2VsZWN0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgY29uc3QgY29udGVudCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibW9kYWxfX2NvbnRlbnQtaW5uZXIgdGV4dC1jZW50ZXJcIiB9KTtcclxuICAgICAgICBjb25zdCBjb250ZW50UGFyYWdyYXBoID0gdHlwZW9mIG1lc3NhZ2UgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVFbGVtZW50KFwicFwiLCB7IHRleHQ6IG1lc3NhZ2UgfSkgOiBtZXNzYWdlO1xyXG4gICAgICAgIGNvbnN0IHllc0J1dHRvbiA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzc05hbWU6IFwiYnRuIGJ0bi0tcHJpbWFyeSBidG4tLWFjY2VwdFwiLCB0ZXh0OiB5ZXNMYWJlbCB8fCBcIlwiIH0pO1xyXG4gICAgICAgIGNvbnN0IG5vQnV0dG9uID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7IGNsYXNzTmFtZTogXCJidG4gYnRuLS1zZWNvbmRhcnkgYnRuLS1kZWNsaW5lXCIsIHRleHQ6IG5vTGFiZWwgfHwgXCJcIiB9KTtcclxuICAgICAgICBjb25zdCBidXR0b25XcmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJtb2RhbF9fYnV0dG9uc1wiIH0pO1xyXG5cclxuICAgICAgICAvLyBGaW5hbGl6ZSB0aGUgY29udGVudHMuXHJcbiAgICAgICAgYXBwZW5kRWxlbWVudChbeWVzQnV0dG9uLCBub0J1dHRvbl0sIGJ1dHRvbldyYXBwZXIpO1xyXG4gICAgICAgIGFwcGVuZEVsZW1lbnQoW2NvbnRlbnRQYXJhZ3JhcGgsIGJ1dHRvbldyYXBwZXJdLCBjb250ZW50KTtcclxuXHJcbiAgICAgICAgLy8gU3Bhd24gdGhlIGNvbmZpcm1hdGlvbiBib3guXHJcbiAgICAgICAgY29uc3QgY29uZmlybU1vZGFsID0gbmV3IE1vZGFsKHtcclxuICAgICAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgICAgIGNvbnRlbnQsXHJcbiAgICAgICAgICAgIGJlZm9yZURlc3RydWN0OiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZW1vdmVBbGxFdmVudHMoeWVzQnV0dG9uKTtcclxuICAgICAgICAgICAgICAgIHJlbW92ZUFsbEV2ZW50cyhub0J1dHRvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCF5ZXNXYXNTZWxlY3RlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uTm8oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYWRkQ2xhc3MoY29uZmlybU1vZGFsLmdldFRpdGxlV3JhcHBlcigpLCBcInRleHQtLWNlbnRlclwiKTtcclxuXHJcblxyXG4gICAgICAgIC8vIFNldCBzb21lIGJ1dHRvbiBldmVudHMgZm9yIGxhdGVyLlxyXG4gICAgICAgIGFkZEV2ZW50T25jZSh5ZXNCdXR0b24sIFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICB5ZXNXYXNTZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIG9uWWVzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYWRkRXZlbnRPbmNlKG5vQnV0dG9uLCBcImNsaWNrXCIsICgpID0+IGNvbmZpcm1Nb2RhbC5kZXN0cm95KCkpO1xyXG5cclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5IGFuIGFsZXJ0IGJveCB0byB0aGUgdXNlci4gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyBcIk9LXCIuXHJcbiAqXHJcbiAqIEBzaW5jZSAzLjYuNlxyXG4gKiBAcGFyYW0ge3N0cmluZ3xFbGVtZW50fERvY3VtZW50RnJhZ21lbnR9IG1lc3NhZ2UgLSBUaGUgbWVzc2FnZSBpbnNpZGUgdGhlIGJveC4gSWYgYSBgc3RyaW5nYCBpcyBnaXZlbiwgaXQgd2lsbCBiZSBzZXQgKiphcyBhIHRleHQgbm9kZSoqISBJZiB5b3Ugd2FudCBIVE1MLCB1c2UgYW4gYEVsZW1lbnRgIGluc3RlYWQuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfEVsZW1lbnR9IHRpdGxlIC0gVGhlIHRpdGxlIGluc2lkZSB0aGUgYm94LiBJZiBhIHN0cmluZyBpcyBnaXZlbiwgaXQgd2lsbCBiZSBzZXQgKiphcyBhIHRleHQgbm9kZSoqISBJZiB5b3Ugd2FudCBIVE1MLCB1c2UgYW4gYEVsZW1lbnRgIGluc3RlYWQuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb2tMYWJlbD1cIk9LXCJdIC0gVGhlIE9LIGxhYmVsLlxyXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHVzZXIgY2xpY2tzIFwiT0tcIi5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhbGVydChtZXNzYWdlLCB0aXRsZSwgb2tMYWJlbCA9IFwiT0tcIikge1xyXG5cclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShvbk9LID0+IHtcclxuXHJcbiAgICAgICAgY29uc3QgY29udGVudCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibW9kYWxfX2NvbnRlbnQtaW5uZXIgdGV4dC1jZW50ZXJcIiB9KTtcclxuICAgICAgICBjb25zdCBjb250ZW50UGFyYWdyYXBoID0gdHlwZW9mIG1lc3NhZ2UgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVFbGVtZW50KFwicFwiLCB7IHRleHQ6IG1lc3NhZ2UgfSkgOiBtZXNzYWdlO1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgeyBjbGFzc05hbWU6IFwiYnRuIGJ0bi0tcHJpbWFyeSBidG4tLW9rXCIsIHRleHQ6IG9rTGFiZWwgfHwgXCJcIiB9KTtcclxuICAgICAgICBjb25zdCBidXR0b25XcmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJtb2RhbF9fYnV0dG9uc1wiLCBodG1sOiBidXR0b24gfSk7XHJcblxyXG4gICAgICAgIC8vIEZpbmFsaXplIHRoZSBjb250ZW50cy5cclxuICAgICAgICBhcHBlbmRFbGVtZW50KFtjb250ZW50UGFyYWdyYXBoLCBidXR0b25XcmFwcGVyXSwgY29udGVudCk7XHJcblxyXG4gICAgICAgIC8vIFNwYXduIHRoZSBhbGVydCBib3guXHJcbiAgICAgICAgY29uc3QgYWxlcnRNb2RhbCA9IG5ldyBNb2RhbCh7XHJcbiAgICAgICAgICAgIHRpdGxlLFxyXG4gICAgICAgICAgICBjb250ZW50LFxyXG4gICAgICAgICAgICBiZWZvcmVEZXN0cnVjdDogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlQWxsRXZlbnRzKGJ1dHRvbik7XHJcbiAgICAgICAgICAgICAgICBvbk9LKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGFkZENsYXNzKGFsZXJ0TW9kYWwuZ2V0VGl0bGVXcmFwcGVyKCksIFwidGV4dC0tY2VudGVyXCIpO1xyXG4gICAgICAgIGFkZEV2ZW50T25jZShidXR0b24sIFwiY2xpY2tcIiwgKCkgPT4gYWxlcnRNb2RhbC5kZXN0cm95KCkpO1xyXG5cclxuICAgIH0pO1xyXG5cclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBSUE7Ozs7Ozs7QUFNQTtBQUdBOzs7Ozs7O0FBTUE7QUFHQTs7Ozs7OztBQU1BO0FBSUE7Ozs7Ozs7OztBQVFBO0FBR0E7Ozs7Ozs7Ozs7O0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQWJBO0FBa0JBO0FBQUE7QUFBQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQ0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQTZNQTtBQUFBO0FBQ0E7QUE5TUE7QUE4TUE7QUFBQTtBQUNBO0FBL01BO0FBK01BO0FBQUE7QUFDQTtBQWhOQTtBQWdOQTtBQUFBO0FBQ0E7QUFqTkE7QUFpTkE7QUFBQTtBQUNBO0FBbE5BO0FBb05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF2TkE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUF2QkE7QUEwQkE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFJQTs7Ozs7Ozs7O0FBdEZBO0FBQUE7QUFBQTtBQThGQTtBQUNBO0FBSUE7Ozs7Ozs7OztBQW5HQTtBQUFBO0FBQUE7QUE2R0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7QUE3SEE7QUFBQTtBQUFBO0FBcUlBO0FBQ0E7QUFJQTs7Ozs7OztBQTFJQTtBQUFBO0FBQUE7QUFnSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFPQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBRkE7QUFRQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBSUE7Ozs7Ozs7O0FBM05BO0FBQUE7QUFBQTtBQWtPQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBNU9BO0FBQUE7QUFDQTtBQTZQQTs7Ozs7QUE5UEE7QUFtUUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7Ozs7QUEzU0E7QUFBQTtBQUFBO0FBaVRBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7OztBQTdVQTtBQUFBO0FBQUE7QUFtVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7Ozs7Ozs7O0FBNVZBO0FBQUE7QUFBQTtBQW1XQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFJQTs7Ozs7O0FBalhBO0FBQUE7QUFBQTtBQXVYQTtBQUNBO0FBSUE7Ozs7Ozs7O0FBNVhBO0FBQUE7QUFBQTtBQW1ZQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7O0FBNVpBO0FBQUE7QUFBQTtBQWthQTtBQUNBO0FBSUE7Ozs7QUF2YUE7QUFBQTtBQUFBO0FBMGFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOzs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxkQTtBQUNBO0FBREE7QUFBQTtBQXlkQTs7Ozs7Ozs7Ozs7O0FBV0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQWFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUlBOzs7Ozs7Ozs7O0FBU0E7QUFBQTtBQUVBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFTQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./static/src/js/utils/interaction/modal.js\n");

/***/ }),

/***/ "./static/src/js/utils/network/loadImage.js":
/*!**************************************************!*\
  !*** ./static/src/js/utils/network/loadImage.js ***!
  \**************************************************/
/*! exports provided: decodeImage, loadImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeImage\", function() { return decodeImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadImage\", function() { return loadImage; });\n/* harmony import */ var _events_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/events */ \"./static/src/js/utils/events/events.js\");\n/**\n * @module utils/network/loadImage\n * @author Lars Munkholm <lars.munkholm@akqa.com>\n */\n\n/**\n * Try to decode the image, after it's loaded, and resolve the Promise.\n *\n * @private\n * @param {Element} newImage\n * @returns {Promise<Image>}\n */\n\nvar decodeImage = function decodeImage(newImage) {\n  return \"decode\" in newImage ? newImage.decode().then(function () {\n    return newImage;\n  }) : Promise.resolve(newImage);\n};\n/**\n * Load an image, and return a Promise that resolves once the image is loaded.\n *\n * @param {string} source - The path to the image.\n * @param {Object} [options] - Object of settings.\n * @param {boolean} [options.useSrcset=false] - Set to true to use the `srcset` attribute instead of `src`.\n * @param {string} [options.sizes=\"\"] - If you're using `srcset`, you can also add a `sizes` attribute.\n * @returns {Promise<Image>} Promise that will resolve with the loaded image once it's ready.\n */\n\nfunction loadImage(source) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$useSrcset = _ref.useSrcset,\n      useSrcset = _ref$useSrcset === void 0 ? false : _ref$useSrcset,\n      _ref$sizes = _ref.sizes,\n      sizes = _ref$sizes === void 0 ? \"\" : _ref$sizes;\n\n  var newImage = new Image();\n\n  if (useSrcset && sizes && \"sizes\" in newImage) {\n    newImage.sizes = sizes;\n  }\n\n  return new Promise(function (resolve, reject) {\n    Object(_events_events__WEBPACK_IMPORTED_MODULE_0__[\"addEvent\"])(newImage, \"load\", function () {\n      Object(_events_events__WEBPACK_IMPORTED_MODULE_0__[\"removeEvent\"])(newImage, \"load error\");\n      decodeImage(newImage).then(function (image) {\n        return resolve(image);\n      });\n    });\n    Object(_events_events__WEBPACK_IMPORTED_MODULE_0__[\"addEvent\"])(newImage, \"error\", function () {\n      Object(_events_events__WEBPACK_IMPORTED_MODULE_0__[\"removeEvent\"])(newImage, \"load error\");\n      reject();\n    });\n    newImage[useSrcset ? \"srcset\" : \"src\"] = source;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL25ldHdvcmsvbG9hZEltYWdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9uZXR3b3JrL2xvYWRJbWFnZS5qcz84M2VmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSB1dGlscy9uZXR3b3JrL2xvYWRJbWFnZVxuICogQGF1dGhvciBMYXJzIE11bmtob2xtIDxsYXJzLm11bmtob2xtQGFrcWEuY29tPlxuICovXG5cbmltcG9ydCB7IGFkZEV2ZW50LCByZW1vdmVFdmVudCB9IGZyb20gXCIuLi9ldmVudHMvZXZlbnRzXCI7XG5cblxuXG4vKipcbiAqIFRyeSB0byBkZWNvZGUgdGhlIGltYWdlLCBhZnRlciBpdCdzIGxvYWRlZCwgYW5kIHJlc29sdmUgdGhlIFByb21pc2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RWxlbWVudH0gbmV3SW1hZ2VcbiAqIEByZXR1cm5zIHtQcm9taXNlPEltYWdlPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZUltYWdlID0gbmV3SW1hZ2UgPT4gKFwiZGVjb2RlXCIgaW4gbmV3SW1hZ2UpXG4gICAgPyBuZXdJbWFnZS5kZWNvZGUoKS50aGVuKCgpID0+IG5ld0ltYWdlKVxuICAgIDogUHJvbWlzZS5yZXNvbHZlKG5ld0ltYWdlKTtcblxuXG5cbi8qKlxuICogTG9hZCBhbiBpbWFnZSwgYW5kIHJldHVybiBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBvbmNlIHRoZSBpbWFnZSBpcyBsb2FkZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSAtIFRoZSBwYXRoIHRvIHRoZSBpbWFnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBPYmplY3Qgb2Ygc2V0dGluZ3MuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnVzZVNyY3NldD1mYWxzZV0gLSBTZXQgdG8gdHJ1ZSB0byB1c2UgdGhlIGBzcmNzZXRgIGF0dHJpYnV0ZSBpbnN0ZWFkIG9mIGBzcmNgLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnNpemVzPVwiXCJdIC0gSWYgeW91J3JlIHVzaW5nIGBzcmNzZXRgLCB5b3UgY2FuIGFsc28gYWRkIGEgYHNpemVzYCBhdHRyaWJ1dGUuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxJbWFnZT59IFByb21pc2UgdGhhdCB3aWxsIHJlc29sdmUgd2l0aCB0aGUgbG9hZGVkIGltYWdlIG9uY2UgaXQncyByZWFkeS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRJbWFnZShzb3VyY2UsIHsgdXNlU3Jjc2V0ID0gZmFsc2UsIHNpemVzID0gXCJcIiB9ID0ge30pIHtcbiAgICBjb25zdCBuZXdJbWFnZSA9IG5ldyBJbWFnZSgpO1xuXG4gICAgaWYgKHVzZVNyY3NldCAmJiBzaXplcyAmJiBcInNpemVzXCIgaW4gbmV3SW1hZ2UpIHtcbiAgICAgICAgbmV3SW1hZ2Uuc2l6ZXMgPSBzaXplcztcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBhZGRFdmVudChuZXdJbWFnZSwgXCJsb2FkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50KG5ld0ltYWdlLCBcImxvYWQgZXJyb3JcIik7XG4gICAgICAgICAgICBkZWNvZGVJbWFnZShuZXdJbWFnZSkudGhlbihpbWFnZSA9PiByZXNvbHZlKGltYWdlKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZEV2ZW50KG5ld0ltYWdlLCBcImVycm9yXCIsICgpID0+IHtcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50KG5ld0ltYWdlLCBcImxvYWQgZXJyb3JcIik7XG4gICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmV3SW1hZ2VbdXNlU3Jjc2V0ID8gXCJzcmNzZXRcIiA6IFwic3JjXCJdID0gc291cmNlO1xuICAgIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBS0E7QUFJQTs7Ozs7Ozs7QUFPQTtBQUFBO0FBQ0E7QUFBQTtBQURBO0FBTUE7Ozs7Ozs7Ozs7QUFTQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./static/src/js/utils/network/loadImage.js\n");

/***/ }),

/***/ "./static/src/js/utils/queryString.js":
/*!********************************************!*\
  !*** ./static/src/js/utils/queryString.js ***!
  \********************************************/
/*! exports provided: getQueryString, getParameter, addParameter, deleteParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getQueryString\", function() { return getQueryString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParameter\", function() { return getParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addParameter\", function() { return addParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteParameter\", function() { return deleteParameter; });\n/* harmony import */ var _forEach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./forEach */ \"./static/src/js/utils/forEach.js\");\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\n/**\n * This script provides an easy and safe way to **get, add and delete values from a query string**. This will most likely be\n * from the `window.locations.href` (which is also the default value), but can be set to a custom string.\n *\n * @module utils/queryString\n * @author Søren Beier Husted <soren.husted@akqa.com>\n */\n\n\nvar searchParams = {};\n/**\n * Initialize function that handles the URL objects\n *\n * @param {String} url - The url from which to look for search parameters.\n * @returns {String} The base url without any query string\n * @private\n */\n\nfunction init(url) {\n  // Get url without query string\n  var baseUrl = url.includes(\"?\") ? url.substring(0, url.indexOf(\"?\")) : url; // If baseUrl is new, initialize it\n\n  if (!searchParams[baseUrl]) {\n    searchParams[baseUrl] = new URL(url).searchParams;\n  } // Return the base url\n\n\n  return baseUrl;\n}\n/**\n * Helper function that will remove an elemeent from an array - SHOULD BE A GENERAL UTILITY\n *\n * @param {Array} array - Array to remove element from\n * @param {String} element - Element to remove\n * @returns {Array} Array after element has been removed\n * @private\n */\n\n\nfunction removeFromArray(array, element) {\n  // Find the element's index in the array\n  var index = array.indexOf(element); // If the element exists in the array, remove it\n\n  if (index > -1) {\n    array.splice(index, 1);\n  } // Return the array, with or without changes\n\n\n  return array;\n}\n/**\n * Helper function that infers the correct datatype from string - SHOULD BE A GENERAL UTILITY\n *\n * @param {String} value - The value that will be examined\n * @returns {*} Inferred datatype from string\n * @private\n */\n\n\nfunction getDatatype(value) {\n  if (value === \"undefined\") {\n    return undefined;\n  }\n\n  var regexp = /^(true|false|null)$/;\n  return regexp.test(value) ? JSON.parse(value) : Number(value) || value;\n}\n/**\n * Get query string\n *\n * @example\n * import { getQueryString } from \"./utils/queryString\";\n *\n * // Get current query string\n * let q = getQueryString();\n *\n * @param {String} url - The url to get and set query string. Defaults to current window location\n * @returns {String} The current query string\n */\n\n\nfunction getQueryString() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.location.href;\n  var currentUrl = init(url);\n  return searchParams[currentUrl].toString();\n}\n/**\n * Get value from one or multiple prameter(s)\n *\n * @example\n * import { getParameter } from \"./utils/queryString\";\n *\n * // Values from a single key\n * let val1 = getParameter(\"queryKey\");\n *\n * // Values from multiple keys\n * let val2 = getParameter([\"queryKey1\", \"queryKey2\"]);\n *\n * @param {String|String[]} key - key(s) to get parameter value(s)\n * @param {String} url - The url to get and set query string. Defaults to current window location\n * @returns {Object} An object with the key(s) and their value(s)\n */\n\nfunction getParameter(key) {\n  var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  var currentUrl = init(url);\n  var params = {};\n  /**\n   * Get value(s) from a key\n   *\n   * @param {String} key - The key from which to get value\n   * @returns {Array} The resulting value(s) with data type conversion\n   */\n\n  function setParamsObj(key) {\n    var results = searchParams[currentUrl].getAll(key);\n    var realResults = [];\n\n    if (results.length) {\n      if (results.length === 1) {\n        realResults = getDatatype(results[0]);\n      } else {\n        Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(results, function (result) {\n          realResults.push(getDatatype(result));\n        });\n      }\n\n      return realResults;\n    }\n  } // If key is an array\n\n\n  if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(key)) {\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(key, function (k) {\n      params[k] = setParamsObj(k);\n    });\n  } // If key is a string\n  else if (typeof key === \"string\") {\n      params = setParamsObj(key);\n    } // Return the object with results\n\n\n  return params;\n}\n/**\n * Add parameter(s) to query string\n *\n * @example\n * import { addParameter } from \"./utils/queryString\";\n *\n * // Add a single value to a key\n * addParameter(\"queryKey1\", \"val1\");\n *\n * // Add multiple values to a key\n * addParameter(\"queryKey1\", [\"val1\", \"val2\"]);\n *\n * // Add multiple values to a key and keep old values\n * addParameter(\"queryKey1\", [\"val1\", \"val2\"], false);\n *\n * @param {String} key - The key that will get new value(s)\n * @param {String|Array} value - Value(s) to add to query string\n * @param {Boolean} override - An option to delete all current values before adding the new value(s). Defaults to true\n * @param {String} url - The url to get and set query string. Defaults to current window location\n */\n\nfunction addParameter(key, value) {\n  var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var url = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window.location.href;\n  var currentUrl = init(url); // Clear current value(s)\n\n  if (override) {\n    searchParams[currentUrl].delete(key);\n  } // If multiple values\n\n\n  if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(value)) {\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(value, function (val) {\n      searchParams[currentUrl].append(key, val);\n    });\n  } // If only a single value\n  else if (typeof key === \"string\") {\n      searchParams[currentUrl].append(key, value);\n    }\n}\n/**\n * Delete parameter(s) from query string\n *\n * @example\n * import { deleteParameter } from \"./utils/queryString\";\n *\n * // Delete a single value from a single key\n * deleteParameter(\"queryKey1\", \"val1\");\n *\n * // Delete multiple values from a single key\n * deleteParameter(\"queryKey1\", [\"val1\", \"val2\"]);\n *\n * // Delete all values from a single key\n * deleteParameter(\"queryKey1\");\n *\n * // Delete all values from multiple keys\n * deleteParameter([\"queryKey1\", \"queryKey2\"]);\n *\n * @param {String|String[]} key - The key(s) to remove value(s) from. If array, all values for each item will be deleted\n * @param {String|String[]} value - Value(s) to delete from a single key - Will be ignored if key is an array\n * @param {String} url -The url to get and set query string. Defaults to current window location\n */\n\nfunction deleteParameter(key) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.location.href;\n  var currentUrl = init(url); // If key is a string and a value is parsed\n\n  if (typeof key === \"string\" && value) {\n    // Cache all current values\n    var values = searchParams[currentUrl].getAll(key); // Remove parsed value(s) from the array of all values\n\n    if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(value)) {\n      Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(value, function (val) {\n        values = removeFromArray(values, val);\n      });\n    } else if (typeof value === \"string\") {\n      values = removeFromArray(values, value);\n    } // Delete all values for the parsed key\n\n\n    searchParams[currentUrl].delete(key); // Add the remaining values back into the object\n\n    Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(values, function (val) {\n      searchParams[currentUrl].append(key, val);\n    });\n  } // If no value parameter is parsed, delete all values for the parsed key\n  else {\n      if (Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(key)) {\n        Object(_forEach__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(key, function (k) {\n          searchParams[currentUrl].delete(k);\n        });\n      } else if (typeof key === \"string\") {\n        searchParams[currentUrl].delete(key);\n      }\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./static/src/js/utils/queryString.js\n");

/***/ }),

/***/ "./static/src/js/utils/splitter.js":
/*!*****************************************!*\
  !*** ./static/src/js/utils/splitter.js ***!
  \*****************************************/
/*! exports provided: splitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitter\", function() { return splitter; });\n/* harmony import */ var _typeCheckers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeCheckers */ \"./static/src/js/utils/typeCheckers.js\");\n/**\n * Split a string into an array, and then run an optional callback function on each item.\n *\n * If a string is given, it will be **split by spaces and commas to get an array**.\n * If an array is given, no pre-processing happens, but the callback will still be executed (however, in this case please use `forEach()` instead).\n * All other input types are ignored.\n *\n * @module utils/splitter\n * @author Anders Gissel <anders.gissel@akqa.com>\n *\n *\n * @example <caption>Split a string into an array:</caption>\n * import { splitter } from \"./utils/splitter\";\n *\n * const str = \"apple pear orange\";\n * splitter(str); // Returns [\"apple\", \"pear\", \"orange\"]\n *\n *\n * @example <caption>Split a string and log each item to the console:</caption>\n * import { splitter } from \"./utils/splitter\";\n *\n * const str = \"apple pear orange\";\n * splitter(str, item => window.console.log(item)); // Logs \"apple\", \"pear\", \"orange\" into the console. Returns [\"apple\",\"pear\",\"orange\"].\n */\n\n/**\n * Split a string into an array.\n *\n * @param {string|Array} input - String containing one or more items, separated by space/comma, or an array of entries.\n * @param {function} [callback] - Optional callback to run for each entry in the given array.\n * @returns {Array} The processed data in the form of an array.\n */\n\nfunction splitter(input, callback) {\n  var inputArray = typeof input === \"string\" ? input.replace(/,/gm, \" \") // First, replace commas with spaces\n  .replace(/[\\s]{2,}/gm, \" \") // Then, replace two or more spaces with just one.\n  .trim() // Remove leading/trailing whitespace and similar crap\n  .split(\" \") : Object(_typeCheckers__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(input) ? input : [];\n\n  if (typeof callback === \"function\") {\n    inputArray.forEach(function (inputEntry) {\n      if (inputEntry !== undefined) {\n        callback(inputEntry);\n      }\n    });\n  }\n\n  return inputArray;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL3NwbGl0dGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9qcy91dGlscy9zcGxpdHRlci5qcz81MWMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3BsaXQgYSBzdHJpbmcgaW50byBhbiBhcnJheSwgYW5kIHRoZW4gcnVuIGFuIG9wdGlvbmFsIGNhbGxiYWNrIGZ1bmN0aW9uIG9uIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiBhIHN0cmluZyBpcyBnaXZlbiwgaXQgd2lsbCBiZSAqKnNwbGl0IGJ5IHNwYWNlcyBhbmQgY29tbWFzIHRvIGdldCBhbiBhcnJheSoqLlxuICogSWYgYW4gYXJyYXkgaXMgZ2l2ZW4sIG5vIHByZS1wcm9jZXNzaW5nIGhhcHBlbnMsIGJ1dCB0aGUgY2FsbGJhY2sgd2lsbCBzdGlsbCBiZSBleGVjdXRlZCAoaG93ZXZlciwgaW4gdGhpcyBjYXNlIHBsZWFzZSB1c2UgYGZvckVhY2goKWAgaW5zdGVhZCkuXG4gKiBBbGwgb3RoZXIgaW5wdXQgdHlwZXMgYXJlIGlnbm9yZWQuXG4gKlxuICogQG1vZHVsZSB1dGlscy9zcGxpdHRlclxuICogQGF1dGhvciBBbmRlcnMgR2lzc2VsIDxhbmRlcnMuZ2lzc2VsQGFrcWEuY29tPlxuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5TcGxpdCBhIHN0cmluZyBpbnRvIGFuIGFycmF5OjwvY2FwdGlvbj5cbiAqIGltcG9ydCB7IHNwbGl0dGVyIH0gZnJvbSBcIi4vdXRpbHMvc3BsaXR0ZXJcIjtcbiAqXG4gKiBjb25zdCBzdHIgPSBcImFwcGxlIHBlYXIgb3JhbmdlXCI7XG4gKiBzcGxpdHRlcihzdHIpOyAvLyBSZXR1cm5zIFtcImFwcGxlXCIsIFwicGVhclwiLCBcIm9yYW5nZVwiXVxuICpcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5TcGxpdCBhIHN0cmluZyBhbmQgbG9nIGVhY2ggaXRlbSB0byB0aGUgY29uc29sZTo8L2NhcHRpb24+XG4gKiBpbXBvcnQgeyBzcGxpdHRlciB9IGZyb20gXCIuL3V0aWxzL3NwbGl0dGVyXCI7XG4gKlxuICogY29uc3Qgc3RyID0gXCJhcHBsZSBwZWFyIG9yYW5nZVwiO1xuICogc3BsaXR0ZXIoc3RyLCBpdGVtID0+IHdpbmRvdy5jb25zb2xlLmxvZyhpdGVtKSk7IC8vIExvZ3MgXCJhcHBsZVwiLCBcInBlYXJcIiwgXCJvcmFuZ2VcIiBpbnRvIHRoZSBjb25zb2xlLiBSZXR1cm5zIFtcImFwcGxlXCIsXCJwZWFyXCIsXCJvcmFuZ2VcIl0uXG4gKi9cblxuXG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSBcIi4vdHlwZUNoZWNrZXJzXCI7XG5cblxuXG4vKipcbiAqIFNwbGl0IGEgc3RyaW5nIGludG8gYW4gYXJyYXkuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IGlucHV0IC0gU3RyaW5nIGNvbnRhaW5pbmcgb25lIG9yIG1vcmUgaXRlbXMsIHNlcGFyYXRlZCBieSBzcGFjZS9jb21tYSwgb3IgYW4gYXJyYXkgb2YgZW50cmllcy5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IFtjYWxsYmFja10gLSBPcHRpb25hbCBjYWxsYmFjayB0byBydW4gZm9yIGVhY2ggZW50cnkgaW4gdGhlIGdpdmVuIGFycmF5LlxuICogQHJldHVybnMge0FycmF5fSBUaGUgcHJvY2Vzc2VkIGRhdGEgaW4gdGhlIGZvcm0gb2YgYW4gYXJyYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdHRlcihpbnB1dCwgY2FsbGJhY2spIHtcblxuICAgIGNvbnN0IGlucHV0QXJyYXkgPSB0eXBlb2YgaW5wdXQgPT09IFwic3RyaW5nXCIgP1xuICAgICAgICBpbnB1dFxuICAgICAgICAgICAgLnJlcGxhY2UoLywvZ20sIFwiIFwiKSAvLyBGaXJzdCwgcmVwbGFjZSBjb21tYXMgd2l0aCBzcGFjZXNcbiAgICAgICAgICAgIC5yZXBsYWNlKC9bXFxzXXsyLH0vZ20sIFwiIFwiKSAvLyBUaGVuLCByZXBsYWNlIHR3byBvciBtb3JlIHNwYWNlcyB3aXRoIGp1c3Qgb25lLlxuICAgICAgICAgICAgLnRyaW0oKSAvLyBSZW1vdmUgbGVhZGluZy90cmFpbGluZyB3aGl0ZXNwYWNlIGFuZCBzaW1pbGFyIGNyYXBcbiAgICAgICAgICAgIC5zcGxpdChcIiBcIikgOlxuICAgICAgICBpc0FycmF5KGlucHV0KSA/IGlucHV0IDogW107XG5cbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgaW5wdXRBcnJheS5mb3JFYWNoKGlucHV0RW50cnkgPT4ge1xuICAgICAgICAgICAgaWYgKGlucHV0RW50cnkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGlucHV0RW50cnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5wdXRBcnJheTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTtBQUlBOzs7Ozs7OztBQU9BO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./static/src/js/utils/splitter.js\n");

/***/ }),

/***/ "./static/src/js/utils/typeCheckers.js":
/*!*********************************************!*\
  !*** ./static/src/js/utils/typeCheckers.js ***!
  \*********************************************/
/*! exports provided: isElement, isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isElement\", function() { return isElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/**\n * A bunch of utilities to check whether or not a symbol fits certain criteria.\n *\n * @module utils/typeCheckers\n * @author Anders Gissel <anders.gissel@akqa.com>\n */\n\n/**\n * Find out whether or not the given argument is an element that would react somewhat normally to DOM-manipulations.\n *\n * @since 3.7.0\n * @param {*} element - The element to check.\n * @returns {boolean} `true` if the given argument is an element (or document, or window), and `false` otherwise.\n */\nfunction isElement(element) {\n  return element instanceof Element || element instanceof Document || element instanceof Window;\n}\n/**\n * Find out whether or not the given collection (or whatever) is an array.\n *\n * @since 3.7.0\n * @param {*} collection - The collection to check.\n * @returns {boolean} `true` if the given collection is an array, `false` otherwise.\n */\n\nfunction isArray(collection) {\n  return collection && collection.constructor === Array;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL2pzL3V0aWxzL3R5cGVDaGVja2Vycy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3N0YXRpYy9zcmMvanMvdXRpbHMvdHlwZUNoZWNrZXJzLmpzPzUzNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGJ1bmNoIG9mIHV0aWxpdGllcyB0byBjaGVjayB3aGV0aGVyIG9yIG5vdCBhIHN5bWJvbCBmaXRzIGNlcnRhaW4gY3JpdGVyaWEuXG4gKlxuICogQG1vZHVsZSB1dGlscy90eXBlQ2hlY2tlcnNcbiAqIEBhdXRob3IgQW5kZXJzIEdpc3NlbCA8YW5kZXJzLmdpc3NlbEBha3FhLmNvbT5cbiAqL1xuXG5cblxuLyoqXG4gKiBGaW5kIG91dCB3aGV0aGVyIG9yIG5vdCB0aGUgZ2l2ZW4gYXJndW1lbnQgaXMgYW4gZWxlbWVudCB0aGF0IHdvdWxkIHJlYWN0IHNvbWV3aGF0IG5vcm1hbGx5IHRvIERPTS1tYW5pcHVsYXRpb25zLlxuICpcbiAqIEBzaW5jZSAzLjcuMFxuICogQHBhcmFtIHsqfSBlbGVtZW50IC0gVGhlIGVsZW1lbnQgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIHRoZSBnaXZlbiBhcmd1bWVudCBpcyBhbiBlbGVtZW50IChvciBkb2N1bWVudCwgb3Igd2luZG93KSwgYW5kIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNFbGVtZW50KGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudCBpbnN0YW5jZW9mIEVsZW1lbnQgfHxcbiAgICAgICAgZWxlbWVudCBpbnN0YW5jZW9mIERvY3VtZW50IHx8XG4gICAgICAgIGVsZW1lbnQgaW5zdGFuY2VvZiBXaW5kb3c7XG59XG5cblxuXG4vKipcbiAqIEZpbmQgb3V0IHdoZXRoZXIgb3Igbm90IHRoZSBnaXZlbiBjb2xsZWN0aW9uIChvciB3aGF0ZXZlcikgaXMgYW4gYXJyYXkuXG4gKlxuICogQHNpbmNlIDMuNy4wXG4gKiBAcGFyYW0geyp9IGNvbGxlY3Rpb24gLSBUaGUgY29sbGVjdGlvbiB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaWYgdGhlIGdpdmVuIGNvbGxlY3Rpb24gaXMgYW4gYXJyYXksIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheShjb2xsZWN0aW9uKSB7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb24gJiYgY29sbGVjdGlvbi5jb25zdHJ1Y3RvciA9PT0gQXJyYXk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FBU0E7Ozs7Ozs7QUFPQTtBQUNBO0FBR0E7QUFJQTs7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./static/src/js/utils/typeCheckers.js\n");

/***/ }),

/***/ "./static/src/scss/components/js/modal.scss":
/*!**************************************************!*\
  !*** ./static/src/scss/components/js/modal.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var update = __webpack_require__(/*! ../../../../../node_modules/style-loader/lib/addStyleUrl.js */ \"./node_modules/style-loader/lib/addStyleUrl.js\")(\n  __webpack_require__(/*! !../../../../../node_modules/file-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src??postcss!../../../../../node_modules/sass-loader/lib/loader.js??ref--6-3!./modal.scss */ \"./node_modules/file-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./static/src/scss/components/js/modal.scss\")\n, {\"sourceMap\":true,\"hmr\":true});\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdGF0aWMvc3JjL3Njc3MvY29tcG9uZW50cy9qcy9tb2RhbC5zY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3RhdGljL3NyYy9zY3NzL2NvbXBvbmVudHMvanMvbW9kYWwuc2Nzcz84M2QwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlVXJsLmpzXCIpKFxuICByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvZmlsZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3Bvc3Rjc3MhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNi0zIS4vbW9kYWwuc2Nzc1wiKVxuLCB7XCJzb3VyY2VNYXBcIjp0cnVlLFwiaG1yXCI6dHJ1ZX0pO1xuaWYobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9wb3N0Y3NzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTYtMyEuL21vZGFsLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9maWxlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cG9zdGNzcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS02LTMhLi9tb2RhbC5zY3NzXCIpKTtcbiAgfSk7XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./static/src/scss/components/js/modal.scss\n");

/***/ })

/******/ });